{
    "version": "https://jsonfeed.org/version/1",
    "title": "诗岸梦行舟",
    "subtitle": "分享计算机知识以及各种心得总结",
    "icon": "https://735690757.github.io/images/favicon.ico",
    "description": "愿世间所有的美好都得以祝愿",
    "home_page_url": "https://735690757.github.io",
    "items": [
        {
            "id": "https://735690757.github.io/DSLearnNote/ListMerge/",
            "url": "https://735690757.github.io/DSLearnNote/ListMerge/",
            "title": "两个有序链表合并的代码题",
            "date_published": "2024-09-10T03:00:00.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>设计实现将两个带有头节点的有序链表合并为一个新的有序链表。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">marge</span><span class=\"token punctuation\">(</span>LNode <span class=\"token operator\">*</span>A<span class=\"token punctuation\">,</span>LNode <span class=\"token operator\">*</span>B<span class=\"token punctuation\">,</span>LNode <span class=\"token operator\">*</span>C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    LNode p <span class=\"token operator\">=</span> A<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    LNode q <span class=\"token operator\">=</span> B<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    LNode r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    C <span class=\"token operator\">=</span> A<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    r<span class=\"token operator\">=</span>c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> null<span class=\"token operator\">||</span>q <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>data <span class=\"token operator\">&lt;=</span> q<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            r<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            p <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            r <span class=\"token operator\">=</span> r<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            r<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            q <span class=\"token operator\">=</span> q<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            r <span class=\"token operator\">=</span> r<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "DS",
                "数据结构"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/KnowledgeSummary/",
            "url": "https://735690757.github.io/Operate-system/KnowledgeSummary/",
            "title": "操作系统细碎知识点及公式速记（持续更新）",
            "date_published": "2024-09-09T12:41:00.000Z",
            "content_html": "<h1 id=\"操作系统细碎知识点总结\"><a class=\"markdownIt-Anchor\" href=\"#操作系统细碎知识点总结\">#</a> 操作系统细碎知识点总结</h1>\n<ol>\n<li>现代操作系统两个最基本特征：<span class=\"label primary\">并发</span>  与  <span class=\"label primary\">共享</span></li>\n<li>OS 主要特征是：<span class=\"label primary\">并发</span>、<span class=\"label primary\">共享</span>、<span class=\"label primary\">虚拟</span> 以及 <span class=\"label primary\">异步</span></li>\n<li>操作系统出现的标志：<span class=\"label primary\">多道程序设计</span> 以及 <span class=\"label primary\">分时操作系统</span> 的出现</li>\n<li>高级调度：<span class=\"label primary\">作业调度</span></li>\n<li>中级调度：<span class=\"label primary\">内存调度</span></li>\n<li>低级调度：<span class=\"label primary\">进程调度</span></li>\n<li>多级存储分为三部分：<span class=\"label primary\">高速缓存</span>、<span class=\"label primary\">内存 / 主存</span> 以及 <span class=\"label primary\">外存</span></li>\n<li>进程的调度时机：<span class=\"label primary\">时间片完</span>、<span class=\"label primary\">正常结束</span>、<span class=\"label primary\">P 操作</span>、<span class=\"label primary\">IO 请求</span> 以及 <span class=\"label primary\">优先级抢占</span></li>\n<li>文件系统的功能：<span class=\"label primary\">按名存取</span>、<span class=\"label primary\">存储空间管理</span>、<span class=\"label primary\">文件共享与保护</span> 以及 <span class=\"label primary\">文件操作</span></li>\n<li>SPOOLING 系统的组成：<span class=\"label primary\">输入进程</span>、<span class=\"label primary\">输入缓冲区</span>、<span class=\"label primary\">输入井</span>、<span class=\"label primary\">输出进程</span>、<span class=\"label primary\">输出缓冲区</span> 以及 <span class=\"label primary\">输出井</span></li>\n<li>进程的结构特征（有争议 / 不严谨）：<span class=\"label primary\">独立性</span>、<span class=\"label primary\">动态性</span>、<span class=\"label primary\">异步性</span> 以及 <span class=\"label primary\">并发性</span></li>\n<li>虚拟存储器的主要特征：<span class=\"label primary\">多次性</span>、<span class=\"label primary\">对换性</span> 以及 <span class=\"label primary\">虚拟性</span></li>\n<li>所学的进程调度算法中，最中庸、最能让长作业和短作业都满意的调度算法是：<span class=\"label primary\">多级反馈队列调度算法</span></li>\n<li>进程是<span class=\"label primary\">资源分配</span>的基本单位，进程是<span class=\"label primary\">调度</span>的基本单位</li>\n<li>程序的几种装入方式：<span class=\"label primary\">静态装入</span>、<span class=\"label primary\">可重定位装入</span> 以及 <span class=\"label primary\">动态运行时装入</span></li>\n<li>程序的几种链接方式：<span class=\"label primary\">静态链接</span>、<span class=\"label primary\">装入时动态链接</span> 以及 <span class=\"label primary\">运行时动态链接</span></li>\n<li>程序的顺序执行的特征：<span class=\"label primary\">顺序性</span>、<span class=\"label primary\">封闭性</span> 以及 <span class=\"label primary\">结果可再现性</span></li>\n<li>请求分页式虚拟存储系统必须至少具有三种硬件支持，即<span class=\"label primary\">页表机制</span>、<span class=\"label primary\">缺页中断机构</span> 以及 <span class=\"label primary\">地址变换机构</span></li>\n<li>程序并发执行的特性有：<span class=\"label primary\">间断性</span>、<span class=\"label primary\">失去封闭性</span>、<span class=\"label primary\">失去结果可再现性</span></li>\n<li>进程控制块的信息有：<span class=\"label primary\">进程标识符</span>、<span class=\"label primary\">处理机状态</span>、<span class=\"label primary\">进程控制信息</span>、<span class=\"label primary\">进程调度信息</span></li>\n<li>扇区是磁盘空间管理的最基本单位，其物理地址是由：<span class=\"label primary\">柱面号</span>、<span class=\"label primary\">扇区号</span>、<span class=\"label primary\">磁头号</span>三部分组成的</li>\n<li>火车站售票系统属于<span class=\"label primary\">实时系统</span></li>\n<li>I/O 管制程序的主要功能是管理<span class=\"label primary\">设备、控制器和通道</span>的状态信息</li>\n<li>撒</li>\n</ol>\n<h1 id=\"常用公式速记\"><a class=\"markdownIt-Anchor\" href=\"#常用公式速记\">#</a> 常用公式速记</h1>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mtext>周转时间</mtext></msub><mo>=</mo><msub><mi>T</mi><mtext>结束时间</mtext></msub><mo>−</mo><msub><mi>T</mi><mtext>提交时间</mtext></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\nT_{周转时间}=T_{结束时间}-T_{提交时间}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">周</span><span class=\"mord cjk_fallback mtight\">转</span><span class=\"mord cjk_fallback mtight\">时</span><span class=\"mord cjk_fallback mtight\">间</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">结</span><span class=\"mord cjk_fallback mtight\">束</span><span class=\"mord cjk_fallback mtight\">时</span><span class=\"mord cjk_fallback mtight\">间</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">提</span><span class=\"mord cjk_fallback mtight\">交</span><span class=\"mord cjk_fallback mtight\">时</span><span class=\"mord cjk_fallback mtight\">间</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/DSLearnNote/GeneralizedLists/",
            "url": "https://735690757.github.io/DSLearnNote/GeneralizedLists/",
            "title": "考试中有关广义表的两个常用函数的解",
            "date_published": "2024-09-09T03:00:00.000Z",
            "content_html": "<h1 id=\"认识广义表\"><a class=\"markdownIt-Anchor\" href=\"#认识广义表\">#</a> 认识广义表</h1>\n<p>广义表是线性表的推广，与线性表不同的是，线性表中的每一个数据元素都属于同一数据对象。</p>\n<p>广义表可以表示为：</p>\n<ol>\n<li>空表：()</li>\n<li>表头：(表头)</li>\n<li>表头 + 表尾：(表头，表尾)</li>\n</ol>\n<p><strong>实际上这就是他的基本结构，而对于其中的元素来说，它可以是表，也可以是元素，这就是广义！</strong></p>\n<h1 id=\"取头head\"><a class=\"markdownIt-Anchor\" href=\"#取头head\">#</a> 取头 Head ()</h1>\n<p>Head 是取头操作，他拿的是一个<strong>元素</strong>或者一个<strong>表</strong></p>\n<h1 id=\"取尾tail\"><a class=\"markdownIt-Anchor\" href=\"#取尾tail\">#</a> 取尾 Tail ()</h1>\n<p>Tail 是取尾操作，他拿到的必是一个<strong>表</strong></p>\n<h1 id=\"巧记\"><a class=\"markdownIt-Anchor\" href=\"#巧记\">#</a> 巧记</h1>\n<p>对于蟒蛇（Python）来说，头只有一个，而它的尾巴很长。</p>\n<p>所以，取头<strong> Head</strong> 元素比<strong>较单一</strong>，取尾<strong> Tail</strong> 往往<strong>比较长</strong>。</p>\n<h1 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h1>\n<div class=\"note primary\">\n<p>A=（a，b）</p>\n<p>B=（A，A）</p>\n<p>C=（a，（b，A），B）</p>\n<p>对于操作：Tail（Head（Tail（C）））的结果是什么？</p>\n</div>\n<h1 id=\"解答\"><a class=\"markdownIt-Anchor\" href=\"#解答\">#</a> 解答</h1>\n<p>Tail（C）尾巴长：（a，<ins class=\"dot warning\">（b，A），B</ins> ）</p>\n<p><span class=\"label info\">Tail（C）=（（b，A），B）</span></p>\n<p>Head（Tail（C））头短：（<ins class=\"dot warning\">（b，A）</ins>，B）</p>\n<p><span class=\"label info\">Head（Tail（C））=（b，A）</span></p>\n<p>Tail（Head（Tail（C）））尾巴长：（b，<ins class=\"dot warning\">A</ins>）</p>\n<p><span class=\"label info\">Tail（Head（Tail（C）））=（A）</span></p>\n<p><strong>尾巴长必是一个表，头短可能是一个表也可能是一个元素</strong></p>\n",
            "tags": [
                "DS",
                "数据结构"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/kcsj/",
            "url": "https://735690757.github.io/Operate-system/kcsj/",
            "title": "操作系统课程设计",
            "date_published": "2024-01-04T07:41:00.000Z",
            "content_html": "<h1 id=\"虚拟存储器管理\"><a class=\"markdownIt-Anchor\" href=\"#虚拟存储器管理\">#</a> 虚拟存储器管理</h1>\n<iframe src=\"//player.bilibili.com/player.html?aid=793352357&bvid=BV1KC4y1v7JM&cid=1393861516&p=1\" width=\"788px\" height=\"443px\"  scrolling=\"yes\" border=\"0\" frameborder=\"no\" framespacing=\"10\" allowfullscreen=\"true\"> </iframe>\n<h2 id=\"什么是虚拟存储器\"><a class=\"markdownIt-Anchor\" href=\"#什么是虚拟存储器\">#</a> 什么是虚拟存储器？</h2>\n<p>​ 虚拟存储器是一种计算机内存管理技术，它通过将计算机的硬盘空间作为辅助存储器，允许程序使用比物理内存更大的地址空间。虚拟存储器的目标是提供更大的可用内存空间，以便同时运行更多的程序，而不受物理内存的限制。</p>\n<p>​ 虚拟存储的实现是基于局部存储原理的，要理解虚拟存储我们就要去理解局部存储的是实现，即：分页存储、分段存储、段页式存储。</p>\n<p><strong>（这里我们重点掌握具有块表的分页存储）</strong></p>\n<h2 id=\"课程设计核心目的\"><a class=\"markdownIt-Anchor\" href=\"#课程设计核心目的\">#</a> 课程设计核心目的？</h2>\n<p><ins class=\"wavy\">将逻辑地址转为物理地址</ins></p>\n<h1 id=\"页表\"><a class=\"markdownIt-Anchor\" href=\"#页表\">#</a> 页表？</h1>\n<table>\n<thead>\n<tr>\n<th><strong>页号</strong></th>\n<th><strong>块号</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td>4</td>\n</tr>\n<tr>\n<td>3</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n<p>针对这个课程设计，我们简单的理解为应用页表就是通过页号，来去找到块号</p>\n<p><a href=\"https://imgse.com/i/pivXrrt\"><img data-src=\"https://s11.ax1x.com/2024/01/04/pivXrrt.png\" alt=\"地址转换\" style=\"zoom: 67%;\" /></a></p>\n<p>由虚拟地址（逻辑地址）转换为物理地址，这就是页表最核心的作用！</p>\n<h1 id=\"为什么要用虚拟内存\"><a class=\"markdownIt-Anchor\" href=\"#为什么要用虚拟内存\">#</a> 为什么要用虚拟内存</h1>\n<p>但是，我们的内存很小，还想运行多个应用程序，这必然无法满足所有的有的应用程序一次性全部加载到内存之中。根据局部性理论基础，我们又引申出页面的对换算法（页面置换算法）。</p>\n<p>本次课程设计采用的是 Clock 算法</p>\n<p>将页表扩充，引入访问位、修改位、有效位（本次仅用于算法实现，它其实用其他</p>\n<p>更有用的功能，在此不做介绍）</p>\n<table>\n<thead>\n<tr>\n<th><strong>修改位</strong></th>\n<th><strong>访问位</strong></th>\n<th><strong>重要排名</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>4</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>3</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>2</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>在置换时，优先考虑不那么重要的（排名越低越不重要），对于不重要的页优先换出</p>\n<h1 id=\"状态转换\"><a class=\"markdownIt-Anchor\" href=\"#状态转换\">#</a> 状态转换？</h1>\n<p>这里稍后同步，大家可以先看视频里的有关状态转换的图。</p>\n<h1 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @Date 2023/12/4 上午 10:04</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @Description TODO 诗岸梦行舟</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;limits></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"iostream\"</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"windows.h\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"unistd.h\"</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 颜色枚举，为了好看</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">ConsoleColor</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Black <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Blue <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Green <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Cyan <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Red <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Magenta <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    Yellow <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    White <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    Gray <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 设置文本颜色函数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>ConsoleColor text<span class=\"token punctuation\">,</span> ConsoleColor background<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">int</span> color <span class=\"token operator\">=</span> text <span class=\"token operator\">+</span> background <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">SetConsoleTextAttribute</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetStdHandle</span><span class=\"token punctuation\">(</span>STD_OUTPUT_HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// 块大小</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">blockSize</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">// 页大小</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">pageSize</span> <span class=\"token expression\"><span class=\"token number\">2</span></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// 快表尺寸</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">fastTableDimensions</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">// 页表尺寸</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">pageTableDimensions</span> <span class=\"token expression\"><span class=\"token number\">6</span></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">// 程序最大逻辑地址</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> logicalMaxAddress <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 逻辑地址数据结构 -> 页</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">logicalAddressDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">int</span> pageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">int</span> inPageAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">// 页逻辑地址实现机构</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>logicalAddressDataStruct logicalAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">// 模拟外存中单条数据的数据结构</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">externalMemoryDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">int</span> externalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">int</span> externalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">// 访问位</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">bool</span> accessBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\">// 修改位</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">bool</span> modifyBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\">// 有效位</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">bool</span> validBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">// 外存所有存储结构，也就是最大逻辑地址 100 的一半，50 页</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>externalMemoryDataStruct externalMemory<span class=\"token punctuation\">[</span>logicalMaxAddress <span class=\"token operator\">/</span> pageSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">// 模拟内存中单条数据的数据结构 (页表)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">internalStorageDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">int</span> internalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">int</span> internalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\">// 访问位</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">bool</span> accessBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\">// 修改位</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">bool</span> modifyBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">// 有效位</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">bool</span> validBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">// 页表实体</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>internalStorageDataStruct pageTable<span class=\"token punctuation\">[</span>pageTableDimensions<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">// 快表数据结构</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">fastTableDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">int</span> fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">int</span> fastTableBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token comment\">// 访问位</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">bool</span> accessBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\">// 修改位</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">bool</span> modifyBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token comment\">// 有效位</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">bool</span> validBit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\">// 快表实体</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>fastTableDataStruct fastTable<span class=\"token punctuation\">[</span>fastTableDimensions<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">// 快表置换排行榜数据结构</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">rankForFastTableDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">int</span> pageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">int</span> fastTableIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\">// 页表置换排行榜数据结构</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">rankForPageTableDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">int</span> pageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">int</span> pageTableIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\">// 物理地址数据结构</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">physicalAddressDataStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">int</span> blockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token keyword\">int</span> internalBlockAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\">// 转换后的物理地址实体</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>physicalAddressDataStruct physicalAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"108\"></td><td><pre> * @Describe 初始化外存数据</pre></td></tr><tr><td data-num=\"109\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InitializeExternalData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> logicalMaxAddress <span class=\"token operator\">/</span> pageSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token comment\">// 计算页号与块号</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        externalMemory<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>externalPageNumber <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        externalMemory<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>externalBlockNumber <span class=\"token operator\">=</span> i <span class=\"token operator\">/</span> blockSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\">//    for (int i = 0; i &lt; logicalMaxAddress / pageSize; ++i) &#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">//        cout&lt;&lt;externalMemory[i].externalPageNumber&lt;&lt;\"   \"&lt;&lt;externalMemory[i].externalBlockNumber&lt;&lt;endl;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">//    &#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"122\"></td><td><pre> * @Describe 从外存中寻找所缺失的页</pre></td></tr><tr><td data-num=\"123\"></td><td><pre> * @return externalMemoryDataStruct 返回找到的外存数据页</pre></td></tr><tr><td data-num=\"124\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>externalMemoryDataStruct <span class=\"token function\">LookMissingPageFromExternalMemory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> logicalAddressPageNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> logicalMaxAddress <span class=\"token operator\">/</span> pageSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token comment\">// 计算页号与块号</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>externalMemory<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>externalPageNumber <span class=\"token operator\">==</span> logicalAddressPageNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token keyword\">return</span> externalMemory<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PageTableVisualization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Magenta<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------页表（内存）-------------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"页号：\"</span> <span class=\"token operator\">&lt;&lt;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  块号：\"</span> <span class=\"token operator\">&lt;&lt;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalBlockNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  访问位：\"</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>             <span class=\"token operator\">&lt;&lt;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  修改位：\"</span> <span class=\"token operator\">&lt;&lt;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  有效位：\"</span> <span class=\"token operator\">&lt;&lt;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>             <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"--------------------------------------------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">FastTableVisualization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Cyan<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token comment\">//    sleep(1);</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"----------------------快表-----------------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"页号：\"</span> <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  块号：\"</span> <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableBlockNumber</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>             <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  访问位：\"</span> <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  修改位：\"</span> <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  有效位：\"</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>             <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"160\"></td><td><pre> * @Describe 初始化页表</pre></td></tr><tr><td data-num=\"161\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InitializePageTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Cyan<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"诗岸梦行舟\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"操作系统课程设计：虚拟存储器管理\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token comment\">// 系统请求的逻辑地址</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">int</span> requestLogicalAddressByOS <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token comment\">// 初始化外存数据结构</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token function\">InitializeExternalData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token comment\">// 快表发现位，真就是发现了，假就是没发现</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token keyword\">bool</span> fastTableFind <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token comment\">// 在快表的哪一位发现的？</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">int</span> fastTableFindPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token comment\">// 页表发现位，真就是发现了，假就是没发现</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    <span class=\"token keyword\">bool</span> pageTableFind <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token comment\">// 在页表的哪一位发现的？</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token keyword\">int</span> pageTableFindPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token comment\">// 当前内存容量（页表剩余容量）</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token keyword\">int</span> remainingCapacityOfPageTable <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token comment\">// 当前快表容量（快表剩余容量）</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token keyword\">int</span> remainingCapacityOfFastTable <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>        <span class=\"token comment\">// 初始化物理地址数据暂存</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>        physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Blue<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token comment\">//        sleep(2);</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"系统基本信息：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" +------------------------+\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"----------------------+\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" |  块大小：\"</span> <span class=\"token operator\">&lt;&lt;</span> blockSize <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"             |\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"       xx大学       |\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" |  页大小：\"</span> <span class=\"token operator\">&lt;&lt;</span> pageSize <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"             |\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"     专业     |\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" |  最大逻辑地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> logicalMaxAddress <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"     |\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"     OS  课程设计     |\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" |  快表尺寸：\"</span> <span class=\"token operator\">&lt;&lt;</span> fastTableDimensions <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"           |\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"   诗岸梦行舟  |\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" |  页表尺寸：\"</span> <span class=\"token operator\">&lt;&lt;</span> pageTableDimensions <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"           |\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" 虚 拟 存 储 器 管 理 |\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" +------------------------+\"</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"----------------------+\"</span><span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>        <span class=\"token function\">FastTableVisualization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>        <span class=\"token function\">PageTableVisualization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入应用程序请求的逻辑地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        cin <span class=\"token operator\">>></span> requestLogicalAddressByOS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>        <span class=\"token comment\">// 结束程序</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>requestLogicalAddressByOS <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>        <span class=\"token comment\">// 逻辑地址越界</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>requestLogicalAddressByOS <span class=\"token operator\">></span> logicalMaxAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Red<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"您请求的地址超出最大逻辑地址！产生越界中断！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Cyan<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"您请求的十进制地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> requestLogicalAddressByOS <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"225\"></td><td><pre>         * 计算逻辑地址数据</pre></td></tr><tr><td data-num=\"226\"></td><td><pre>         * P = [A / L]</pre></td></tr><tr><td data-num=\"227\"></td><td><pre>         * d = A % L</pre></td></tr><tr><td data-num=\"228\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        logicalAddress<span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> requestLogicalAddressByOS <span class=\"token operator\">/</span> pageSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>        logicalAddress<span class=\"token punctuation\">.</span>inPageAddress <span class=\"token operator\">=</span> requestLogicalAddressByOS <span class=\"token operator\">%</span> pageSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"计算后形成逻辑地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Magenta<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+---页号---+---页内地址----+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"|    \"</span> <span class=\"token operator\">&lt;&lt;</span> logicalAddress<span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    |       \"</span> <span class=\"token operator\">&lt;&lt;</span> logicalAddress<span class=\"token punctuation\">.</span>inPageAddress <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"       |\"</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>             <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+----------+---------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token comment\">//        cout&lt;&lt;\"按回车继续执行...\";</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre><span class=\"token comment\">//        cin.get();cin.get();</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>        <span class=\"token comment\">// CPU 检索块表</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统检索快表...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber <span class=\"token operator\">==</span> logicalAddress<span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>                <span class=\"token comment\">// 在快表中发现了与之对应的页号的数据页</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>                <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统在快表中发现了相应的数据页!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>                fastTableFindPoint <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                <span class=\"token comment\">// 将发现检查位置真</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                fastTableFind <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>                <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fastTableFind<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>            <span class=\"token comment\">// 快表中没有，访问页表</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Yellow<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"快表中没有发现相应的数据页!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统检索页表...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>            <span class=\"token comment\">// 从内存中（页表）寻找所缺失的页</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber <span class=\"token operator\">==</span> logicalAddress<span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>                    <span class=\"token comment\">// 在内存中（页表）找到了数据页</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统在页表中发现了相应的数据页!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>                    pageTableFind <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>                    pageTableFindPoint <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pageTableFind<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>                <span class=\"token comment\">// 页表（内存）中没有</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>                <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Yellow<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"页中没有发现相应的数据页!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>                <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统会正在从外存中抽取页...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>                <span class=\"token comment\">// 从外存中抽取页</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>                externalMemoryDataStruct externalMemoryFindPage <span class=\"token operator\">=</span> <span class=\"token function\">LookMissingPageFromExternalMemory</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>                        logicalAddress<span class=\"token punctuation\">.</span>pageNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>                <span class=\"token comment\">/*cout&lt;&lt;externalMemoryFindPage.externalPageNumber&lt;&lt;\"  \"&lt;&lt;externalMemoryFindPage.externalBlockNumber;*/</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"成功抽取到了，现在正在检查内存是否已满...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>                <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>remainingCapacityOfPageTable <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>                    <span class=\"token comment\">// 内存（页表）已满</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                    <span class=\"token comment\">// 这里得选择一个最没用的一页对换出去</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Red<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"内存已满，操作系统需要进行页面置换，正在选择一个最没用的一页进行换出...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>                    <span class=\"token comment\">// 开始选择一个最没用的一页</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>                    <span class=\"token comment\">// 页表置换排行榜</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>                    rankForPageTableDataStruct rankForPageTable<span class=\"token punctuation\">[</span>pageTableDimensions<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>                    <span class=\"token comment\">// 初始化排行榜</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>                        rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>                        rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                    <span class=\"token comment\">// 模拟态桶排序</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"305\"></td><td><pre>                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"306\"></td><td><pre>                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"311\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"315\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"316\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>                            rankForPageTable<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                            <span class=\"token comment\">// 找到一个没用的页</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>                            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统页表表选择了一个页号为\"</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>                                 <span class=\"token operator\">&lt;&lt;</span> pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber</pre></td></tr><tr><td data-num=\"330\"></td><td><pre>                                 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的页进行换出...\"</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>                                 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>                            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>                            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>                            <span class=\"token comment\">// 把页表中对应的页号置为无效</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>                            <span class=\"token comment\">// 页表页面置换</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalBlockNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>rankForPageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre></pre></td></tr><tr><td data-num=\"347\"></td><td><pre></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>                    <span class=\"token comment\">// 内存（页表）仍有空间</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>                    <span class=\"token comment\">// 有空间就可以塞进去</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Blue<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"内存还有空间，操作系统正在读取缺页并回写内存中...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>                            pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalBlockNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"页表回写成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>                    <span class=\"token comment\">// 塞完就减减</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>                    remainingCapacityOfPageTable<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>remainingCapacityOfFastTable <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                    <span class=\"token comment\">// 快表没有空间了</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Red<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"快表已满，操作系统需要进行页面置换，正在选择一个最没用的一页进行换出...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>                    <span class=\"token comment\">// 选择一个最没用的一页进行换出！！！！！！！！！！</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                    <span class=\"token keyword\">bool</span> fastTableFindCheckIsTrue <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                    <span class=\"token keyword\">int</span> fastTableFindCheckIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                    <span class=\"token comment\">// 快表置换排行榜</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>                    rankForFastTableDataStruct rankForFastTable<span class=\"token punctuation\">[</span>fastTableDimensions<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                    <span class=\"token comment\">// 初始化排行榜</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                    <span class=\"token comment\">// 模拟态桶排序</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"386\"></td><td><pre>                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"387\"></td><td><pre>                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"391\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"392\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"396\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"397\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>                            rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>                            <span class=\"token comment\">// 找到一个没用的页</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>                            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>                            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统在快表选择了一个页号为\"</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>                                 <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber</pre></td></tr><tr><td data-num=\"411\"></td><td><pre>                                 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的页进行换出...\"</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>                                 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>                            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>                            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>                            <span class=\"token comment\">// 把快表中对应的页号置为无效</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>                            <span class=\"token comment\">// 快表页面置换</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableBlockNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>                            <span class=\"token comment\">// 把页表中对应的页号置为无效？</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>                            fastTableFindCheckIsTrue <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTableFindCheckIsTrue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>                        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Red<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>                        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"一般不存在这种情况，以防万一留着DeBug用\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>                        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>                    <span class=\"token comment\">// 快表仍然有空间</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>                    <span class=\"token comment\">// 有空间就塞</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Blue<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"快表还有空间，操作系统正在读取缺页并回写内存中...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableBlockNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>                    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"快表回写成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                    <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                    <span class=\"token comment\">// 塞完就减减</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>                    remainingCapacityOfFastTable<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>                <span class=\"token comment\">//!!!!!!!!!!!!!!</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>                physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">=</span> externalMemoryFindPage<span class=\"token punctuation\">.</span>externalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>                physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress <span class=\"token operator\">=</span> logicalAddress<span class=\"token punctuation\">.</span>inPageAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"计算后得到物理地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre>                <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Magenta<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+---块号---+---块内地址----+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"|    \"</span> <span class=\"token operator\">&lt;&lt;</span> physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    |       \"</span> <span class=\"token operator\">&lt;&lt;</span> physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress</pre></td></tr><tr><td data-num=\"466\"></td><td><pre>                     <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"       |\"</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>                     <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+----------+---------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>                <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre></pre></td></tr><tr><td data-num=\"471\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>                <span class=\"token comment\">// 页表中有</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>                <span class=\"token comment\">// 页表中的话，修改页表后还需要进行快表置换</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre>                <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"475\"></td><td><pre>                 * 如果页表里面有，那就更改他的访问位和修改位，</pre></td></tr><tr><td data-num=\"476\"></td><td><pre>                 * 为了编写简单，在这里我做出一个规定：</pre></td></tr><tr><td data-num=\"477\"></td><td><pre>                 * 当应用程序第一次访问时将访问位置真，</pre></td></tr><tr><td data-num=\"478\"></td><td><pre>                 * 当应用程序第二次访问时将修改为置真。</pre></td></tr><tr><td data-num=\"479\"></td><td><pre>                 * 这么做也是相对合理的，原因如下：</pre></td></tr><tr><td data-num=\"480\"></td><td><pre>                 * 访问位与修改位联合置换逻辑（修改，访问）即对换优先级：</pre></td></tr><tr><td data-num=\"481\"></td><td><pre>                 * * * 1.（0，0）</pre></td></tr><tr><td data-num=\"482\"></td><td><pre>                 * * * 2.（0，1）</pre></td></tr><tr><td data-num=\"483\"></td><td><pre>                 * * * 3.（1，0）</pre></td></tr><tr><td data-num=\"484\"></td><td><pre>                 * * * 4.（1，1）</pre></td></tr><tr><td data-num=\"485\"></td><td><pre>                 * 排名越高，置换优先级越高，</pre></td></tr><tr><td data-num=\"486\"></td><td><pre>                 * 相对来讲，访问位与修改位置真后，访问位优先级高于修改位</pre></td></tr><tr><td data-num=\"487\"></td><td><pre>                 * 其实我懒了 但我不说（qwq）</pre></td></tr><tr><td data-num=\"488\"></td><td><pre>                 */</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>                <span class=\"token comment\">// 快表置换，基于页表</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>                <span class=\"token comment\">// 快表置换排行榜</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>                rankForFastTableDataStruct rankForFastTable<span class=\"token punctuation\">[</span>fastTableDimensions<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre>                <span class=\"token comment\">// 初始化排行榜</span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre>                    rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>                    rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>                <span class=\"token comment\">// 模拟态桶排序</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"500\"></td><td><pre>                        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"501\"></td><td><pre>                        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"505\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"506\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"510\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"511\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre>                        rankForFastTable<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre></pre></td></tr><tr><td data-num=\"520\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageNumber <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"522\"></td><td><pre>                        <span class=\"token comment\">// 找到一个没用的页</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre>                        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"524\"></td><td><pre>                        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"操作系统在快表选择了一个页号为\"</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>                             <span class=\"token operator\">&lt;&lt;</span> fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber</pre></td></tr><tr><td data-num=\"526\"></td><td><pre>                             <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的页进行换出...\"</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre>                             <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"528\"></td><td><pre>                        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>                        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>                        <span class=\"token comment\">// 把快表中对应的页号置为无效</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre>                        fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"532\"></td><td><pre>                        <span class=\"token comment\">// 快表页面置换</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre>                        fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"534\"></td><td><pre>                        fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableBlockNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre>                        fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre>                        fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"537\"></td><td><pre>                        fastTable<span class=\"token punctuation\">[</span>rankForFastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"538\"></td><td><pre>                        <span class=\"token comment\">// 物理地址存储</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre>                        physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">=</span> pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"540\"></td><td><pre>                        physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress <span class=\"token operator\">=</span> logicalAddress<span class=\"token punctuation\">.</span>inPageAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"541\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"542\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"543\"></td><td><pre></pre></td></tr><tr><td data-num=\"544\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"545\"></td><td><pre></pre></td></tr><tr><td data-num=\"546\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"计算后得到物理地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"547\"></td><td><pre>                <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Magenta<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"548\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+---块号---+---块内地址----+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"549\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"|    \"</span> <span class=\"token operator\">&lt;&lt;</span> physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    |       \"</span> <span class=\"token operator\">&lt;&lt;</span> physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress</pre></td></tr><tr><td data-num=\"550\"></td><td><pre>                     <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"       |\"</span></pre></td></tr><tr><td data-num=\"551\"></td><td><pre>                     <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"552\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+----------+---------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"553\"></td><td><pre></pre></td></tr><tr><td data-num=\"554\"></td><td><pre></pre></td></tr><tr><td data-num=\"555\"></td><td><pre>                <span class=\"token comment\">// 修改页表</span></pre></td></tr><tr><td data-num=\"556\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"557\"></td><td><pre>                    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"558\"></td><td><pre>                    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"559\"></td><td><pre>                    pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"560\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"561\"></td><td><pre>                           <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"562\"></td><td><pre>                           <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"563\"></td><td><pre>                    pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"564\"></td><td><pre>                    pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"565\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"566\"></td><td><pre>                           <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"567\"></td><td><pre>                           <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"568\"></td><td><pre>                    pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"569\"></td><td><pre>                    pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"570\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"571\"></td><td><pre>                <span class=\"token comment\">// 同步快表</span></pre></td></tr><tr><td data-num=\"572\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fastTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"573\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber <span class=\"token operator\">==</span> pageTable<span class=\"token punctuation\">[</span>pageTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"574\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"575\"></td><td><pre>                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"576\"></td><td><pre>                            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"577\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"578\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"579\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"580\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"581\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"582\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"583\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"584\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"585\"></td><td><pre>                                   <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"586\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"587\"></td><td><pre>                            fastTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"588\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"589\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"591\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre></pre></td></tr><tr><td data-num=\"593\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"594\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"595\"></td><td><pre>            <span class=\"token comment\">// 快表中有</span></pre></td></tr><tr><td data-num=\"596\"></td><td><pre>            <span class=\"token comment\">// 修改快表</span></pre></td></tr><tr><td data-num=\"597\"></td><td><pre>            fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"598\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"599\"></td><td><pre>                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"600\"></td><td><pre>                <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"601\"></td><td><pre>                fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"602\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"603\"></td><td><pre>                       <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"604\"></td><td><pre>                       <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"605\"></td><td><pre>                fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"606\"></td><td><pre>                fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"607\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"608\"></td><td><pre>                       <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"609\"></td><td><pre>                       <span class=\"token operator\">&amp;&amp;</span> fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"610\"></td><td><pre>                fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"611\"></td><td><pre>                fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"612\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"613\"></td><td><pre>            <span class=\"token comment\">// 同步页表</span></pre></td></tr><tr><td data-num=\"614\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageTableDimensions<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"615\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>internalPageNumber <span class=\"token operator\">==</span> fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTablePageNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"616\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"617\"></td><td><pre>                        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"618\"></td><td><pre>                        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"619\"></td><td><pre>                        pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"620\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"621\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"622\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"623\"></td><td><pre>                        pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"624\"></td><td><pre>                        pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"625\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validBit</pre></td></tr><tr><td data-num=\"626\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit</pre></td></tr><tr><td data-num=\"627\"></td><td><pre>                               <span class=\"token operator\">&amp;&amp;</span> pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"628\"></td><td><pre>                        pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>accessBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"629\"></td><td><pre>                        pageTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>modifyBit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"630\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"631\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"632\"></td><td><pre></pre></td></tr><tr><td data-num=\"633\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"634\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"635\"></td><td><pre></pre></td></tr><tr><td data-num=\"636\"></td><td><pre>            <span class=\"token comment\">// 直接从快表中提取</span></pre></td></tr><tr><td data-num=\"637\"></td><td><pre>            physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">=</span> fastTable<span class=\"token punctuation\">[</span>fastTableFindPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fastTableBlockNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"638\"></td><td><pre>            physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress <span class=\"token operator\">=</span> logicalAddress<span class=\"token punctuation\">.</span>inPageAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"639\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"计算后得到物理地址：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"640\"></td><td><pre>            <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Magenta<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"641\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+---块号---+---块内地址----+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"642\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"|    \"</span> <span class=\"token operator\">&lt;&lt;</span> physicalAddress<span class=\"token punctuation\">.</span>blockNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    |       \"</span> <span class=\"token operator\">&lt;&lt;</span> physicalAddress<span class=\"token punctuation\">.</span>internalBlockAddress</pre></td></tr><tr><td data-num=\"643\"></td><td><pre>                 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"       |\"</span></pre></td></tr><tr><td data-num=\"644\"></td><td><pre>                 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"645\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+----------+---------------+\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"646\"></td><td><pre>            <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"647\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"648\"></td><td><pre>        <span class=\"token comment\">// 恢复初始状态</span></pre></td></tr><tr><td data-num=\"649\"></td><td><pre>        fastTableFind <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"650\"></td><td><pre>        pageTableFind <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"651\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>Green<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"652\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"653\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"---------------地址变换结束---------------\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"654\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"655\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"656\"></td><td><pre>        <span class=\"token function\">setConsoleColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">,</span> Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"657\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"658\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"下次再见！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"659\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/MongoDB/MongoDB03/",
            "url": "https://735690757.github.io/MongoDB/MongoDB03/",
            "title": "MongoDB初步使用",
            "date_published": "2023-09-13T04:20:00.000Z",
            "content_html": "<h1 id=\"mongodb约束命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb约束命令\">#</a> MongoDB 约束命令</h1>\n<h2 id=\"输出行数限制\"><a class=\"markdownIt-Anchor\" href=\"#输出行数限制\">#</a> 输出行数限制</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t4.aggregate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$limit</span>:4<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"xx升序降序\"><a class=\"markdownIt-Anchor\" href=\"#xx升序降序\">#</a> xx 升序 / 降序</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t4.aggregate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$sort</span>:<span class=\"token punctuation\">&#123;</span>price:-1<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>1：升序</p>\n<p>2：降序</p>\n<h2 id=\"mapreduce\"><a class=\"markdownIt-Anchor\" href=\"#mapreduce\">#</a> MapReduce</h2>\n<p>MapReduce 是一种用于分布式计算的编程模型和处理大规模数据集的方法。</p>\n<p>MapReduce 模型的基本思想是将大规模数据集分成小块，然后并行处理这些小块数据以生成中间结果。</p>\n<ol>\n<li><strong>Map 阶段（映射阶段）</strong>：在这个阶段，原始数据被映射成键 - 值对的形式。每个映射操作都是独立的，可以在不同的计算节点上并行执行。Map 操作通常用于筛选、过滤、排序和转换数据。</li>\n<li><strong>Reduce 阶段（归约阶段）</strong>：在 Map 阶段之后，所有的中间结果按键分组，并将每个组的数据传递给 Reduce 函数进行聚合和处理。Reduce 操作通常用于对数据进行汇总、计数、计算统计信息等操作。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//MapReduce</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//map映射</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var map <span class=\"token operator\">=</span> <span class=\"token function-name function\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    emit<span class=\"token punctuation\">(</span>this.type,this.name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//reduce减少并以“，”分割</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>var reduce <span class=\"token operator\">=</span> function<span class=\"token punctuation\">(</span>key,values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> values.join<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>//选项设置输出</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>var <span class=\"token assign-left variable\">opt</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>out:<span class=\"token string\">\"name_list\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>db.t4.mapReduce<span class=\"token punctuation\">(</span>map,reduce,opt<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>[<br>\n{<br>\n“_id”: “电子设备”,<br>\n“value”: “logi”<br>\n},<br>\n{<br>\n“_id”: “服装”,<br>\n“value”: “安踏，lining”<br>\n},<br>\n{<br>\n“_id”: “电子通信”,<br>\n“value”: “oppo,vivo,huawei,iphone8”<br>\n},<br>\n{<br>\n“_id”: “饮品”,<br>\n“value”: “康师傅”<br>\n}<br>\n]</p>\n</blockquote>\n",
            "tags": [
                "MongoDB",
                "MongoDB"
            ]
        },
        {
            "id": "https://735690757.github.io/MongoDB/MongoDB02/",
            "url": "https://735690757.github.io/MongoDB/MongoDB02/",
            "title": "MongoDB初步使用",
            "date_published": "2023-09-06T04:20:00.000Z",
            "content_html": "<h1 id=\"mongodb命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb命令\">#</a> MongoDB 命令</h1>\n<h2 id=\"创建用户可读可写\"><a class=\"markdownIt-Anchor\" href=\"#创建用户可读可写\">#</a> 创建用户（可读可写）</h2>\n<h3 id=\"创建\"><a class=\"markdownIt-Anchor\" href=\"#创建\">#</a> 创建</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.createUser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>user:<span class=\"token string\">\"lkr40\"</span>,pwd:<span class=\"token string\">\"123456\"</span>,roles:<span class=\"token punctuation\">[</span><span class=\"token string\">\"readWrite\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"检验\"><a class=\"markdownIt-Anchor\" href=\"#检验\">#</a> 检验</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.auth<span class=\"token punctuation\">(</span><span class=\"token string\">\"lkr40\"</span>,<span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>db.createUser({user:“lkr40”,pwd:“123456”,roles:[“readWrite”]})<br>\nSuccessfully added user: { “user” : “lkr40”, “roles” : [ “readWrite” ] }<br>\ndb.auth(“lkr40”,“123456”)<br>\n1</p>\n</blockquote>\n<h3 id=\"登录\"><a class=\"markdownIt-Anchor\" href=\"#登录\">#</a> 登录</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mongo <span class=\"token number\">127.0</span>.0.1:27017/mymongo <span class=\"token parameter variable\">-u</span> lkr40 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">123456</span></pre></td></tr></table></figure><h2 id=\"建立使用数据库\"><a class=\"markdownIt-Anchor\" href=\"#建立使用数据库\">#</a> 建立 / 使用数据库</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>use mymongo</pre></td></tr></table></figure><blockquote>\n<p>use mymongo<br>\nswitched to db mymongo</p>\n</blockquote>\n<h2 id=\"查询当前数据库\"><a class=\"markdownIt-Anchor\" href=\"#查询当前数据库\">#</a> 查询当前数据库</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db</pre></td></tr></table></figure><blockquote>\n<p>db<br>\nmymongo</p>\n</blockquote>\n<h2 id=\"删除数据库\"><a class=\"markdownIt-Anchor\" href=\"#删除数据库\">#</a> 删除数据库</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.dropDatabase<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"查询时间\"><a class=\"markdownIt-Anchor\" href=\"#查询时间\">#</a> 查询时间</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>Date()<br>\nWed Sep 06 2023 10:21:36 GMT+0800</p>\n</blockquote>\n<h2 id=\"创建集合\"><a class=\"markdownIt-Anchor\" href=\"#创建集合\">#</a> 创建集合</h2>\n<p><strong>集合中可以包含子集合</strong></p>\n<h3 id=\"显式创建t\"><a class=\"markdownIt-Anchor\" href=\"#显式创建t\">#</a> 显式创建（t）</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.createCollection<span class=\"token punctuation\">(</span><span class=\"token string\">\"t\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote ok:1=\"\">\n<p>db.createCollection(“t”)</p>\n</blockquote>\n<h3 id=\"隐式创建t1\"><a class=\"markdownIt-Anchor\" href=\"#隐式创建t1\">#</a> 隐式创建（t1）</h3>\n<pre><code>db.t1.insert(&#123;&quot;age&quot;:18&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.insert({“age”:18})<br>\nWriteResult({ “nInserted” : 1 })<br>\nshow collections<br>\nt<br>\nt1</p>\n</blockquote>\n<h2 id=\"展示集合\"><a class=\"markdownIt-Anchor\" href=\"#展示集合\">#</a> 展示集合</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show collections</pre></td></tr></table></figure><blockquote>\n<p>show collections<br>\nt</p>\n<p>t1</p>\n</blockquote>\n<h2 id=\"删除集合\"><a class=\"markdownIt-Anchor\" href=\"#删除集合\">#</a> 删除集合</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t.drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>db.t.drop()<br>\ntrue</p>\n</blockquote>\n<h2 id=\"查询文档\"><a class=\"markdownIt-Anchor\" href=\"#查询文档\">#</a> 查询文档</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:ObjectId(64f7ec7bff2142d2a2445360),age:18=\"\">\n<p>db.t1.find()</p>\n</blockquote>\n<h3 id=\"条件查询\"><a class=\"markdownIt-Anchor\" href=\"#条件查询\">#</a> 条件查询</h3>\n<h4 id=\"等于\"><a class=\"markdownIt-Anchor\" href=\"#等于\">#</a> 等于</h4>\n<pre><code>db.t.find(&#123;&quot;x&quot;:1&#125;)\n</code></pre>\n<blockquote _id:ObjectId(64f7f05bff2142d2a2445361),x:1=\"\">\n<p>db.t.find({“x”:1})</p>\n</blockquote>\n<h4 id=\"小于\"><a class=\"markdownIt-Anchor\" href=\"#小于\">#</a> 小于</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"x\"</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lte</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"大于\"><a class=\"markdownIt-Anchor\" href=\"#大于\">#</a> 大于</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"x\"</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lte</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"在之中包含\"><a class=\"markdownIt-Anchor\" href=\"#在之中包含\">#</a> 在之中（包含）</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"x\"</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$in</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1,3</span>,5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"不在其中不包含\"><a class=\"markdownIt-Anchor\" href=\"#不在其中不包含\">#</a> 不在其中（不包含）</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"x\"</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$nin</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1,3</span>,5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"插入文档\"><a class=\"markdownIt-Anchor\" href=\"#插入文档\">#</a> 插入文档</h2>\n<h3 id=\"单一插入\"><a class=\"markdownIt-Anchor\" href=\"#单一插入\">#</a> 单一插入</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1\"</span>,<span class=\"token string\">\"age\"</span>:23<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:1,age:23=\"\" _id:ObjectId(64f7ec7bff2142d2a2445360),age:18=\"\">\n<p>db.t1.insert({&quot;_id&quot;:“1”,“age”:23})<br>\nWriteResult({ “nInserted” : 1 })<br>\ndb.t1.find()<br>\n</p>\n</blockquote>\n<h3 id=\"批量插入单语句\"><a class=\"markdownIt-Anchor\" href=\"#批量插入单语句\">#</a> 批量插入（单语句）</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.insertMany<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span>:2,<span class=\"token string\">\"age\"</span>:65<span class=\"token punctuation\">&#125;</span>,<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span>:3,<span class=\"token string\">\"age\"</span>:45<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:3,age:45=\"\" _id:2,age:65=\"\">\n<p>db.t1.insertMany([{&quot;_id&quot;:2,“age”:65},{&quot;_id&quot;:3,“age”:45}])<br>\n{ “acknowledged” : true, “insertedIds” : [ 2, 3 ] }<br>\ndb.t1.find()<br>\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br>\n{ “_id” : “1”, “age” : 33 }<br>\n</p>\n</blockquote>\n<h3 id=\"循环插入for\"><a class=\"markdownIt-Anchor\" href=\"#循环插入for\">#</a> 循环插入（for）</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>i++<span class=\"token punctuation\">)</span> db.t.insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"x\"</span>:i<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:ObjectId(64f7f05cff2142d2a2445368),x:8=\"\" _id:ObjectId(64f7f05cff2142d2a2445367),x:7=\"\">\n<p>for(i=1;i&lt;9;i++) db.t.insert({“x”:i})<br>\nWriteResult({ “nInserted” : 1 })<br>\ndb.t.find()<br>\n{ “_id” : ObjectId(“64f7f05bff2142d2a2445361”), “x” : 1 }<br>\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445362”), “x” : 2 }<br>\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445363”), “x” : 3 }<br>\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445364”), “x” : 4 }<br>\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445365”), “x” : 5 }<br>\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445366”), “x” : 6 }<br>\n</p>\n</blockquote>\n<h3 id=\"同id插入异常\"><a class=\"markdownIt-Anchor\" href=\"#同id插入异常\">#</a> 同 id 插入异常</h3>\n<blockquote>\n<p>db.t1.insert({&quot;_id&quot;:“1”,“age”:23})<br>\nWriteResult({<br>\n“nInserted” : 0,<br>\n“writeError” : {<br>\n“code” : 11000,<br>\n“errmsg” : “E11000 duplicate key error collection: mymongo.t1 index: <em>id</em> dup key: { _id: “1” }”<br>\n}<br>\n})</p>\n</blockquote>\n<h2 id=\"修改输入全部属性替换\"><a class=\"markdownIt-Anchor\" href=\"#修改输入全部属性替换\">#</a> 修改（输入全部属性 / 替换）</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1\"</span>,<span class=\"token string\">\"age\"</span>:33<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:1,age:33=\"\" _id:ObjectId(64f7ec7bff2142d2a2445360),age:18=\"\">\n<p>db.t1.save({&quot;_id&quot;:“1”,“age”:33})<br>\nWriteResult({ “nMatched” : 1, “nUpserted” : 0, “nModified” : 1 })<br>\ndb.t1.find()<br>\n</p>\n</blockquote>\n<h2 id=\"更新\"><a class=\"markdownIt-Anchor\" href=\"#更新\">#</a> 更新</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"age\"</span>:65<span class=\"token punctuation\">&#125;</span>,<span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$set</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"age\"</span>:100<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:3,age:45=\"\" _id:2,age:100=\"\">\n<p>db.t1.update({“age”:65},{$set:{“age”:100}})<br>\nWriteResult({ “nMatched” : 1, “nUpserted” : 0, “nModified” : 1 })<br>\ndb.t1.find()<br>\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br>\n{ “_id” : “1”, “age” : 33 }<br>\n</p>\n</blockquote>\n<h2 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\">#</a> 删除</h2>\n<h3 id=\"批量删除\"><a class=\"markdownIt-Anchor\" href=\"#批量删除\">#</a> 批量删除</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.remove<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"age\"</span>:33<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:3,age:45=\"\" _id:2,age:100=\"\">\n<p>db.t1.remove({“age”:33})<br>\nWriteResult({ “nRemoved” : 1 })<br>\ndb.t1.find()<br>\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br>\n</p>\n</blockquote>\n<h3 id=\"单一删除\"><a class=\"markdownIt-Anchor\" href=\"#单一删除\">#</a> 单一删除</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t1.remove<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"age\"</span>:45<span class=\"token punctuation\">&#125;</span>,<span class=\"token punctuation\">&#123;</span>justOne:1<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:5,age:45=\"\" _id:4,age:65=\"\">\n<p>db.t1.remove({“age”:45},{justOne:1})<br>\nWriteResult({ “nRemoved” : 1 })<br>\ndb.t1.find()<br>\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br>\n{ “_id” : 2, “age” : 100 }<br>\n</p>\n</blockquote>\n<h2 id=\"capped限制\"><a class=\"markdownIt-Anchor\" href=\"#capped限制\">#</a> Capped 限制</h2>\n<h3 id=\"创建限制\"><a class=\"markdownIt-Anchor\" href=\"#创建限制\">#</a> 创建限制</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.createCollection<span class=\"token punctuation\">(</span><span class=\"token string\">\"t2\"</span>,<span class=\"token punctuation\">&#123;</span>capped:true,size:3,max:8<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t2.isCapped<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"检验-2\"><a class=\"markdownIt-Anchor\" href=\"#检验-2\">#</a> 检验</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>i++<span class=\"token punctuation\">)</span> db.t2.insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"x\"</span>:i<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote _id:ObjectId(64f7f23fff2142d2a2445370),x:8=\"\" _id:ObjectId(64f7f23fff2142d2a244536f),x:7=\"\">\n<p>db.t2.find();<br>\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536a”), “x” : 2 }<br>\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536b”), “x” : 3 }<br>\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536c”), “x” : 4 }<br>\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536d”), “x” : 5 }<br>\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536e”), “x” : 6 }<br>\n</p>\n</blockquote>\n<h3 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\">#</a> 结论</h3>\n<p><strong>前面的数据被顶掉了</strong></p>\n<h2 id=\"pretty美化输出\"><a class=\"markdownIt-Anchor\" href=\"#pretty美化输出\">#</a> pretty 美化输出</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db.t3.insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span>:1,<span class=\"token string\">\"phone\"</span>:<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"hemophone\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"8617118\"</span>,<span class=\"token string\">\"mobilephone\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"18643079329\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>db.t3.find().pretty();<br>\n{<br>\n“_id” : 1,<br>\n“phone” : {<br>\n“hemophone” : “8617118”,<br>\n“mobilephone” : “18643079329”<br>\n}<br>\n}</p>\n</blockquote>\n<h2 id=\"管道机制\"><a class=\"markdownIt-Anchor\" href=\"#管道机制\">#</a> 管道机制</h2>\n<p _id:1,name:iphone8,price:3000,type:电子通信=\"\"></p>\n",
            "tags": [
                "MongoDB",
                "MongoDB"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/03OS/",
            "url": "https://735690757.github.io/Operate-system/03OS/",
            "title": "进程同步问题",
            "date_published": "2023-09-04T07:50:00.000Z",
            "content_html": "<h1 id=\"生产者-消费者问题\"><a class=\"markdownIt-Anchor\" href=\"#生产者-消费者问题\">#</a> 生产者 - 消费者问题</h1>\n<p>在进程同步中第一个问题就是生产者 - 消费者问题，首先我们利用记录型信号来分析这个问题。</p>\n<p>好好好，我们直接伪代码解析！</p>\n<p><strong>解释在行代码的上方</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>详细伪代码</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//in 代表下一个要写入的位置，out 代表要读取的位置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> in <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>out <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 用于存储生产者生产的容器，可以理解为缓冲区</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>item buffer<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 前两行不是重点，下面才是核心！！</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//mutex 用于互斥访问共享资源，初值必须为 1（可以理解为锁）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//empty 代表中转的容量，初值为最大承载容量，题里会给（可以是各种容器）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//full 是生产出的一种逻辑 / 实体的物质</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 总之不管是什么他是生产者生产出来的，一开始还没生产，full 初值为 0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>semaphore mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>empty <span class=\"token operator\">=</span> n<span class=\"token punctuation\">,</span>full <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 生产者逻辑</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">//do-while 死循环，不断生产，配合消费者模拟程序并发</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 生产一个产品</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        produce an item nextp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">//wait 什么什么就是什么什么 “--”，比如这里 wait (empty) 就是 empty--</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 相当于空位置减一，申请一个缓冲区</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 相当于加锁，申请缓冲区的使用权</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 将产品放入缓冲区之中</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        buffer<span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nextp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 下一个缓冲区的地址</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        in <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">//signal 什么什么就是什么什么 “++”，比如这里 signal (mutex) 就是 empty++</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 解锁，相当于释放权限</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 生产的东西数量加 1，也就是释放缓冲区</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// 消费者逻辑</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">consumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">//do-while 死循环，不断生消费，配合生产者模拟程序并发</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">// 消费者要消费一个物质，将生产者的生产的 full--</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">// 加锁，mutex--</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">// 其实这里不用太深究，这里就是消费者从缓冲区拿走了一个生产者的生产的物质</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\">// 从缓冲区中取出产品</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        nextc <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">[</span>out<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 导向下一个缓冲区的地址</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        out <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>out <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">// 解锁，mutex++</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\">// 消费者已经取走了，空位置 empty++</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">// 消费者消费物质</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        consume the item nextc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    cobegin</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function\">consumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    coend</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>简单的写法：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"><span>简单伪代码</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Producer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  Repeat</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    生产一个商品</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    wait<span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    wait<span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    将商品送至缓冲区<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    signal<span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    signal<span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Until false</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Comsumer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  Repeat</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    wait<span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    wait<span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    从缓冲区取走一个物品</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    singal<span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    signal<span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  Until false</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Program main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  empty<span class=\"token punctuation\">,</span>full<span class=\"token punctuation\">,</span>mutex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    begin</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      empty <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      full <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      cobegin</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        producer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>consumer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      coend</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    end</pre></td></tr></table></figure><h2 id=\"练习一下\"><a class=\"markdownIt-Anchor\" href=\"#练习一下\">#</a> 练习一下！</h2>\n<p>桌上有个能盛得下五个水果的空子。爸爸不停地向盘中放苹果或橘子，儿子不停地从盘中取出桔子享用，女儿不停地从盘中取出苹果享用。规定三人不能同时从盘子中取放水果。使用信号量实现爸爸、儿子和女儿这三个循环进程之间的同步。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>empty <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>orange <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>apple <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Dad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        将水果放入盘中<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>放了橘子<span class=\"token punctuation\">)</span> <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>orange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">Son</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>orange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        拿走一个桔子<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        吃桔子<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token function\">Daughter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        拿一个苹果<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        吃苹果<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/Linux/Linux01/",
            "url": "https://735690757.github.io/Linux/Linux01/",
            "title": "初见Linux",
            "date_published": "2023-09-01T04:12:00.000Z",
            "content_html": "<h1 id=\"初见linux\"><a class=\"markdownIt-Anchor\" href=\"#初见linux\">#</a> 初见 Linux</h1>\n<p>首先安装什么的就不讲了，这里先讲一下基础命令</p>\n<h1 id=\"简单命令\"><a class=\"markdownIt-Anchor\" href=\"#简单命令\">#</a> 简单命令</h1>\n<h2 id=\"who命令\"><a class=\"markdownIt-Anchor\" href=\"#who命令\">#</a> who 命令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">who</span> am i</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost ~]$ who am i<br>\nkarry    pts/0        2023-09-01 10:26 (laptop-karry1107)</p>\n</blockquote>\n<h2 id=\"echo命令\"><a class=\"markdownIt-Anchor\" href=\"#echo命令\">#</a> echo 命令</h2>\n<p>这个命令是将内容输出到屏幕上</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost ~<span class=\"token punctuation\">]</span>$ <span class=\"token builtin class-name\">echo</span> Hello Karry.Liu</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost ~]$ echo Hello Karry.Liu<br>\nHello Karry.Liu</p>\n</blockquote>\n<h2 id=\"date命令\"><a class=\"markdownIt-Anchor\" href=\"#date命令\">#</a> date 命令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">date</span></pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost ~]$ date<br>\n2023 年 09 月 01 日 星期五 10:32:23 PDT</p>\n</blockquote>\n<h2 id=\"cal命令\"><a class=\"markdownIt-Anchor\" href=\"#cal命令\">#</a> cal 命令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">cal</span> <span class=\"token number\">9</span> <span class=\"token number\">2023</span></pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost ~]$ cal 9 2023<br>\n 九月 2023<br>\n 日 一 二 三 四 五 六<br>\n 1  2<br>\n3  4  5  6  7  8  9<br>\n10 11 12 13 14 15 16<br>\n17 18 19 20 21 22 23<br>\n24 25 26 27 28 29 30</p>\n</blockquote>\n<h1 id=\"基础命令\"><a class=\"markdownIt-Anchor\" href=\"#基础命令\">#</a> 基础命令</h1>\n<h2 id=\"基础文件操作命令\"><a class=\"markdownIt-Anchor\" href=\"#基础文件操作命令\">#</a> 基础文件操作命令</h2>\n<h3 id=\"展示文件夹中的内容\"><a class=\"markdownIt-Anchor\" href=\"#展示文件夹中的内容\">#</a> 展示文件夹中的内容</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">ls</span></pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost ~]$ ls<br>\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</p>\n</blockquote>\n<h3 id=\"进入退出文件夹\"><a class=\"markdownIt-Anchor\" href=\"#进入退出文件夹\">#</a> 进入 / 退出文件夹</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost ~<span class=\"token punctuation\">]</span>$ <span class=\"token builtin class-name\">cd</span> Desktop</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost ~]$ cd Desktop</p>\n<p>[karry@localhost Desktop]$</p>\n</blockquote>\n<h3 id=\"创建文件夹\"><a class=\"markdownIt-Anchor\" href=\"#创建文件夹\">#</a> 创建文件夹</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost Desktop<span class=\"token punctuation\">]</span>$ <span class=\"token function\">mkdir</span> LinuxHello</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost Desktop]$ ls<br>\nfirefox.desktop  myFile  test</p>\n<p>[karry@localhost Desktop]$ mkdir LinuxHello<br>\n[karry@localhost Desktop]$ ls<br>\nfirefox.desktop  LiunxHello  myFile  test</p>\n</blockquote>\n<h3 id=\"创建一个文件\"><a class=\"markdownIt-Anchor\" href=\"#创建一个文件\">#</a> 创建一个文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost LinuxHello<span class=\"token punctuation\">]</span>$ <span class=\"token function\">touch</span> fistText.txt</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost Desktop]$ ls<br>\nfirefox.desktop  LinuxHello  myFile  test<br>\n[karry@localhost Desktop]$ cd LinuxHello<br>\n[karry@localhost LinuxHello]$ touch fistText.txt<br>\n[karry@localhost LinuxHello]$ ls<br>\nfistText.txt</p>\n</blockquote>\n<h3 id=\"编辑文件\"><a class=\"markdownIt-Anchor\" href=\"#编辑文件\">#</a> 编辑文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost LinuxHello<span class=\"token punctuation\">]</span>$ <span class=\"token function\">touch</span> fistText.txt</pre></td></tr></table></figure><blockquote>\n<p>~<br>\n~<br>\n~<br>\n“fistText.txt” 0L, 0C</p>\n</blockquote>\n<p>按   <span class=\"kbd\">i</span>        进入插入模式</p>\n<blockquote>\n<p>~<br>\n~<br>\n~<br>\n– 插入 –</p>\n</blockquote>\n<p>现在可以编辑文件了！</p>\n<blockquote>\n<p>hi hi，这是我第一次学习 Linux！！！<br>\n我的名字是诗岸梦行舟<br>\n或者是 Karry.Liu<br>\n 让我们共同努力吧！！<br>\n~<br>\n~                                                                                                                                                                                                                                                                                                                                                                       – 插入 –</p>\n</blockquote>\n<p>按   <span class=\"kbd\">Esc</span>        退出插入模式</p>\n<p>按   <span class=\"kbd\">:</span>+  <span class=\"kbd\">w</span>       保存刚才所编辑的文件</p>\n<blockquote>\n<p>hi hi，这是我第一次学习 Linux！！！<br>\n我的名字是诗岸梦行舟<br>\n或者是 Karry.Liu<br>\n 让我们共同努力吧！！<br>\n~<br>\n“fistText.txt” 4L, 128C 已写入</p>\n</blockquote>\n<p>最后按 <span class=\"kbd\">:</span>+ <span class=\"kbd\">q</span>   退出 vi 编辑器</p>\n<blockquote>\n<p>~<br>\n~<br>\n:q</p>\n</blockquote>\n<h3 id=\"读文件内容\"><a class=\"markdownIt-Anchor\" href=\"#读文件内容\">#</a> 读文件内容</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost LinuxHello<span class=\"token punctuation\">]</span>$ <span class=\"token function\">cat</span> fistText.txt</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost LinuxHello]$ cat fistText.txt<br>\nhi hi，这是我第一次学习 Linux！！！<br>\n我的名字是诗岸梦行舟<br>\n或者是 Karry.Liu<br>\n 让我们共同努力吧！！<br>\n[karry@localhost LinuxHello]$</p>\n</blockquote>\n<h1 id=\"使用g编译程序\"><a class=\"markdownIt-Anchor\" href=\"#使用g编译程序\">#</a> 使用 g++ 编译程序</h1>\n<ol start=\"0\">\n<li>\n<p>如果你还没有安装 g++ 编译器，请先安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> gcc-c++ <span class=\"token function\">make</span></pre></td></tr></table></figure><p>安装需要一定时间，请耐心等待！</p>\n</li>\n<li>\n<p>进入指定目录，创建 cpp 文件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost C++<span class=\"token punctuation\">]</span>$ <span class=\"token function\">touch</span> firstApp.cpp</pre></td></tr></table></figure></li>\n<li>\n<p>使用 vi 指令编辑文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost C++<span class=\"token punctuation\">]</span>$ <span class=\"token function\">vi</span> firstApp.cpp</pre></td></tr></table></figure></li>\n<li>\n<p>按 <span class=\"kbd\">i</span> 进入插入模式，编辑程序</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#include&lt;iostream></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>using namespace std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>int <span class=\"token function-name function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        int <span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        int <span class=\"token assign-left variable\">b</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        int <span class=\"token assign-left variable\">c</span><span class=\"token operator\">=</span>a+b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"计算结果为：\"</span><span class=\"token operator\">&lt;&lt;</span>a<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"+\"</span><span class=\"token operator\">&lt;&lt;</span>b<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">&lt;&lt;</span>c<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>按   <span class=\"kbd\">Esc</span>        退出插入模式，按   <span class=\"kbd\">:</span>+  <span class=\"kbd\">w</span>       保存刚才所编辑的文件，最后按 <span class=\"kbd\">:</span>+ <span class=\"kbd\">q</span>   退出 vi 编辑器</p>\n</li>\n<li>\n<p>执行命令编译程序</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost C++<span class=\"token punctuation\">]</span>$ g++ <span class=\"token parameter variable\">-o</span> firstAppCompile firstApp.cpp</pre></td></tr></table></figure></li>\n<li>\n<p>运行输出结果</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>karry@localhost C++<span class=\"token punctuation\">]</span>$ ./firstAppCompile</pre></td></tr></table></figure><blockquote>\n<p>[karry@localhost C++]$ ./firstAppCompile<br>\n 计算结果为：1+2=3<br>\n[karry@localhost C++]$</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "Linux",
                "Linux"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/02OS/",
            "url": "https://735690757.github.io/Operate-system/02OS/",
            "title": "进程与线程",
            "date_published": "2023-08-31T11:50:00.000Z",
            "content_html": "<h1 id=\"什么是进程与线程\"><a class=\"markdownIt-Anchor\" href=\"#什么是进程与线程\">#</a> 什么是进程与线程</h1>\n<p>进程（Process）和线程（Thread）是操作系统中的两个重要概念，用于管理和执行程序的执行单元。它们在多任务处理和并发执行中起着关键作用。</p>\n<h2 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\">#</a> 进程</h2>\n<p>进程是计算机系统中运行的程序的实例。每个进程都有<mark>自己的内存空间、代码和数据，以及与其他进程隔离的资源</mark>。进程可以看作是一个独立的执行环境，可以执行自己的任务。每个进程都有一个唯一的进程标识符（PID），用于区分和管理不同的进程。</p>\n<p><mark>一个进程可以包含多个线程，这些线程共享同一个进程的资源</mark>，如内存空间、文件句柄等。不同进程之间的通信相对复杂，通常需要使用进程间通信（IPC）机制，如管道、消息队列、共享内存等。</p>\n<h2 id=\"线程\"><a class=\"markdownIt-Anchor\" href=\"#线程\">#</a> 线程</h2>\n<p>线程是进程内的执行单元，一个进程可以包含多个线程。<mark>线程共享同一个进程的代码和数据，但每个线程拥有自己的栈空间和程序计数器</mark>。因为线程共享相同的内存空间，它们之间的通信和数据共享更加方便，但也需要适当的同步控制来避免竞态条件和数据不一致问题。</p>\n<p>多线程的使用可以实现并发执行，提高程序的响应速度和资源利用率。常见的线程使用场景包括图形界面应用程序中的响应性、多媒体处理、网络服务器等。</p>\n<h1 id=\"程序并发执行的特征\"><a class=\"markdownIt-Anchor\" href=\"#程序并发执行的特征\">#</a> 程序并发执行的特征</h1>\n<ol>\n<li><strong>间断性</strong>：并发程序之间相互制约</li>\n<li><strong>失去封闭性</strong>：多个程序共享全机资源，执行状态收外界因素影响</li>\n<li><strong>不可在现性</strong>：程序经过多次执行后，虽然其执行时的环境和初始条件都相同，但得到的结果却各不相同</li>\n</ol>\n<h1 id=\"进程的特性\"><a class=\"markdownIt-Anchor\" href=\"#进程的特性\">#</a> 进程的特性</h1>\n<ol>\n<li><strong>动态性</strong>（最基本的特征）</li>\n<li><strong>并发性</strong></li>\n<li><strong>独立性</strong></li>\n<li><strong>异步性</strong>：不可预知的速度</li>\n</ol>\n<h1 id=\"进程控制\"><a class=\"markdownIt-Anchor\" href=\"#进程控制\">#</a> 进程控制</h1>\n<p>一般包括以下几个方面：</p>\n<ol>\n<li>进程创建</li>\n<li>进程终止</li>\n<li>进程阻塞与唤醒</li>\n<li>进程挂起与激活</li>\n</ol>\n<h1 id=\"进程创建\"><a class=\"markdownIt-Anchor\" href=\"#进程创建\">#</a> 进程创建</h1>\n<p><span class=\"label success\">UNIX 下的进程创建 ——fork ()</span></p>\n<h2 id=\"消息机制\"><a class=\"markdownIt-Anchor\" href=\"#消息机制\">#</a> 消息机制</h2>\n<p>直接通信方式一一消息缓冲队列</p>\n<p>这是指发送进程利用 OS 所提供的发送命令，直接把消息发送给目标进程。此时，要求发送进程和接收进程都以显式方式提供对方的标识符。通常，系统提供下述两条通信命令 (原语):</p>\n<p><mark><strong>Send (Receiver, message): 发送一个消息给 Receiver</strong></mark></p>\n<p><mark><strong>Receive (Sender,message): 接收 Sender 发来的消息</strong></mark></p>\n<p>例如，原语 Send (P，m) 表示将消息 m, 发送给接收进程 P; 而原语 Receive (P，m) 则表示接收由 P 发来的消息 m。</p>\n<h1 id=\"进程通信\"><a class=\"markdownIt-Anchor\" href=\"#进程通信\">#</a> 进程通信</h1>\n<p>进程通信实例 ------ 管道通信方式 Pipe</p>\n<div class=\"note default\">\n<p>write (fd [1],buf,size); 将 buf 中长为 size 字符的消息送入 fd [1] 口</p>\n</div>\n<div class=\"note default\">\n<p>read (fd [0], buf’,size); 从 fd [O] 口读出 size 个字符置于 buf 中</p>\n</div>\n<h1 id=\"进程与线程的比较\"><a class=\"markdownIt-Anchor\" href=\"#进程与线程的比较\">#</a> 进程与线程的比较</h1>\n<h2 id=\"关于调度的基本单位\"><a class=\"markdownIt-Anchor\" href=\"#关于调度的基本单位\">#</a> 关于调度的基本单位</h2>\n<p>在传统 OS 中，拥有资源、独立调度和分配的基本单位都是进程。</p>\n<p>在引入线程的 OS 中，线程作为调度和分派的基本单位，进程作为拥有资源的基本单位。</p>\n<p>在同一进程中，线程的切换不会引起进程切换，在由一个进程中的线程切换到另一个进程中的线程时，将会引起进程切换。</p>\n<h2 id=\"并发性\"><a class=\"markdownIt-Anchor\" href=\"#并发性\">#</a> 并发性</h2>\n<p>在引入线程的操作系统中，不仅进程之间可以并发执行，而且在一个进程中的多个线程之间，也可并发执行</p>\n<h2 id=\"拥有资源\"><a class=\"markdownIt-Anchor\" href=\"#拥有资源\">#</a> 拥有资源</h2>\n<p>进程是系统中拥有资源的一个基本单位，它可以拥有资源</p>\n<p>线程本身不拥有系统资源，仅有一点保证独立运行的资源</p>\n<p>允许多个线程共享其隶属进程所拥有的资源</p>\n<h2 id=\"独立性\"><a class=\"markdownIt-Anchor\" href=\"#独立性\">#</a> 独立性</h2>\n<p>同一进程中的不同线程之间的独立性要比不同进程之间的独立性低得多</p>\n<h2 id=\"开销\"><a class=\"markdownIt-Anchor\" href=\"#开销\">#</a> 开销</h2>\n<p>在创建或撤消进程时，OS 所付出的开销将显著大于创建或撤消线程时的开销</p>\n<p>线程切换的代价远低于进程切换的代价。</p>\n<p>同一进程中的多个线程之间的同步和通信也比进程的简单</p>\n<h2 id=\"支持多处理机系统\"><a class=\"markdownIt-Anchor\" href=\"#支持多处理机系统\">#</a> 支持多处理机系统</h2>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/MongoDB/MongoDB01/",
            "url": "https://735690757.github.io/MongoDB/MongoDB01/",
            "title": "MongoDB的安装与初步使用（Windows平台）",
            "date_published": "2023-08-30T04:20:00.000Z",
            "content_html": "<h1 id=\"初见-mongodb\"><a class=\"markdownIt-Anchor\" href=\"#初见-mongodb\">#</a> 初见 MongoDB</h1>\n<h2 id=\"什么是-mongodb\"><a class=\"markdownIt-Anchor\" href=\"#什么是-mongodb\">#</a> 什么是 MongoDB？</h2>\n<p>MongoDB 是一个开源的、面向文档的 NoSQL 数据库管理系统。它与传统的关系型数据库（如 MySQL、PostgreSQL）不同，因为它不使用表格来存储数据，而是使用一种称为 &quot;文档&quot; 的数据结构来组织和存储数据。每个文档是一个包含键值对的数据结构，类似于 JSON 格式，这使得 MongoDB 非常适合存储具有不同结构的数据。</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/30/iqxm3ufLjZ6XOSt.webp\" alt=\"MongoDB.png\"></p>\n<h1 id=\"mongodb-的安装与服务启动\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-的安装与服务启动\">#</a> MongoDB 的安装与服务启动</h1>\n<h2 id=\"下载-mongodb-安装包\"><a class=\"markdownIt-Anchor\" href=\"#下载-mongodb-安装包\">#</a> 下载 MongoDB 安装包</h2>\n<p>访问<mark><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20vZG93bmxvYWQtY2VudGVyI2NvbW11bml0eQ==\"> https://www.mongodb.com/download-center#community</span></mark><br>\n 或者点击下方连接</p>\n<div class=\"links\"><div class=\"item\" title=\"MongoDB\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20vZG93bmxvYWQtY2VudGVyI2NvbW11bml0eQ==\" data-background-image=\"https://webimages.mongodb.com/_com_assets/cms/kuyjf3vea2hg34taa-horizontal_default_slate_blue.svg?auto=format%252Ccompress\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20vZG93bmxvYWQtY2VudGVyI2NvbW11bml0eQ==\">MogoDB</span>\n          <p class=\"desc\">官方下载地址</p>\n          </div></div></div>\n<p>下载载最新版本的 MongoDB 数据库。</p>\n<h2 id=\"mongodb-安装\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-安装\">#</a> MongoDB 安装</h2>\n<ol>\n<li>双击刚刚下载的安装文件 (mongodb-XXXX-XXXX-signed.msi) 启动安装程序。</li>\n<li>单击【Next】按钮，进入 “End-User License Agreement” 界面</li>\n<li>勾选 “I accept the terms in the License Agreement” 选项，单击【Next】按钮进入 “Choose Setup Type” 界面，该界面中可选择安装类型</li>\n</ol>\n<p><span class=\"label primary\">Complete。此类型将安装所有程序功能，需占用较多的磁盘空间，建议大多数用户使用。</span><br>\n<span class=\"label primary\">Custom。此类型允许用户自行选择要安装的程序功能及安装位置，建议高级用户使用。</span></p>\n<ol start=\"4\">\n<li>MongoDB Compass 是 MongoDB 数据库的 GUI 管理系统，默认会选择安装，但是安装速度非常慢。</li>\n</ol>\n<p>值得一提的是，MongoDB 默认会将创建的数据库文件存储在 db 目录下，但是这个目录不会被主动创建，用户需要在 MongoDB 安装完成后手动创建 db 目录。在 “C:\\Program Files\\MongoDB\\Server\\4.0\\data\\” 目录下创建一个文件夹 db</p>\n<h1 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h1>\n<p>同样的我们也可以将 bin 目录配置到环境变量的 Path 中</p>\n<h1 id=\"启动-mongodb-服务启动与停止\"><a class=\"markdownIt-Anchor\" href=\"#启动-mongodb-服务启动与停止\">#</a> 启动 MongoDB 服务（启动与停止）</h1>\n<p>进入如图所示的目录输入<ins> net start MongoDB</ins> 启动服务，相应的输入<ins> net stop MongoDB</ins> 则为停止服务</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/30/wWe7dPghAMOn31t.png\" alt=\"startStop.png\"></p>\n<h1 id=\"mongodb-基本命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-基本命令\">#</a> MongoDB 基本命令</h1>\n<p>在 cmd 中输入 Mongo 进入 Mongo 的交互界面</p>\n<p>创建数据库:</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>创建数据库</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>use mydb</pre></td></tr></table></figure><p>展示数据库:</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>展示据库</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show dbs</pre></td></tr></table></figure><p>删除数据库:</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>删除数据库</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span><span class=\"token function\">dropDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>创建集合：</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>创建集合</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span><span class=\"token function\">createCollection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myCollection\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>插入数据：</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>插入</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>myCollection<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"_id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"诗岸梦行舟\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>删除：</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>删除</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>myCollection<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"_id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>更新：</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>更新</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>myCollection<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"_id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>$set<span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Karry.Liu\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>查询所有：</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>删除</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>myCollection<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>指定查询：</p>\n<figure class=\"highlight mongodb\"><figcaption data-lang=\"mongodb\"><span>删除</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>myCollection<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"_id\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "MongoDB",
                "MongoDB"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/01OS/",
            "url": "https://735690757.github.io/Operate-system/01OS/",
            "title": "操作系统知识点阶段总结",
            "date_published": "2023-08-28T23:50:00.000Z",
            "content_html": "<h1 id=\"引论\"><a class=\"markdownIt-Anchor\" href=\"#引论\">#</a> 引论</h1>\n<h2 id=\"操作系统是什么\"><a class=\"markdownIt-Anchor\" href=\"#操作系统是什么\">#</a> <strong>操作系统是什么？</strong></h2>\n<p>操作系统是计算机系统中的核心软件之一，它是位于硬件和应用程序之间的一层软件，负责管理和控制计算机的硬件资源，并为应用程序提供一个运行环境。操作系统充当计算机系统的管理者，协调各种硬件和软件资源的分配和调度，以使计算机能够高效、可靠地运行。</p>\n<h2 id=\"为什么要操作系统\"><a class=\"markdownIt-Anchor\" href=\"#为什么要操作系统\">#</a> <strong>为什么要操作系统？</strong></h2>\n<p>操作系统的存在是为了解决计算机资源管理和用户程序执行的复杂性。它提供了一种抽象层，使应用程序开发人员不必直接与底层硬件进行交互，从而简化了应用程序的开发和维护。此外，操作系统还负责处理多任务管理、内存管理、文件系统管理、用户接口等，为用户和应用程序提供了一个友好且高效的计算环境。</p>\n<h2 id=\"操作系统的特征是什么\"><a class=\"markdownIt-Anchor\" href=\"#操作系统的特征是什么\">#</a> <strong>操作系统的特征是什么？</strong></h2>\n<p>操作系统具有以下几个主要特征：</p>\n<ol>\n<li>\n<p><strong>并发（Concurrency）：</strong> 能够同时处理多个任务或程序，使多个程序可以在同一台计算机上交替执行。</p>\n<p><mark>（并发：同一时间段 并行：同一时刻）</mark></p>\n</li>\n<li>\n<p><strong>共享（Sharing）：</strong> 多个用户和应用程序可以同时访问计算机的资源，如内存、处理器、文件等。</p>\n<p><span class=\"label info\">操作系统的最基本特征：并发与共享</span></p>\n</li>\n<li>\n<p><strong>虚拟（Virtualization）：</strong> 操作系统可以为每个应用程序提供一种虚拟的环境，使其感觉自己独占了计算机资源。</p>\n</li>\n<li>\n<p><strong>异步（asynchronous）：</strong> 异步特性指的是操作系统允许某些任务在进行的过程中，不必等待前一个任务的完成，而可以继续执行其他任务。<mark>（存在不确定性）</mark></p>\n<p><span class=\"label success\">✔️操作系统的基本特征：并发、共享、虚拟、异步</span></p>\n</li>\n<li>\n<p><strong>抽象（Abstraction）：</strong> 操作系统通过抽象化硬件和软件资源，为应用程序提供一个更简单、一致的编程接口。</p>\n</li>\n<li>\n<p><strong>持久性（Persistence）：</strong> 数据和程序可以被存储在持久性存储设备中，并在计算机关闭后保留下来。</p>\n</li>\n<li>\n<p><strong>处理器管理（Processor Management）：</strong> 分配和管理处理器的时间片，以便多个任务可以轮流执行。</p>\n</li>\n<li>\n<p><strong>内存管理（Memory Management）：</strong> 管理计算机的内存资源，包括分配、释放、虚拟内存等。</p>\n</li>\n<li>\n<p><strong>文件系统管理（File System Management）：</strong> 管理文件的存储、组织、检索和保护。</p>\n</li>\n<li>\n<p><strong>设备管理（Device Management）：</strong> 管理输入输出设备，使应用程序能够与设备进行交互。</p>\n</li>\n</ol>\n<h2 id=\"实时操作系统和分时操作系统\"><a class=\"markdownIt-Anchor\" href=\"#实时操作系统和分时操作系统\">#</a> 实时操作系统和分时操作系统？</h2>\n<p>实时操作系统（Real-time Operating System，RTOS）和分时操作系统（Time-sharing Operating System）是两种不同类型的操作系统，用于满足不同应用场景下的需求。</p>\n<h3 id=\"实时操作系统rtos\"><a class=\"markdownIt-Anchor\" href=\"#实时操作系统rtos\">#</a> <strong>实时操作系统（RTOS）：</strong></h3>\n<p>实时操作系统是专门设计用于处理实时任务的操作系统。实时任务是具有严格时间要求的任务，可以分为硬实时和软实时任务。硬实时任务要求任务必须在严格的时间限制内完成，否则会导致系统错误。软实时任务也有时间要求，但对于这类任务，如果错过了截止日期，系统不会崩溃，但会影响任务的结果的实用性。</p>\n<p>RTOS 致力于确保任务能够按照特定的时间要求得到执行。它通常采用优先级调度策略，确保高优先级的实时任务能够在预定的时间内得到执行。</p>\n<h3 id=\"分时操作系统time-sharing-operating-system\"><a class=\"markdownIt-Anchor\" href=\"#分时操作系统time-sharing-operating-system\">#</a> <strong>分时操作系统（Time-sharing Operating System）：</strong></h3>\n<p>分时操作系统旨在支持多用户的共享计算机系统。它允许多个用户通过终端或其他用户界面同时访问系统，每个用户似乎都在独占地使用计算机资源。分时操作系统通过分配时间片（时间片轮转）来在多个任务之间切换，每个任务在时间片结束前都能得到一段时间的执行。</p>\n<p>分时操作系统的目标是实现多任务的并发执行，使用户能够在几乎同时使用计算机资源，这样可以提高资源利用率和用户体验。</p>\n<p><span class=\"label info\">分时操作系统特征：多路性、独立性、及时性、交互性。详细解释：P10</span></p>\n<h2 id=\"单道批处理系统和多道批处理系统\"><a class=\"markdownIt-Anchor\" href=\"#单道批处理系统和多道批处理系统\">#</a> 单道批处理系统和多道批处理系统？</h2>\n<p>单道批处理系统（Single Batch Processing System）和多道批处理系统（Multi-Batch Processing System）是两种不同的操作系统工作方式，用于管理和执行计算机中的多个任务。</p>\n<h3 id=\"单道批处理系统\"><a class=\"markdownIt-Anchor\" href=\"#单道批处理系统\">#</a> <strong>单道批处理系统：</strong></h3>\n<p>单道批处理系统是早期计算机操作系统的一种。在这种系统中，计算机只能处理一道程序，也就是一个任务，每次只有一个任务在运行。当一个任务执行完成后，才能加载并执行下一个任务。这种系统对于用户和程序员来说，操作不够灵活，因为他们必须等待当前任务执行完成才能继续工作。</p>\n<p><span class=\"label danger\">💔单道批处理系统的缺点：系统中的的资源得不到充分利用！</span></p>\n<p><span class=\"label warning\">✍️注意注意！！！单道批处理系统无并发，不能称之为 OS！！！</span></p>\n<h3 id=\"多道批处理系统\"><a class=\"markdownIt-Anchor\" href=\"#多道批处理系统\">#</a> <strong>多道批处理系统：</strong></h3>\n<p>多道批处理系统是在单道批处理系统的基础上发展而来的。这种系统允许计算机在内存中同时加载和管理多个任务，而不需要等待前一个任务的完成。多道批处理系统将内存分割成多个区域，每个区域可以加载一个任务的代码和数据。操作系统会在任务之间进行切换，以实现多个任务的并发执行。这种方式提高了计算机的资源利用率和效率。</p>\n<h2 id=\"os-的类型\"><a class=\"markdownIt-Anchor\" href=\"#os-的类型\">#</a> OS 的类型？</h2>\n<ol>\n<li><strong>多道批处理系统（Multi-programming Batch System）：</strong> 多道批处理系统是一种操作系统，允许多个任务（作业）在内存中同时存在，但每个任务的执行是按照一定的调度策略轮流进行的。它旨在提高计算机的资源利用率，通过在任务之间切换以避免 CPU 空闲。每个任务通常独立运行，不需要用户干预。这种系统适用于大量任务需要批量处理，例如批量数据处理任务。</li>\n<li><strong>分时系统（Time-sharing System）：</strong> 分时系统允许多个用户通过终端或用户界面同时访问计算机，每个用户似乎都在独占地使用计算机资源。系统通过快速的任务切换（时间片轮转）实现用户之间的并发执行，每个用户能够迅速交互并使用计算机。分时系统适用于多用户、交互式的环境，如图形用户界面和终端。</li>\n<li><strong>实时系统（Real-time System）：</strong> 实时系统是专门设计用于处理实时任务的操作系统。实时任务具有严格的时间要求，可以分为硬实时和软实时。硬实时任务要求任务必须在严格的时间限制内完成，否则会导致系统错误。软实时任务也有时间要求，但错过截止日期不会导致系统错误。实时系统旨在确保任务能够按照特定的时间要求得到执行，适用于需要在严格时间约束下运行的应用，如飞行控制系统和医疗设备。</li>\n</ol>\n<h2 id=\"操作系统能干什么\"><a class=\"markdownIt-Anchor\" href=\"#操作系统能干什么\">#</a> <strong>操作系统能干什么？</strong></h2>\n<p>操作系统的主要任务包括：</p>\n<ul>\n<li>管理计算机的硬件资源，如处理器、内存、硬盘、网络接口等。</li>\n<li>提供多任务管理，使多个应用程序可以同时运行。</li>\n<li>提供虚拟化，将物理资源抽象为多个虚拟资源，提供更好的资源利用率。</li>\n<li>管理文件系统，让用户能够创建、存储、组织和检索文件。</li>\n<li>处理输入输出，使用户和应用程序能够与外部设备进行交互。</li>\n<li>提供用户界面，让用户能够与计算机进行交互，如命令行界面或图形用户界面。</li>\n</ul>\n<h2 id=\"操作系统有哪些\"><a class=\"markdownIt-Anchor\" href=\"#操作系统有哪些\">#</a> <strong>操作系统有哪些？</strong></h2>\n<p>常见的操作系统包括：</p>\n<ul>\n<li>Windows：微软开发的操作系统系列，如 Windows 10、Windows 11 等。</li>\n<li>macOS：苹果公司开发的操作系统，用于 Mac 电脑。</li>\n<li>Linux：一种开源的 Unix-like 操作系统，有许多不同的发行版，如 Ubuntu、Fedora、Debian 等。</li>\n<li>Unix：一种经典的多用户多任务操作系统，影响了许多其他操作系统的设计。</li>\n<li>Android：基于 Linux 内核的移动设备操作系统，由谷歌开发。</li>\n<li>iOS：苹果公司用于 iPhone 和 iPad 等移动设备的操作系统。</li>\n<li>OpenHarmony：分布式操作系统，由华为公司开发。</li>\n</ul>\n<h2 id=\"操作系统的新发展\"><a class=\"markdownIt-Anchor\" href=\"#操作系统的新发展\">#</a> <strong>操作系统的新发展？</strong></h2>\n<p>操作系统领域一直在不断发展演进。一些新的趋势和发展包括：</p>\n<ul>\n<li><strong>云操作系统：</strong> 针对云计算环境的操作系统，如 Google 的 Chrome OS 和微软的 Azure Sphere。</li>\n<li><strong>嵌入式操作系统：</strong> 用于嵌入式系统，如物联网设备和嵌入式控制器的操作系统，如 FreeRTOS 和 Zephyr。</li>\n<li><strong>容器化和微服务：</strong> 使用容器技术（如 Docker）和微服务架构的操作系统，以支持更高效的应用程序部署和管理。</li>\n<li><strong>实时操作系统（RTOS）：</strong> 针对实时应用程序的操作系统，要求任务能够在严格的时间限制内得到执行。</li>\n<li><strong>量子操作系统：</strong> 随着量子计算的发展，涉及管理量子资源和运行量子算法的操作系统正在探索中。</li>\n</ul>\n<p>这些都只是操作系统领域的一部分发展趋势，操作系统将继续适应新的硬件和应用场景，以满足不断变化的需求。</p>\n<h2 id=\"简单总结\"><a class=\"markdownIt-Anchor\" href=\"#简单总结\">#</a> 简单总结！</h2>\n<p>操作系统的定义可归纳为：操作系统是控制和管理计算机系统内各种硬件和软件资源、合理组织计算机工作流程的系统软件 (或程序集合)，是用户与计算机之间的接口。</p>\n<p>操作系统是什么？<mark>是核心系统软件</mark><br>\n操作系统管什么？<mark>控制和管理系统内各资源</mark><br>\n操作系统有何用？<mark>扩充硬件功能，方便用户使用</mark></p>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h2>\n<ol>\n<li class=\"quiz\">\n<p>一个作业第一次执行时用了 5 分钟，而第二次执行时用了 6 分钟，这说明了操作系统的 <span class=\"gap\"></span> 特点。</p>\n<ul class=\"options\">\n<li>并发</li>\n<li>共享</li>\n<li>虚拟</li>\n<li class=\"correct\">异步</li>\n</ul>\n<details class=\"primary\"><summary>解释</summary><div>\n<ul>\n<li>异步存在时间不确定性</li>\n</ul>\n</div></details>\n</li>\n<li class=\"quiz\">\n<p>操作系统的最基本的两个特征是资源共享和 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>多道程序设计</li>\n<li class=\"correct\">程序的并发执行</li>\n<li>中断</li>\n<li>程序顺序执行</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>单道批处理系统的主要缺点是 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li class=\"correct\">CPU 利用率不高</li>\n<li>失去了交互性</li>\n<li>不具备并行性</li>\n<li>以上都不是</li>\n</ul>\n</li>\n</ol>\n<details class=\"primary\"><summary>解释</summary><div>\n<ul>\n<li>实际上 ABC 都是他的缺点，但是 <mark>CPU / 资源利用率不高</mark>是他的主要缺点</li>\n</ul>\n</div></details>\n<ol start=\"4\">\n<li class=\"quiz false\">\n<p>采用多道程序设计的系统中，系统中的程序道数越多，系统的效率越高。</p>\n</li>\n<li class=\"quiz false\">\n<p>通常将 CPU 模式分为内核态 (核心态) 和用户态，这样做的目的是为了提高运行速度。</p>\n</li>\n<li class=\"quiz true\">\n<p>操作系统内核能使用特权指令。</p>\n</li>\n</ol>\n<details class=\"info\"><summary>解析</summary><div>\n<ol start=\"4\">\n<li>程序道数多多会导致每个程序分得的内存不够，很多程序所需的数据和代码要临时从磁盘调入内存系统会频繁的进行 I/O，使得系统效率下降！</li>\n<li>是为了提高安全性 ==（双重工作模式 P20）==</li>\n<li>确实对</li>\n</ol>\n</div></details>\n<h1 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\">#</a> 进程</h1>\n<h2 id=\"进程的几个基本状态\"><a class=\"markdownIt-Anchor\" href=\"#进程的几个基本状态\">#</a> 进程的几个基本状态</h2>\n<ol>\n<li><strong>就绪状态（Ready）：</strong> 进程已获得除处理器外的所需资源，等待分配处理器资源；只要分配了处理器进程就可执行。就绪进程可以按多个优先级来划分队列。例如，当一个进程由于时间片用完而进入就绪状态时，排入低优先级队列；当进程由 I/O 操作完成而进入就绪状态时，排入高优先级队列.</li>\n<li><strong>运行状态 (Running)：</strong> 进程占用处理器资源；处于此状态的进程的数目小于等于处理器的数目。在没有其他进程可以执行时 (如所有进程都在阻塞状态), 通常会自动执行系统的空闲进程.</li>\n<li><strong>阻塞状态 (Blocked)：</strong> 由于进程等待某种条件（如 I/O 操作或进程同步）, 在条件满足之前无法继续执行。该事件发生前即使把处理机分配给该进程，也无法运行.</li>\n</ol>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/X8stjGRqdnJPr26.jpg\" alt=\"osStateTransition.jpg\"></p>\n<h2 id=\"名词解释\"><a class=\"markdownIt-Anchor\" href=\"#名词解释\">#</a> 名词解释</h2>\n<p><strong>挂起：</strong> 从内存挂至外存</p>\n<p><strong>时间片：</strong> 程序执行的一段时间</p>\n<p><strong>阻塞：</strong> 发生 I/O 或者其他事件进入阻塞状态</p>\n<h2 id=\"扩展状态考研\"><a class=\"markdownIt-Anchor\" href=\"#扩展状态考研\">#</a> 扩展状态（考研）</h2>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/RDfm3M4nLPioruT.jpg\" alt=\"osStateTransitionExtend.jpg\"></p>\n<h2 id=\"练习-2\"><a class=\"markdownIt-Anchor\" href=\"#练习-2\">#</a> 练习</h2>\n<ol>\n<li class=\"quiz\">\n<p>当 <span class=\"gap\"></span> 时，进程从执行状态转变为就绪状态。</p>\n<ul class=\"options\">\n<li>进程被调度程序选中</li>\n<li class=\"correct\">时间片到</li>\n<li>等待某一事件</li>\n<li>等待的事件发生</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>在进程状态转换时，下列 <span class=\"gap\"></span> 转换是不可能发生的。</p>\n<ul class=\"options\">\n<li>就绪态 一 &gt; 运行态</li>\n<li>运行态 一 &gt; 就绪态</li>\n<li>运行态 一 &gt; 阻塞态</li>\n<li class=\"correct\">阻塞态 一 &gt; 运行态</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>进程和程序的本质区别是 <span class=\"gap\"></span></p>\n<ul class=\"options\">\n<li class=\"correct\">前者是动态的，后者是静态的</li>\n<li>前者存储在内存，后者存储在外存</li>\n<li>前者在一个文件中，后者在多个文件中</li>\n<li>前者分时使用 CPU，后者独占 CPU</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>程序运行时独占系统资源，只有程序本身能改变系统资源状态，这是指 <span class=\"gap\"></span></p>\n<ul class=\"options\">\n<li>程序顺序执行的再现性</li>\n<li>并发程序失去再现性</li>\n<li>并发程序失夫封闭性</li>\n<li class=\"correct\">程序顺序执行时的封闭性</li>\n</ul>\n</li>\n<li class=\"quiz false\">\n<p>不同的进程必然对应不同的程序。</p>\n</li>\n<li class=\"quiz true\">\n<p>进程状态的转换是由操作系统完成的，对用户是透明的。</p>\n</li>\n</ol>\n<h2 id=\"进程控制块process-control-blockpcb\"><a class=\"markdownIt-Anchor\" href=\"#进程控制块process-control-blockpcb\">#</a> 进程控制块（Process Control Block，PCB）</h2>\n<p>每个正在运行或等待运行的进程都有一个对应的 PCB，它包含了进程的各种属性、状态以及与其相关的控制信息。PCB 是操作系统内部用于实现进程管理的重要数据结构之一。</p>\n<ol>\n<li>进程状态（Process State）：表示进程的当前状态，如运行、就绪、阻塞等。操作系统根据进程状态来进行调度和管理。</li>\n<li>程序计数器（Program Counter）：指向进程当前执行的指令的地址，用于恢复进程的执行状态。</li>\n<li>寄存器（Registers）：保存进程的寄存器值，包括通用寄存器、程序状态寄存器等。</li>\n<li>进程优先级（Process Priority）：用于调度器决定哪个进程将获得 CPU 执行时间。</li>\n<li>进程标识符（Process ID）：唯一标识一个进程的数字或字符串。</li>\n<li>进程所拥有的资源信息：如打开的文件列表、分配的内存空间等。</li>\n<li>进程的父子关系：记录进程之间的层次结构，用于实现进程间的通信和协作。</li>\n<li>进程的各种统计信息：如运行时间、等待时间等，用于性能分析和调优。</li>\n</ol>\n<p>PCB 的存在使得操作系统可以高效地进行进程的切换、调度、挂起、恢复等操作。当操作系统需要切换到另一个进程时，它可以保存当前进程的状态信息到其对应的 PCB，然后加载新进程的状态信息，从而实现进程切换。这种切换是操作系统多任务处理的基础，使得多个进程可以在单个 CPU 上共享时间，并且实现了对系统资源的合理分配和利用。</p>\n<h2 id=\"pcb-组织方式\"><a class=\"markdownIt-Anchor\" href=\"#pcb-组织方式\">#</a> PCB 组织方式</h2>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/An6JckEslPQOC49.jpg\" alt=\"PCB1.jpg\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/pO4wvVrkN1DdMo8.jpg\" alt=\"PCB2.jpg\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/cr1Bm69ez7uKgUZ.jpg\" alt=\"POB3.jpg\"></p>\n<h2 id=\"练习-3\"><a class=\"markdownIt-Anchor\" href=\"#练习-3\">#</a> 练习</h2>\n<ol>\n<li class=\"quiz true\">\n<p>在 PCB 中可以直接或间接找到有关该进程的所有信息。</p>\n</li>\n<li class=\"quiz true\">\n<p>进程由 PCB 和其执行的程序、数据所组成</p>\n</li>\n</ol>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/experience/SSM01/",
            "url": "https://735690757.github.io/experience/SSM01/",
            "title": "SSM框架整合",
            "date_published": "2023-08-15T03:00:00.000Z",
            "content_html": "<h1 id=\"是什么ssm\"><a class=\"markdownIt-Anchor\" href=\"#是什么ssm\">#</a> 是什么 SSM</h1>\n<p>SSM 是三个框架的简写，本别是<strong> Spring，SpringMVC，Mybatis</strong>，这三个框架作为 JavaWeb 强有力的支撑件，极大地提高了开发效率，降低了维护成本，是 Java 程序员学习 Web 技术的<strong>必经之路</strong>（至少现在是这样）</p>\n<p>在此之前，我希望你能熟练掌握，额，哪怕不熟练也要了解 Web 部分的老祖：<strong>请求，响应以及 Servlet 技术</strong>，这些技术能帮助你更好、更快、更流畅的掌握 SSM 技术。</p>\n<p>其次本文主要讲解 SSM 整合的相关细节，<strong>并不会深入讲解 Spring，SpringMVC，Mybatis 每个框架的知识</strong>，希望大家在看本文之前能了解 Spring，SpringMVC，Mybatis 单个框架的使用方法。</p>\n<h1 id=\"整合开始\"><a class=\"markdownIt-Anchor\" href=\"#整合开始\">#</a> 整合开始</h1>\n<p>首先我先放出最终的整合状态，其实也不一定非要按照我这样来做。</p>\n<table>\n<thead>\n<tr>\n<th><img data-src=\"https://s2.loli.net/2023/08/27/oOYkfcqT4sChgZ8.png\" alt=\"1.png\"></th>\n<th style=\"text-align:left\">bean 包：大多数的实体类<br /><br />config 包：整合的核心配置类<br /><br />controller 包：外部控制器暴露点<br /><br />mapper 包：Mybiats SQL 标准化<br /><br />service 包：业务逻辑，包含接口以及实现<br /><br />resource 包：资源文件、配置文件<br /><br />webapp：前端资源</th>\n</tr>\n</thead>\n</table>\n<p>那么接下来我将带着大家一步一步的来做，从创建项目到最终完成整合。</p>\n<h2 id=\"创建项目maven构建方式\"><a class=\"markdownIt-Anchor\" href=\"#创建项目maven构建方式\">#</a> 创建项目（Maven 构建方式）</h2>\n<p>选择新建一个项目（或模块），选择<strong> Maven Archetype 形式</strong>创建，我给他命名叫做 SSM_demo。</p>\n<p>JDK：1.8（Java 8）</p>\n<p>Archetype：选择最后以<strong> webapp 结尾</strong>的，这是一个创建模板</p>\n<p>组 ID：公司域名反写</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/8AHEv3qyFMLpZi9.png\" alt=\"2.png\"></p>\n<h2 id=\"创建包结构\"><a class=\"markdownIt-Anchor\" href=\"#创建包结构\">#</a> 创建包结构</h2>\n<p>在 main 目录下创建 java 目录和必要的包结构</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/wdcBFt4Vl7auSj5.png\" alt=\"3.png\"></p>\n<h2 id=\"依赖导入-必要启动配置\"><a class=\"markdownIt-Anchor\" href=\"#依赖导入-必要启动配置\">#</a> 依赖导入、必要启动配置</h2>\n<p>我们需要在 pom.xml 文件下导入我们 SSM 所需要的依赖，并配置必要的启动项。</p>\n<h3 id=\"导入详解\"><a class=\"markdownIt-Anchor\" href=\"#导入详解\">#</a> 导入详解</h3>\n<p><strong>第一步：导包</strong></p>\n<p>需要思考我们需要什么依赖：</p>\n<p><strong><ins class=\"wavy\">junit</ins></strong>：单元测试。</p>\n<p><strong><ins class=\"wavy\">spring-webmvc</ins></strong>：整个依赖就比较强大了她不仅包含了 SpringMVC 的部分也包含了 Spring-Context 部分，其实也不难理解，因为 SpringMVC 是基于 Spring 开发的，那也就必然包含了 Spring 框架的部分。</p>\n<p>至此我们还剩下数据库的部分，我们继续将其填充完整。</p>\n<p><strong><ins class=\"wavy\">Mybatis</ins></strong>：这个是 Mybatis 的核心依赖。</p>\n<p><strong><ins class=\"wavy\">mybatis-spring</ins></strong>：整个是将 Mybatis 与 Spring 进行整合。</p>\n<p><strong><ins class=\"wavy\">spring-jdbc</ins></strong>：简化 Java 应用程序与数据库之间的交互，Spring JDBC 是 MyBatis-Spring 的底层依赖，提供了连接管理、事务管理等基础功能。</p>\n<p><strong><ins class=\"wavy\">mysql-connector-java</ins></strong>：这个是 MySQL 的驱动依赖。</p>\n<p><strong><ins class=\"wavy\">druid</ins></strong>：数据库连接池。</p>\n<p><strong><ins class=\"wavy\">servlet-api</ins></strong>：Spring MVC 架构是基于 Servlet 规范的。它使用 Servlet API 来处理和分发 Web 请求，以及与 Web 容器进行交互。</p>\n<p><strong><ins class=\"wavy\">jackson-databind</ins></strong>：用于在 Java 对象和 JSON 数据之间进行序列化（对象到 JSON）和反序列化（JSON 到对象）的核心部分。</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.13.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-webmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.0.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>6.0.6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>8.0.31<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.servlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>servlet-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>provided<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.fasterxml.jackson.core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jackson-databind<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.13.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>一定要为我们的 servlet-api 配置作用域为 provided，<strong>这是非常大的一个坑点</strong>！！！</p>\n<p>如果您不将  <code>servlet-api</code>  的作用域设置为  <code>provided</code> ，而是将其作用域设置为默认的  <code>compile</code> ，则可能会导致以下问题和影响：</p>\n<ol>\n<li><strong>冲突问题：</strong> 如果您的应用程序包含了自己的 Servlet API 实现（例如 jar 包），而 Web 容器也提供了自己的实现，可能会导致冲突和不稳定性。</li>\n<li><strong>版本不一致：</strong> 不同的 Web 容器可能使用不同版本的 Servlet API，如果您将 API 包含在应用程序中，可能会导致版本不一致的问题。</li>\n<li><strong>应用程序大小增加：</strong> 将 Servlet API 包含在应用程序中会增加应用程序的大小，尽管这在绝大多数情况下可能不会对性能产生明显影响，但仍然会浪费一些资源。</li>\n<li><strong>维护困难：</strong> 如果您在多个项目中重复地包含 Servlet API，可能会导致维护上的困难，特别是在更新版本或切换到不同的 Web 容器时。</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>provided<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>第二步：启动配置</strong></p>\n<p>在这里你可以选择外挂 Tomcat 和 Maven 插件的两种启动方式，在这里我选择插件法，因为外挂启动真的是太慢了 QWQ</p>\n<p>pom.xml 文件中的 build 标签下配置 tomcat 插件：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>finalName</span><span class=\"token punctuation\">></span></span>SSM_demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>finalName</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.tomcat.maven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>tomcat7-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">></span></span>80<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>port</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>path</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>80 端口为启动端口，你也可以进行修改，例如修改到 8090</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">></span></span>8090<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>port</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>第三步：Java 版本配置</strong></p>\n<p>其实这是一个<strong>坑点</strong>我们需要在 pom 文件加上这两行：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>这是在声明我们的 Java 版本为 java8，这个一定要根据我们项目的 java 版本来填写</p>\n<h3 id=\"最终展示\"><a class=\"markdownIt-Anchor\" href=\"#最终展示\">#</a> 最终展示</h3>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"><span>pom.xml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>         <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                      http://maven.apache.org/maven-v4_0_0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modelVersion</span><span class=\"token punctuation\">></span></span>4.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>modelVersion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.KarryCode<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>SSM_demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>packaging</span><span class=\"token punctuation\">></span></span>war<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>packaging</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0-SNAPSHOT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>SSM_demo Maven Webapp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>http://maven.apache.org<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.13.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-webmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.0.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.0.2.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>8.0.31<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.2.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.servlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>servlet-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>provided<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.fasterxml.jackson.core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jackson-databind<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.13.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>finalName</span><span class=\"token punctuation\">></span></span>SSM_demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>finalName</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.tomcat.maven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>tomcat7-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">></span></span>80<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>port</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>path</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"创建jdbcproperties文件\"><a class=\"markdownIt-Anchor\" href=\"#创建jdbcproperties文件\">#</a> 创建 JDBC.properties 文件</h2>\n<p>在 <code>resource</code>  目录下创建<strong> jdbc.properties</strong></p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"><span>JdbcProperties</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">jdbc.driver</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">com.mysql.cj.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">jdbc.url</span> <span class=\"token value attr-value\">= </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">jdbc.username</span> <span class=\"token value attr-value\">= </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">jdbc.password</span> <span class=\"token value attr-value\">=</span></pre></td></tr></table></figure><p>等号后面的根据自己的需要进行填写</p>\n<p>为了测试，我还创建的一张表：</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/Q1qrlnCDZFi39c8.png\" alt=\"4.png\"></p>\n<p>这是我的生成脚本：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"><span>生成脚本</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tb_book</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    id          <span class=\"token keyword\">int</span> <span class=\"token keyword\">auto_increment</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">type</span>        <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    name        <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>  <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    description <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token boolean\">null</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"创建mapper代理包\"><a class=\"markdownIt-Anchor\" href=\"#创建mapper代理包\">#</a> 创建 mapper 代理包</h2>\n<p>首先在 resource 目录下创建与 java 源代码目录一样的包，切记一定要以 “/” 的分割形式去创建，</p>\n<p>例如：<mark>com/KarryCode/mapper</mark></p>\n<p>创建好后，后置在这个目录下创建对应的 xml，我们稍后再说！</p>\n<h2 id=\"创建配置文件配置类\"><a class=\"markdownIt-Anchor\" href=\"#创建配置文件配置类\">#</a> 创建配置文件（配置类）</h2>\n<p>这部分将以配置类的形式进行配置。</p>\n<h3 id=\"spring_mybatis整合配置\"><a class=\"markdownIt-Anchor\" href=\"#spring_mybatis整合配置\">#</a> Spring_Mybatis 整合配置</h3>\n<p>首先在 config 包下创建<mark> Spring_Mybatis 配置类</mark></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DruidDataSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactoryBean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapperScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ComponentScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PropertySource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSourceTransactionManager</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PlatformTransactionManager</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableTransactionManagement</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * @ClassName SpringConfig</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * @Description TODO Spring 核心配置类</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span>                                  <span class=\"token comment\">//TODO 核心配置唯一标识</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"com.KarryCode.service\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"com.KarryCode.bean\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//TODO 注解扫描指定包</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//TODO 加载 JDBC 配置类</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.KarryCode.mapper\"</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">//TODO MyBatis 基于包扫描方式识别 Mapper</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token annotation punctuation\">@EnableTransactionManagement</span>                    <span class=\"token comment\">//TODO 事务的自动代理，注解驱动</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Spring_MybatisConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">//TODO DruidDataSource 数据源的产生</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.driver&#125;\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> driver<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.url&#125;\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.username&#125;\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.password&#125;\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> password</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\">// 里面还可以配置更多关于数据库连接池的选项.......</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> dataSource<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactoryBean</span> <span class=\"token function\">sqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\">//TODO sqlSessionFactoryBean MybatisBeans 加载</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token class-name\">SqlSessionFactoryBean</span> sqlSessionFactoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        sqlSessionFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">return</span> sqlSessionFactoryBean<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PlatformTransactionManager</span> <span class=\"token function\">transactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">//TODO 平台事务管理</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token class-name\">DataSourceTransactionManager</span> dataSourceTransactionManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        dataSourceTransactionManager<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> dataSourceTransactionManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>具体内容不展开讲解，主要概述一下注解以及方法的作用：</p>\n<p><mark>@MapperScan</mark>：指定包扫描的路径。</p>\n<p><mark>DataSource dataSource</mark>：数据源的产生。</p>\n<p><mark>PlatformTransactionManager transactionManager</mark>：事务交由 Spring 管理。</p>\n<h3 id=\"springmvc整合配置\"><a class=\"markdownIt-Anchor\" href=\"#springmvc整合配置\">#</a> SpringMVC 整合配置</h3>\n<p>同样地，在 config 包下创建 SpringMvcConfig</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ComponentScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableWebMvc</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @PackageName com.KarryCode.config</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @ClassName SpringMvcConfig</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token annotation punctuation\">@EnableWebMvc</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.KarryCode.controller\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringMvcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"servlet-api整合配置\"><a class=\"markdownIt-Anchor\" href=\"#servlet-api整合配置\">#</a> Servlet-api 整合配置</h3>\n<p>同样地，在 config 包下创建 ServletConfig</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AbstractAnnotationConfigDispatcherServletInitializer</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServletConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getRootConfigClasses</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">Spring_MybatisConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getServletConfigClasses</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">SpringMvcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getServletMappings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此时的目录结构是这样的：</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/lUtQbGwr6AmTeLY.png\" alt=\"5.png\"></p>\n<p><mark>至此，整合已经基本完成！</mark></p>\n<h2 id=\"bean实体类创建\"><a class=\"markdownIt-Anchor\" href=\"#bean实体类创建\">#</a> Bean 实体类创建</h2>\n<p>根据数据库里的以及逻辑关系创建 Bean 实体，在这里我先创建一个 Book 实体</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @PackageName com.KarryCode.bean</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @ClassName Book</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 省略 getter/setter/ 构造器（有参 / 无参）/toString</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"mapper接口创建\"><a class=\"markdownIt-Anchor\" href=\"#mapper接口创建\">#</a> mapper 接口创建</h2>\n<p>在 mapper 包下创建一个 mapper 接口 BookMapper</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @PackageName com.KarryCode.mapper</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @ClassName BookMapper</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookMapper</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into ssm_db.tb_book values (null,#&#123;type&#125;,#&#123;name&#125;,#&#123;description&#125;)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Update</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update ssm_db.tb_book set type=#&#123;type&#125;,name=#&#123;name&#125;,description=#&#123;description&#125; where id=#&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token annotation punctuation\">@Delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from ssm_db.tb_book where tb_book.id=#&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from ssm_db.tb_book where id=#&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResultType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">Book</span> <span class=\"token function\">getBookById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from ssm_db.tb_book\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过注解方式配置了增删改查四种方法</p>\n<h2 id=\"mapper代理xml创建\"><a class=\"markdownIt-Anchor\" href=\"#mapper代理xml创建\">#</a> mapper 代理 xml 创建</h2>\n<p>虽然没啥用，但是创建了也没什么坏处，在 resource 的对应目录下创建 BookMapper.xml</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">mapper</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"https://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.KarryCode.mapper.BookMapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"service逻辑创建\"><a class=\"markdownIt-Anchor\" href=\"#service逻辑创建\">#</a> Service 逻辑创建</h2>\n<p><mark>BookService 接口</mark></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Transactional</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @ClassName BookService</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * @param book</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * @return boolean</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * @Author KarryLiu_刘珂瑞</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * @Date 2023/8/14 下午 10:58</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     * @Description TODO 保存</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     * @param book</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     * @return boolean</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     * @Author KarryLiu_刘珂瑞</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     * @Date 2023/8/14 下午 10:58</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     * @Description TODO 修改</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>     * @param id</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     * @return boolean</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     * @Author KarryLiu_刘珂瑞</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>     * @Date 2023/8/14 下午 10:58</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     * @Description TODO 根据 id 删除</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>     * @param id</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     * @return edu.beihua.bean.Book</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     * @Author KarryLiu_刘珂瑞</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     * @Date 2023/8/14 下午 10:59</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * @Description TODO 根据 id 查询</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token class-name\">Book</span> <span class=\"token function\">getBookById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     * @param</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     * @return java.util.List&lt;edu.beihua.bean.Book></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     * @Author KarryLiu_刘珂瑞</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>     * @Date 2023/8/14 下午 10:59</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     * @Description TODO 查询全部</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark>BookService 接口实现</mark></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>BookMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>BookService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Date 2023/8/14 下午 10:43</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @ClassName BookServiceImpl</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookMapper</span> bookMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"save=====>Service\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">int</span> save <span class=\"token operator\">=</span> bookMapper<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>save<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update=====>Service\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        bookMapper<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete=====>Service\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        bookMapper<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span> <span class=\"token function\">getBookById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getBookById=====>Service\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token class-name\">Book</span> book <span class=\"token operator\">=</span> bookMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getBookById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">return</span> book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getBookList=====>Service\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">return</span> bookMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"springmybatis通路检测\"><a class=\"markdownIt-Anchor\" href=\"#springmybatis通路检测\">#</a> Spring—Mybatis 通路检测</h2>\n<p>编写测试类，观察输出</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>Spring_MybatisConfig<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>BookService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AnnotationConfigApplicationContext</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @PackageName PACKAGE_NAME</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @ClassName mybatisTest</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> mybatisSpringTest <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMybatisSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">AnnotationConfigApplicationContext</span> annotationConfigApplicationContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Spring_MybatisConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> annotationConfigApplicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">></span></span> bookList <span class=\"token operator\">=</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"info\"><summary>输出</summary><div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"\">\n<p>信息: {dataSource-1} inited<br>\ngetBookList=====&gt;Service<br>\n [Book {id=1, type=‘计算机’, name=‘软件工程’, description=‘吼吼吼吼’}, Book {id=2, type=‘文学’, name=‘儒家经典’, description=‘儒家好书啊！！！！！’}, Book {id=3, type=‘科技’, name=‘百科全书’, description=‘真不错！！！！’}, Book {id=4, type=‘美术’, name=‘当代顶流美术’, description=‘好书啊好书！！！！’}, Book {id=6, type=‘科技’, name=‘百科全书’, description=‘真不错！！！！’}, Book {id=7, type=‘科技’, name=‘百科全书’, description=‘真不错！！！！’}]</p>\n<p>进程已结束，退出代码 0</p>\n</div>\n</div></details>\n<p><mark>至此，Spring—Mbatis 整合完成</mark></p>\n<h2 id=\"构建controller\"><a class=\"markdownIt-Anchor\" href=\"#构建controller\">#</a> 构建 Controller</h2>\n<p>在 controller 包下创建 BookController</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>bean<span class=\"token punctuation\">.</span>Book<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>BookService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Transactional</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author KarryLiu</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Creed may all the beauty be blessed</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @PackageName com.KarryCode.controller</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @ClassName BookController</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @Description TODO</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/books\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookService</span> bookService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@PutMapping</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span> <span class=\"token function\">getBookById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getBookById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getBookList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>符合 Restful 设计建议。</p>\n<h2 id=\"启动tomcat\"><a class=\"markdownIt-Anchor\" href=\"#启动tomcat\">#</a> 启动 Tomcat</h2>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/LwPvIdjzuOrF3qA.png\" alt=\"6.png\"></p>\n<h2 id=\"postman接口测试\"><a class=\"markdownIt-Anchor\" href=\"#postman接口测试\">#</a> Postman 接口测试</h2>\n<h3 id=\"存书测试\"><a class=\"markdownIt-Anchor\" href=\"#存书测试\">#</a> 存书测试</h3>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/3WONSCfKBlwZYQU.png\" alt=\"7.png\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/cWS38NF52uvHlzR.png\" alt=\"8.png\"></p>\n<p><span class=\"label success\">success</span></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/bW6ftFnpC4zrTGM.png\" alt=\"9.png\"></p>\n<h3 id=\"查书测试\"><a class=\"markdownIt-Anchor\" href=\"#查书测试\">#</a> 查书测试</h3>\n<h4 id=\"查询全部\"><a class=\"markdownIt-Anchor\" href=\"#查询全部\">#</a> 查询全部</h4>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/R4KpPlMejHQ1q5i.png\" alt=\"10.png\"></p>\n<h4 id=\"指定id查书\"><a class=\"markdownIt-Anchor\" href=\"#指定id查书\">#</a> 指定 id 查书</h4>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/u2EnQV3ctBeG9PT.png\" alt=\"11.png\"></p>\n<h3 id=\"更新书\"><a class=\"markdownIt-Anchor\" href=\"#更新书\">#</a> 更新书</h3>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/Fp3PiJ6UKnAY4sT.png\" alt=\"12.png\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/u2LeioHRw4mUtTM.png\" alt=\"13.png\"></p>\n<h3 id=\"删除测试\"><a class=\"markdownIt-Anchor\" href=\"#删除测试\">#</a> 删除测试</h3>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/8LGMQbpAStu7OCB.png\" alt=\"14.png\"></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/27/68mTx7N2kGWr9PX.png\" alt=\"15.png\"></p>\n<p><mark>所有接口测试调通，至此 SSM 整合完毕</mark></p>\n<h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>其实 SSM 整合还是比较简单的，通过三个框架的配置就可以完成了，后面的工作都是在进行业务创建。</p>\n<p>好了！本篇文章到这里就结束了，有什么不理解的地方或者有疑问的地方请在评论区留言，或者添加我的联系方式，欢迎各位大佬积极批评讨论！谢谢！</p>\n",
            "tags": [
                "开发经验",
                "SSM"
            ]
        },
        {
            "id": "https://735690757.github.io/Principles-of-computer-composition/Connection_between_CPU_and_memory/",
            "url": "https://735690757.github.io/Principles-of-computer-composition/Connection_between_CPU_and_memory/",
            "title": "CPU与存储器的连接",
            "date_published": "2023-06-06T03:11:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>针对这一部分内容我还是推荐大家去看看书本上和其他教学视频里的内容，本篇文章只针对计算机组成原理（第 3 版）P91 页之后的内容进行简单整理汇总。</p>\n<p>接下来我将会按照书上的顺序进行叙述。</p>\n<h1 id=\"cpu-与存储器的连接\"><a class=\"markdownIt-Anchor\" href=\"#cpu-与存储器的连接\">#</a> CPU 与存储器的连接</h1>\n<h2 id=\"存储器容量扩展\"><a class=\"markdownIt-Anchor\" href=\"#存储器容量扩展\">#</a> 存储器容量扩展</h2>\n<h3 id=\"字扩展\"><a class=\"markdownIt-Anchor\" href=\"#字扩展\">#</a> 字扩展</h3>\n<p>在某些情况下，字扩展可以被视为一种扩容操作。字扩展通常指的是将一个字符或字符串转换为具有更多位数或更高精度的数据类型，以便进行更复杂的计算或存储更大的值。这个过程可能涉及到内存分配和重新分配，因此可以看作是一种扩容操作。但是，在其他情况下，字扩展可能只是简单地将一个字符或字符串进行格式化或解码，而不涉及任何内存操作。因此，是否将字扩展视为扩容取决于具体的上下文和实现方式。</p>\n<p><strong>但是我们可以简单地把字扩展理解为扩容。</strong></p>\n<p>比如，<strong>两片 1K*8 位</strong>通过字扩展扩容位逻辑上的<strong>一片 2K*8 位</strong></p>\n<h3 id=\"位扩展\"><a class=\"markdownIt-Anchor\" href=\"#位扩展\">#</a> 位扩展</h3>\n<p>位扩展是一种将一个二进制数值的位数增加的操作。在位扩展中，如果原始二进制数值的最高位为 0，则在其左侧添加 0 以增加位数；如果最高位为 1，则在其左侧添加 1 以保持符号不变。例如，将 8 位二进制数值 &quot;00110110&quot; 进行位扩展为 16 位，则结果为 &quot;00000000 00110110&quot;。位扩展通常用于将低精度数据类型转换为高精度数据类型，或者在进行算术运算时对操作数进行对齐。</p>\n<p><strong>咳咳咳，简单理解就是二进制加长</strong></p>\n<h3 id=\"字位扩展\"><a class=\"markdownIt-Anchor\" href=\"#字位扩展\">#</a> 字位扩展</h3>\n<p>字位扩展是一种将一个数据类型的位数增加的操作，其中 “字” 指的是计算机中的一个固定大小的数据单元。在字位扩展中，如果原始数据类型的最高位为 0，则在其左侧添加 0 以增加位数；如果最高位为 1，则在其左侧添加 1 以保持符号不变。例如，将 16 位有符号整数进行字位扩展为 32 位，则结果为在最高位之前添加 16 个相同的符号位。字位扩展通常用于将低精度数据类型转换为高精度数据类型，或者在进行算术运算时对操作数进行对齐。</p>\n<p><strong>简单理解就是… 结合版</strong></p>\n<h1 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题</h1>\n<p>怎么出题呢？一般都像这样：</p>\n<p>CPU 有 16 根地址线、8 根数据线，并用 MREQ 非作为访存控制信号（低电频有效），用 WR 作为读 / 写控制信号。现在有如下存储芯片：<strong>1K X 4 位 RAM、4K X 8 位 RAM、8K X 8 位 RAM、2K X 8 位 ROM、4K X 8 位 ROM、8K X 8 位 ROM</strong> 及 74138 译码器和各种门电路。现要求如下：</p>\n<ul>\n<li>主存地址空间分配：\n<ul>\n<li>6000H ~ 67FFH 为系统程序区</li>\n<li>6800H ~ 6BFFH 为用户程序区</li>\n</ul>\n</li>\n<li>合理选用上述存储芯片，说明各选几片</li>\n<li>详细画出芯片片选逻辑图</li>\n</ul>\n<h2 id=\"解\"><a class=\"markdownIt-Anchor\" href=\"#解\">#</a> 解！！</h2>\n<p><strong>第一步：写出地址空间分配范围二进制码</strong></p>\n<p>6000H ~ 67FFH 为系统程序区</p>\n<p>6800H ~ 6BFFH 为用户程序区</p>\n<p>6000H、67FFH、6800H、6BFFH 化为二进制：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">A15</th>\n<th>A14</th>\n<th>A13</th>\n<th style=\"text-align:center\">A12</th>\n<th>A11</th>\n<th>A10</th>\n<th>A9</th>\n<th>A8</th>\n<th>A7</th>\n<th>A6</th>\n<th>A5</th>\n<th>A4</th>\n<th>A3</th>\n<th>A2</th>\n<th>A1</th>\n<th>A0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>首先，先确定芯片，<strong>全零到全一就是一个芯片</strong></p>\n<p>先看 ROM，也就是系统区：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">A15</th>\n<th>A14</th>\n<th>A13</th>\n<th style=\"text-align:center\">A12</th>\n<th>A11</th>\n<th>A10</th>\n<th>A9</th>\n<th>A8</th>\n<th>A7</th>\n<th>A6</th>\n<th>A5</th>\n<th>A4</th>\n<th>A3</th>\n<th>A2</th>\n<th>A1</th>\n<th>A0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>A0 ~ A10 为一个 ROM，一共 11 位，理想是要一个规格为<strong> 2K X 8 位 ROM</strong></p>\n<p>再来看 RAM ，也就是用户区：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">A15</th>\n<th>A14</th>\n<th>A13</th>\n<th style=\"text-align:center\">A12</th>\n<th>A11</th>\n<th>A10</th>\n<th>A9</th>\n<th>A8</th>\n<th>A7</th>\n<th>A6</th>\n<th>A5</th>\n<th>A4</th>\n<th>A3</th>\n<th>A2</th>\n<th>A1</th>\n<th>A0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>0</td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td><strong>0</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>0</td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n<td><strong>1</strong></td>\n</tr>\n</tbody>\n</table>\n<p>A0 ~ A9 为一个 RAM，一共 10 位，理想是要一个规格为<strong> 1K X 8 位 RAM</strong></p>\n<p>然后呢，我们需要对 ROM 和 RAM 进行读写，这就涉及到切换 ROM 和 RAM 芯片的问题，我们需要弄一个片选信号：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">A15</th>\n<th>A14</th>\n<th>A13</th>\n<th style=\"text-align:center\">A12</th>\n<th>A11</th>\n<th>A10</th>\n<th>A9</th>\n<th>A8</th>\n<th>A7</th>\n<th>A6</th>\n<th>A5</th>\n<th>A4</th>\n<th>A3</th>\n<th>A2</th>\n<th>A1</th>\n<th>A0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td><strong>0</strong></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td><strong>0</strong></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td><strong>1</strong></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>1</td>\n<td style=\"text-align:center\">0</td>\n<td><strong>1</strong></td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>上两行是 ROM，下两行是 RAM，可以看到 A11 及其关键的决定了到底选择哪一个芯片，是 ROM 还是 RAM。当 A11 为 0 时 ROM 被选中，当 A11 为 1 时 RAM 被选中。</p>\n<p>然而 74138 译码器需要三个数据输入端，这时候我们就需要再拉来两个垫背的 A12 与 A13。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">A15</th>\n<th>A14</th>\n<th>A13</th>\n<th style=\"text-align:center\">A12</th>\n<th>A11</th>\n<th>A10</th>\n<th>A9</th>\n<th>A8</th>\n<th>A7</th>\n<th>A6</th>\n<th>A5</th>\n<th>A4</th>\n<th>A3</th>\n<th>A2</th>\n<th>A1</th>\n<th>A0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td><strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td><strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td><strong>0</strong></td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td><strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td><strong>1</strong></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td><strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td><strong>1</strong></td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p><strong>A11 A12 A13</strong> 一次排列连接至 74138 的数据输入端<strong> A B C</strong>，这一点非常重要！！低位是起始点 A，高位时终点 C。</p>\n<p>数据为<strong> 100</strong> 时 ROM 被选中，74138Y4 非端被点亮，<strong>因为 100 正是数字 4</strong>。</p>\n<p>数据为<strong> 101</strong> 时 RAM 被选中，74138Y4 非端被点亮，<strong>因为 101 正是数字 5</strong>。</p>\n<p>接下来再讨论讨论芯片的选择：</p>\n<p>A0 ~ A10 为一个 ROM，一共 11 位，理想是要一个规格为<strong> 2K X 8 位 ROM</strong></p>\n<p>A0 ~ A9 为一个 RAM，一共 10 位，理想是要一个规格为<strong> 1K X 8 位 RAM</strong></p>\n<p>对于 ROM，题中刚好有一个规格为<strong> 2K X 8 位的 ROM 芯片</strong>，拿来便是！</p>\n<p>对于 RAM，题中没有那个规格的我们这里就需要进行扩展，这里我们选择<strong>两片 1K X 4 位的 ROM 芯片</strong>对他进行位扩展就好了。位扩展 位扩展 位扩展，说明它位数不够，数据一次无法写进一个芯片，但是一次可以写进两个芯片。这样就解决了！</p>\n<h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>CPU 与存储器的连接是计算机计算机组成原理中的重要考题，更是期末考试中的重点，看着很复杂的连接图，但其实内在的原理还是很简单的，无非就是：写二进制、选芯片、扩展外带画图连接，本质还是比较容易作的</p>\n",
            "tags": [
                "计算机组成原理",
                "计算机组成原理"
            ]
        },
        {
            "id": "https://735690757.github.io/Principles-of-computer-composition/booth_algorithm/",
            "url": "https://735690757.github.io/Principles-of-computer-composition/booth_algorithm/",
            "title": "booth算法",
            "date_published": "2023-06-05T11:30:00.000Z",
            "content_html": "<h1 id=\"booth-算法\"><a class=\"markdownIt-Anchor\" href=\"#booth-算法\">#</a> Booth 算法</h1>\n<p>这里写点什么捏？就先来点简介吧！！比较法是 Booth 夫妇先提出来的，也称 booth 算法。</p>\n<p>那么！！咱们怎么解题呢，不要担心，其实 booth 算法非常简单，不要被长长的算式所迷惑鸭！！</p>\n<p>接下来就由我来简单快速的叙述一下如何利用 booth 算法去做题！</p>\n<h1 id=\"准备开始\"><a class=\"markdownIt-Anchor\" href=\"#准备开始\">#</a> 准备开始！</h1>\n<p>首先题目里一般会这样给：已知 [x] 补 = xxxxx，[y] 补 = xxxxx，利用 booth 算法求解 [x*y]。</p>\n<p>booth 算法的符号位是<strong>成双成对</strong>的，和你不一样，因为你还没有成双成对哈哈哈哈哈哈（不是）</p>\n<p>另外，我们还需要额外记住的<strong>四个固定形态</strong>：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">尾数形态</th>\n<th style=\"text-align:center\">作法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">00</td>\n<td style=\"text-align:center\">右移一位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">01</td>\n<td style=\"text-align:center\">+[x] 补 后 右移一位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">+[-x] 补后 右移一位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">右移一位</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"例题一\"><a class=\"markdownIt-Anchor\" href=\"#例题一\">#</a> 例题一</h1>\n<p>已知 [x] 补 = 0.0101，[y] 补 = 1.0101，利用 booth 算法求解 [x*y]</p>\n<p>做题前我们需要做一些准备，首先我们写出双符号位形态的 [x] 补、[-x] 补以及 [y] 补（无需双符号）</p>\n<ul>\n<li>\n<p>[x] 补 = 00.0101</p>\n</li>\n<li>\n<p>[-x] 补 = 11.1011</p>\n</li>\n<li>\n<p>[y] 补 = 1.0101</p>\n</li>\n</ul>\n<p>然后列出如下表格：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">部分积</th>\n<th style=\"text-align:center\">乘数</th>\n<th style=\"text-align:center\">辅助</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n</tr>\n</tbody>\n</table>\n<p>我先写到这，如果有想先试试的小伙伴可以先按照自己的思路去写，还没记起来的的小伙伴们可以继续往下看，一会我还会写出两道例题供大家去练习。</p>\n<p><strong>解答开始！</strong></p>\n<p>辅助位置默认为 0，乘数就是 [y] 补 = 11.0101，部分积初始值也为 0.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\"></th>\n<th style=\"text-align:center\">部分积</th>\n<th style=\"text-align:center\">乘数</th>\n<th style=\"text-align:center\">辅助</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\"></td>\n<td style=\"text-align:center\">00 0000</td>\n<td style=\"text-align:center\">1010 <strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td>一次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>10</strong> 还记得加什么嘛？没错就是加 [-x] 补 +</td>\n<td style=\"text-align:center\">11 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">=</td>\n<td style=\"text-align:center\">11 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">右移</td>\n<td style=\"text-align:center\">11 1101</td>\n<td style=\"text-align:center\">1101 <strong>0</strong></td>\n<td style=\"text-align:center\"><strong>1</strong></td>\n<td>二次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>01</strong> 还记得加什么嘛？没错就是加 [x] 补 +</td>\n<td style=\"text-align:center\">00 0101</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">=</td>\n<td style=\"text-align:center\">00 0010</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">右移</td>\n<td style=\"text-align:center\">00 0001</td>\n<td style=\"text-align:center\">0110 <strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td>三次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>10</strong> 还记得加什么嘛？没错就是加 [-x] 补 +</td>\n<td style=\"text-align:center\">11 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">=</td>\n<td style=\"text-align:center\">11 1100</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">右移</td>\n<td style=\"text-align:center\">11 1110</td>\n<td style=\"text-align:center\">0011 <strong>0</strong></td>\n<td style=\"text-align:center\"><strong>1</strong></td>\n<td>四次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>01</strong> 还记得加什么嘛？没错就是加 [x] 补 +</td>\n<td style=\"text-align:center\">00 0101</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">=</td>\n<td style=\"text-align:center\">00 0011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">右移</td>\n<td style=\"text-align:center\">00 0001</td>\n<td style=\"text-align:center\"><strong>1001</strong> <strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td>五次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>10</strong> 还记得加什么嘛？没错就是加 [-x] 补 +</td>\n<td style=\"text-align:center\">11 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\"></td>\n<td style=\"text-align:center\"><strong>11 1100</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>OK 兄弟们，小数点后有四位，那么我们需要进行五次判断，现在已经完成计算过程了，答案已经呼之欲出了！！</p>\n<p><strong>[x*y] = 1.1100 1001</strong>（如果要双符号为就这样去写：[x*y] = 11.1100 1001）</p>\n<p>总结一下，辅助位配合乘数最后一位作判断操作，00 和 11 只需右移就好，而 01 要 +[x] 补，11 要 +[-x] 补，这样我们就能得到最终的结果了。</p>\n<p>接下来再来一道爽题！！！</p>\n<h1 id=\"例题二\"><a class=\"markdownIt-Anchor\" href=\"#例题二\">#</a> 例题二</h1>\n<p>已知 [x] 补 = 1.0101，[y] 补 = 1.0011，利用 booth 算法求解 [x*y]</p>\n<p>老规矩：</p>\n<ul>\n<li>[x] 补 = 11.0101</li>\n<li>[-x] 补 = 00.1011</li>\n<li>[y] 补 = 1.0011</li>\n</ul>\n<p>列表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\"></th>\n<th style=\"text-align:center\">部分积</th>\n<th style=\"text-align:center\">乘数</th>\n<th style=\"text-align:center\">辅助</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\"></td>\n<td style=\"text-align:center\">00 0000</td>\n<td style=\"text-align:center\">1001<strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td>一次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>10</strong> +</td>\n<td style=\"text-align:center\">00 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">=</td>\n<td style=\"text-align:center\">00 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">右移</td>\n<td style=\"text-align:center\">00 0101</td>\n<td style=\"text-align:center\">1100 <strong>1</strong></td>\n<td style=\"text-align:center\"><strong>1</strong></td>\n<td>二次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>11</strong> 右移</td>\n<td style=\"text-align:center\">00 0010</td>\n<td style=\"text-align:center\">1110 <strong>0</strong></td>\n<td style=\"text-align:center\"><strong>1</strong></td>\n<td>三次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>01</strong> +</td>\n<td style=\"text-align:center\">11 0101</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">=</td>\n<td style=\"text-align:center\">11 0111</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\">右移</td>\n<td style=\"text-align:center\">11 1011</td>\n<td style=\"text-align:center\">1111 <strong>0</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td>四次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>00</strong> 右移</td>\n<td style=\"text-align:center\">11 1101</td>\n<td style=\"text-align:center\">1111 <strong>1</strong></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td>五次判断</td>\n</tr>\n<tr>\n<td style=\"text-align:right\"><strong>10</strong> +</td>\n<td style=\"text-align:center\">00 1011</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:right\"></td>\n<td style=\"text-align:center\">00 1000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>第五次判断后无需移动</strong></p>\n<p>答案：0.1000 1111</p>\n<p>怎么样，是不是非常爽，在五次判断中出现了两次数字相同的情况，这时候我们只需要进行右移，无需进行计算。</p>\n<p>最后我在给大家一道练习题，自己练习一下叭～～～</p>\n<h1 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h1>\n<p>已知 [x] 补 = 0.1101，[y] 补 = 0.1011，利用 booth 算法求解 [x*y]</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">部分积</th>\n<th style=\"text-align:center\">乘数</th>\n<th style=\"text-align:center\">辅助</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"鸣谢\"><a class=\"markdownIt-Anchor\" href=\"#鸣谢\">#</a> 鸣谢</h1>\n<p>感谢 B 站 up 主制作的视频，真的非常不错</p>\n",
            "tags": [
                "计算机组成原理",
                "计算机组成原理"
            ]
        },
        {
            "id": "https://735690757.github.io/database/DataBase02/",
            "url": "https://735690757.github.io/database/DataBase02/",
            "title": "数据库设计",
            "date_published": "2023-04-18T10:00:00.000Z",
            "content_html": "<h1 id=\"数据库设计\"><a class=\"markdownIt-Anchor\" href=\"#数据库设计\">#</a> 数据库设计</h1>\n<h2 id=\"什么是数据库设计\"><a class=\"markdownIt-Anchor\" href=\"#什么是数据库设计\">#</a> 什么是数据库设计</h2>\n<p>数据库设计是指根据需求分析和业务流程，设计出符合应用需求的数据库结构和表结构的过程。通常包括以下几个步骤：</p>\n<ol>\n<li>需求分析：对应用的功能和数据进行分析，确定应用所需的数据和数据间的关系，明确数据的属性和约束条件。</li>\n<li>概念设计：将需求分析的结果转化为概念模型，包括实体 - 关系模型和 E-R 图等，以及各个实体之间的联系、属性及约束等。</li>\n<li>逻辑设计：将概念模型转化为逻辑模型，包括表的定义、属性定义、关键字、完整性规则等，确定表与表之间的联系，构建数据模型。</li>\n<li>物理设计：在逻辑设计的基础上，结合具体的数据库管理系统（如 MySQL、Oracle、SQL Server 等），考虑实现方式和优化策略，设计出物理存储结构，包括数据表的存储方式、索引、分区等等。</li>\n</ol>\n<p>在数据库设计的过程中，需要遵循以下原则：</p>\n<ol>\n<li>数据库的设计应该符合应用需求和业务流程，具有可扩展性、可维护性和可靠性。</li>\n<li>数据库应该遵循数据规范化的原则，减少数据冗余和数据异常，提高数据存储效率。</li>\n<li>数据库设计应该考虑数据的完整性和安全性，采取适当的权限管理和数据备份策略，保证数据的安全性和可靠性。</li>\n<li>数据库设计应该遵循一定的命名规范，使数据库的结构清晰易懂，便于后期的维护和管理。</li>\n</ol>\n<p>综上所述，数据库设计是一个综合性较强的任务，需要综合考虑多方面的因素，才能设计出符合应用需求和业务流程，高效可靠的数据库结构。</p>\n<h2 id=\"数据库设计过程\"><a class=\"markdownIt-Anchor\" href=\"#数据库设计过程\">#</a> 数据库设计过程</h2>\n<ol>\n<li>需求分析</li>\n<li>概念结构设计</li>\n<li>逻辑结构设计</li>\n<li>数据库物理设计</li>\n<li>数据库实施</li>\n<li>数据库运行与维护</li>\n</ol>\n<h2 id=\"数据库设计过程各个阶段上的设计描述\"><a class=\"markdownIt-Anchor\" href=\"#数据库设计过程各个阶段上的设计描述\">#</a> 数据库设计过程各个阶段上的设计描述</h2>\n<p>数据库设计过程一般包括以下几个阶段：</p>\n<ol>\n<li>需求分析阶段：在需求分析阶段，需要进行数据需求的调研和收集，明确系统需要存储的数据、数据之间的关系以及对数据的操作等，设计描述的主要内容包括数据流图、数据字典等。</li>\n<li>概念设计阶段：在概念设计阶段，需要将需求分析得到的数据需求转化为概念模型，设计描述的主要内容包括实体关系图（ER 图）。</li>\n<li>逻辑设计阶段：在逻辑设计阶段，需要将概念模型转化为具体的逻辑模型，设计描述的主要内容包括关系模式、属性、主键、外键、索引等。</li>\n<li>物理设计阶段：在物理设计阶段，需要将逻辑模型转化为数据库实现模型，设计描述的主要内容包括表结构、存储方式、物理索引等。</li>\n</ol>\n<p>在每个阶段中，设计描述的内容都不同，但都是在将需求转化为具体的数据库结构的过程中所必需的，而且在设计描述的过程中，需要对需求进行细致的分析和理解，以保证设计结构的正确性和实用性。</p>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://735690757.github.io/database/DataBase01/",
            "url": "https://735690757.github.io/database/DataBase01/",
            "title": "DB中的范式",
            "date_published": "2023-04-11T13:16:00.000Z",
            "content_html": "<h1 id=\"数据库范式\"><a class=\"markdownIt-Anchor\" href=\"#数据库范式\">#</a> 数据库范式</h1>\n<h2 id=\"什么是数据库范式\"><a class=\"markdownIt-Anchor\" href=\"#什么是数据库范式\">#</a> 什么是数据库范式</h2>\n<p>数据库范式（Normalization）是一种设计关系型数据库的方法，它旨在减少数据冗余，提高数据的一致性和可靠性，避免数据修改时出现异常。数据库范式通常分为一到五个级别，每个级别对应一组设计规则。</p>\n<p>范式越高，数据冗余越少，数据一致性和可靠性越高。但是，范式过高也可能会带来一些问题，如增加了数据库的复杂性和查询的开销，需要根据实际应用场景来确定使用哪个范式。</p>\n<h2 id=\"层级分类\"><a class=\"markdownIt-Anchor\" href=\"#层级分类\">#</a> 层级分类</h2>\n<h3 id=\"1nf第一范式\"><a class=\"markdownIt-Anchor\" href=\"#1nf第一范式\">#</a> 1NF（第一范式）</h3>\n<p>关系模式中的所有属性都是原子性的，即不可再分。</p>\n<h3 id=\"2nf第二范式\"><a class=\"markdownIt-Anchor\" href=\"#2nf第二范式\">#</a> 2NF（第二范式）</h3>\n<p>关系模式必须满足第一范式，且不存在非关键字属性对主键的部分依赖。</p>\n<h3 id=\"3nf第三范式\"><a class=\"markdownIt-Anchor\" href=\"#3nf第三范式\">#</a> 3NF（第三范式）</h3>\n<p>关系模式必须满足第二范式，且不存在非关键字属性对其他非关键字属性的传递依赖。</p>\n<h3 id=\"bcnfboyce-codd-范式\"><a class=\"markdownIt-Anchor\" href=\"#bcnfboyce-codd-范式\">#</a> BCNF（Boyce-Codd 范式）</h3>\n<p>关系模式必须满足第一范式，且不存在非主属性对主属性的非平凡依赖关系。</p>\n<h3 id=\"4nf第四范式\"><a class=\"markdownIt-Anchor\" href=\"#4nf第四范式\">#</a> 4NF（第四范式）</h3>\n<p>关系模式必须满足第三范式，且不存在多值依赖。</p>\n<h3 id=\"5nf第五范式\"><a class=\"markdownIt-Anchor\" href=\"#5nf第五范式\">#</a> 5NF（第五范式）</h3>\n<p>关系模式必须满足第四范式，且不存在连接依赖。</p>\n<h2 id=\"小题目\"><a class=\"markdownIt-Anchor\" href=\"#小题目\">#</a> 小题目</h2>\n<p>让我们通过一些题目来感受一下吧！！</p>\n<h3 id=\"ex1\"><a class=\"markdownIt-Anchor\" href=\"#ex1\">#</a> Ex1</h3>\n<blockquote>\n<p>设有关系 R（工号，姓名，工种，定额），则 R 是属于第 2 范式，将其转化为第三范式</p>\n</blockquote>\n<p>根据关系 R（工号，姓名，工种，定额），我们可以看出工号和姓名是候选键，因为它们可以唯一地标识每个元组。同时，我们也可以看出工种和定额这两个属性完全依赖于候选键，因此关系 R 符合 2NF 的要求。</p>\n<p>现在我们来考虑将 R 转化为 3NF 的过程。根据 3NF 的要求，我们需要消除任何非主属性对主键的传递依赖。因此，我们需要检查每个非主属性是否直接依赖于主键，或者是直接依赖于其他非主属性。</p>\n<p>在关系 R 中，我们可以发现定额属性直接依赖于工种属性，而工种属性并不是主键的一部分。因此，我们可以将定额和工种拆分到一个新的关系中，以消除定额对于工种的传递依赖，从而使得关系 R 满足 3NF 的要求。</p>\n<p>拆分后的两个关系如下：</p>\n<ul>\n<li>R1（工号，姓名，工种）：该关系包含了工号、姓名和工种三个属性，其中工号和姓名作为候选键，工种是一个非主属性，但它直接依赖于主键。因此，关系 R1 符合 2NF 和 3NF 的要求。</li>\n<li>R2（工种，定额）：该关系包含了工种和定额两个属性，其中工种作为主键，定额是一个非主属性，但它直接依赖于主键。因此，关系 R2 符合 2NF 和 3NF 的要求。</li>\n</ul>\n<p>最终，我们将关系 R 转化为两个符合 3NF 的关系 R1 和 R2，符合 3NF 的要求。</p>\n<h3 id=\"ex2\"><a class=\"markdownIt-Anchor\" href=\"#ex2\">#</a> Ex2</h3>\n<blockquote>\n<p>设有关系 STUDENT (S#,SNAME,SDEPT,MNAME,CNAME,GRADE)，S#,CNAME 为候选码，设关系中有如下函数依赖：</p>\n<p>S#,CNAME→SNAME,SDEPT,MNAME<br>\nS#→SNAME,SDEPT,MNAME<br>\nS#,CNAME→GRADE<br>\nSDEPT→MNAME<br>\n 试求下列问题：<br>\n（1）关系 STUDENT 属于第几范式？<br>\n（2）如果关系 STUDENT 不属于 BCNF，请将关系 STUDENT 逐步分解为 BCNF。<br>\n要求：写出达到每一级范式的分解过程，并指明消除什么类型的函数依赖。</p>\n</blockquote>\n<p>（1）1NF</p>\n<p>（2）首先消除非主属性对候选码的部分依赖，即消除部分函数依赖</p>\n<p><strong>（S#，CNAME）-&gt;（SNAME,SDEPT,MNAME）</strong></p>\n<p>R 分解为：</p>\n<p><strong>R1(S#,SNAME,SDEPT,MNAME)</strong></p>\n<p><strong>R2(S#,CNAME,GRADE)</strong></p>\n<p>R 至此分解为 2NF</p>\n<p>此时 R1 中存在非主属性对候选码的传递依赖，即消除传递依赖</p>\n<p><strong>（S#）-&gt;（SDEPT）</strong></p>\n<p><strong>（SDEPT）-&gt;（MNAME）</strong></p>\n<p>R1 分解为：</p>\n<p><strong>R11(S#,SNAME,SDEPT)</strong></p>\n<p><strong>R12(SDEPT,MNAME)</strong></p>\n<p>R1 至此分解为 3NF</p>\n<p>此时 R11，R12，R2 可以得出的函数依赖：</p>\n<p><strong>（S#,CNAME）-&gt;（GRADE）</strong></p>\n<p><strong>（S#）-&gt;（SNAME）,（S#）-&gt;（SDEPT）</strong></p>\n<p><strong>（SDEPT）-&gt;（MNAME）</strong></p>\n<p>​ 由此可以看出，数据表中的每个非主属性都完全依赖于候选键，即每个非主属性都不只依赖于候选键的一部分，且非主属性无法决定另一个非主属性，即不存在非平凡函数依赖。</p>\n<p>​ 上述关系表 R11，R12，R2 满足 BCNF</p>\n<h3 id=\"ex3\"><a class=\"markdownIt-Anchor\" href=\"#ex3\">#</a> Ex3</h3>\n<blockquote>\n<p>一个关系模式不属于第二范式可能会产生 ()、() 和 ( ) 等几个问题，解决的办法是 ( )。</p>\n</blockquote>\n<ul>\n<li>\n<p><em>第一空：</em></p>\n<p>插入异常</p>\n</li>\n<li>\n<p><em>第二空：</em></p>\n<p>删除异常</p>\n</li>\n<li>\n<p><em>第三空：</em></p>\n<p>修改异常</p>\n</li>\n<li>\n<p><em>第四空：</em></p>\n<p>投影分解</p>\n</li>\n</ul>\n<h2 id=\"关键词\"><a class=\"markdownIt-Anchor\" href=\"#关键词\">#</a> 关键词</h2>\n<h3 id=\"候选码和非主属性\"><a class=\"markdownIt-Anchor\" href=\"#候选码和非主属性\">#</a> 候选码和非主属性</h3>\n<p>候选码和非主属性是关系数据库中的两个概念，它们之间有一定的关系。</p>\n<p>候选码（Candidate Key）指的是能够唯一标识关系模式中每一条记录的属性集合。一个关系模式可能有多个候选码，但是其中只有一个会被选择作为主键（Primary Key）来标识每一条记录。通常情况下，主键会被用来建立关系模式之间的联系，因此选择一个恰当的候选码作为主键是关系数据库设计中的重要步骤。</p>\n<p>非主属性指的是关系模式中除了主键之外的属性。一个关系模式可能包含多个非主属性，它们之间可以存在依赖关系。例如，一个关系模式 R（A，B，C）中，如果存在函数依赖 A→B，则 B 是非主属性。</p>\n<p>候选码和非主属性之间的关系在于，一个候选码包含了所有的主属性，而非主属性可能依赖于主属性，也可能存在依赖于其他非主属性的情况。在进行关系数据库设计时，我们需要通过确定候选码和依赖关系来规范化关系模式，从而消除数据冗余和不一致性的问题。通常情况下，我们会选择最小的候选码作为主键，并确保所有非主属性都完全依赖于主键，以保证数据的完整性和一致性。</p>\n<h3 id=\"平凡依赖关系\"><a class=\"markdownIt-Anchor\" href=\"#平凡依赖关系\">#</a> 平凡依赖关系</h3>\n<p>平凡依赖关系是指对于一个属性集合 X，在一个关系 R 中如果 X 的任意超集都可以唯一地确定 X，那么 X 对于 R 就是平凡的依赖。例如，在一个关系 R（A, B, C），如果存在函数依赖 A→A，那么 A 对于 R 来说是一个平凡依赖。因为 A 的任意超集都可以唯一地确定 A 本身，即 A 已经包含了它所依赖的属性。</p>\n<p>可以这样理解，一个属性集合如果能够唯一地确定自己，那么它就是平凡的依赖。例如，在一个关系 R（A, B, C），如果存在函数依赖 A→A，那么 A 对于 R 来说是一个平凡依赖，因为属性集合 A 已经包含了它所依赖的属性 A 本身，即 A 已经能够唯一地确定自己。而非平凡的依赖是指一个属性集合不能唯一地确定自己，需要依赖于其他属性才能确定自己，例如在关系 R（A, B, C）中，存在函数依赖 A→B，B 就是一个非平凡依赖，因为 B 不能唯一地确定自己，需要依赖于 A 才能确定。</p>\n<h3 id=\"传递依赖\"><a class=\"markdownIt-Anchor\" href=\"#传递依赖\">#</a> 传递依赖</h3>\n<p>传递依赖（Transitive Dependency）指的是一个非主属性依赖于另一个非主属性的非主属性。例如，一个关系模式 R（A，B，C）中，如果存在函数依赖 A→B 和 B→C，则 C 对 A 存在传递依赖。这种情况下，如果我们要更新 A 的值，就会导致 C 的值也随之改变，从而引起数据不一致的问题。</p>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://735690757.github.io/Principles-of-computer-composition/Division_in_Computers/",
            "url": "https://735690757.github.io/Principles-of-computer-composition/Division_in_Computers/",
            "title": "计算机中的除法运算",
            "date_published": "2023-03-24T11:40:00.000Z",
            "content_html": "<h1 id=\"计算机中的除法运算\"><a class=\"markdownIt-Anchor\" href=\"#计算机中的除法运算\">#</a> 计算机中的除法运算</h1>\n<h2 id=\"简述\"><a class=\"markdownIt-Anchor\" href=\"#简述\">#</a> 简述</h2>\n<p>计算的中的除法十分有趣。对于 6 与 4，我们可以很容易的判断出那个大，进而进行后续的除法运算，而计算机中却不是。比此更复杂的除法运算，又是怎么实现的呢？</p>\n<h2 id=\"方法一恢复余数法\"><a class=\"markdownIt-Anchor\" href=\"#方法一恢复余数法\">#</a> 方法一：恢复余数法</h2>\n<p><strong>题目源自《计算机组成原理（第三版）》例 6.24</strong></p>\n<p><img data-src=\"https://s2.loli.net/2023/03/24/jhsHYPydL8Qvubt.png\" alt=\"01.png\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">被除数（余数）</th>\n<th style=\"text-align:center\">商</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0.1011+1.0011=1.1110</td>\n<td style=\"text-align:center\">【0.0000】</td>\n<td style=\"text-align:center\">第一步无条件 - y*</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.1110+0.1101=0.1011</td>\n<td style=\"text-align:center\">【0.0000】</td>\n<td style=\"text-align:center\">1.1110 <strong>小于零 恢复余数</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.0110</td>\n<td style=\"text-align:center\">【0.000】0</td>\n<td style=\"text-align:center\">上 0 左移 （补位来自商）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.0110+1.0011=0.1001</td>\n<td style=\"text-align:center\">【0.000】0</td>\n<td style=\"text-align:center\">0.1001 <strong>大于 0 无需恢复</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.0010</td>\n<td style=\"text-align:center\">【0.00】01</td>\n<td style=\"text-align:center\">上 1 左移 （补位来自商）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.0010+1.0011=0.0101</td>\n<td style=\"text-align:center\">【0.00】01</td>\n<td style=\"text-align:center\">0.0101 <strong>大于 0 无需恢复</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0.1010</td>\n<td style=\"text-align:center\">【0.0】011</td>\n<td style=\"text-align:center\">上 1 左移 （补位来自商）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0.1010+1.0011=1.1101</td>\n<td style=\"text-align:center\">【0.0】011</td>\n<td style=\"text-align:center\">1.1101 <strong>小于 0 恢复余数</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.1101+0.1101=0.1010</td>\n<td style=\"text-align:center\">【0.0】011</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.0100</td>\n<td style=\"text-align:center\">【0】.0110</td>\n<td style=\"text-align:center\">上 0 左移（补位来自商）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.0100+1.0011=0.0111</td>\n<td style=\"text-align:center\">【0】.0110</td>\n<td style=\"text-align:center\">0.0111 大于零 无需恢复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0.0111</td>\n<td style=\"text-align:center\">0.1101</td>\n<td style=\"text-align:center\">上 1</td>\n</tr>\n</tbody>\n</table>\n<p>值：0.1101</p>\n<p>符号位：</p>\n<p><img data-src=\"https://s2.loli.net/2023/03/24/pQeg8jda2VNtKkv.png\" alt=\"02.png\"></p>\n<p><strong>恢复余数法总结</strong>：首先第一步无条件加 - y*，然后看余数大于零还是小于 0，如果大于 0 无需恢复 上 1 左移，如果小于 0 需要恢复 上 0 左移，如此循环往复，直到用完所有的商位。</p>\n<h2 id=\"方法二加减交替法\"><a class=\"markdownIt-Anchor\" href=\"#方法二加减交替法\">#</a> 方法二：加减交替法</h2>\n<p>加减交替法可以说是恢复余数的改良方法，我们无需恢复 直接进行运算，详情见下题：</p>\n<p><strong>题目源自《计算机组成原理（第三版）》例 6.25</strong></p>\n<p><img data-src=\"https://s2.loli.net/2023/03/24/ZUEuveBYs3LyIoa.png\" alt=\"03.png\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">被除数（余数）</th>\n<th style=\"text-align:center\">商</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0.1011+1.0011=1.1110</td>\n<td style=\"text-align:center\">【0.0000】</td>\n<td style=\"text-align:center\">无条件加 - y*</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>1</strong>.1100</td>\n<td style=\"text-align:center\">【0.000】0</td>\n<td style=\"text-align:center\"><strong>1</strong>.1110 <strong>小于</strong> 0 上<strong> 0</strong> 左移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1.1100+0.1101=<strong>0</strong>.1001</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>1</strong>.0010</td>\n<td style=\"text-align:center\">【0.00】01</td>\n<td style=\"text-align:center\"><strong>0</strong>.1001 <strong>大于</strong> 0 上 1 左移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>1</strong>.0010+1.0011=<strong>0</strong>.0101</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>0</strong>.1010</td>\n<td style=\"text-align:center\">【0.0】011</td>\n<td style=\"text-align:center\"><strong>0</strong>.0101 <strong>大于</strong> 0 上 1 左移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>0</strong>.1010+1.0011=<strong>1</strong>.1101</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>1</strong>.1010</td>\n<td style=\"text-align:center\">【0】.0110</td>\n<td style=\"text-align:center\"><strong>1</strong>.1101 <strong>小于</strong> 0 上 0 左移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>1</strong>.1010+0.1101=0.0111</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0.0111</td>\n<td style=\"text-align:center\">0.1101</td>\n<td style=\"text-align:center\">0.0111 大于 0 上 1</td>\n</tr>\n</tbody>\n</table>\n<p><strong>核心：上 0 加正，上 1 加负</strong>，此口诀为上一步上的 0 或 1 在下一步体现，如果上了<strong> 0</strong> 那么下一步就加<strong>正</strong>，如果上了<strong> 1</strong> 那么下一步就加<strong>负</strong>。那么我们怎么知道到底是上 0 还是 1 呢？这个主要看余数，如果它是正的就上 1，如果他是负的就上 0</p>\n",
            "tags": [
                "计算机组成原理",
                "计算机组成原理"
            ]
        },
        {
            "id": "https://735690757.github.io/Java/javaAd01/",
            "url": "https://735690757.github.io/Java/javaAd01/",
            "title": "Java高级特性1",
            "date_published": "2023-03-18T12:20:00.000Z",
            "content_html": "<h1 id=\"list-与-set\"><a class=\"markdownIt-Anchor\" href=\"#list-与-set\">#</a> List 与 Set</h1>\n<p><strong>本篇内容意在总结课上所学的知识并加以巩固，如有错误请立即联系我，谢谢！</strong></p>\n<blockquote>\n<ul>\n<li>关于 Collection</li>\n<li>掌握 List 部分内容</li>\n<li>掌握 Set 部分内容</li>\n<li>迭代器</li>\n<li>WeChat：a735690757</li>\n<li>gmail：735690757carry@gmail.com</li>\n</ul>\n</blockquote>\n<h2 id=\"1概述\"><a class=\"markdownIt-Anchor\" href=\"#1概述\">#</a> 1，概述</h2>\n<p>在 Java 中，List 和 Set 接口都是继承自 Collection 接口。Collection 接口定义了一组通用的集合操作方法，而 List 和 Set 则分别扩展了 Collection 接口，以提供特定的集合行为。</p>\n<h2 id=\"2collection\"><a class=\"markdownIt-Anchor\" href=\"#2collection\">#</a> 2，Collection</h2>\n<p>在 Java 中，Collection 接口是一个集合框架的根接口，它定义了一组通用的集合操作方法，可以用于处理各种类型的集合。Collection 接口提供了一些常用的方法，如添加元素、删除元素、检查元素是否存在、迭代集合中的元素等。它是 Java 集合框架中最基本的接口，所有其他的集合接口都是扩展自 Collection 接口。</p>\n<p>Collection 接口定义了如下方法（常用、不完全）：</p>\n<blockquote>\n<ul>\n<li>boolean add (E e): 将元素添加到集合中，并返回是否添加成功。</li>\n<li>boolean addAll (Collection&lt;? extends E&gt; c): 将指定集合中的所有元素添加到该集合中，并返回是否添加成功。</li>\n<li>boolean remove (Object o): 从集合中删除指定元素，并返回是否删除成功。</li>\n<li>void clear (): 清空集合中的所有元素。</li>\n<li>boolean isEmpty (): 检查集合是否为空。</li>\n<li>int size (): 返回集合中元素的数量。</li>\n</ul>\n</blockquote>\n<h2 id=\"3list\"><a class=\"markdownIt-Anchor\" href=\"#3list\">#</a> 3，List</h2>\n<p>Java 中的 List 是一种常见的集合类，用于存储一组元素。List 是一个接口，它有多个实现类，如 ArrayList、LinkedList 等。</p>\n<p><strong>！重要！</strong></p>\n<ol>\n<li>\n<p>允许存储重复的元素。</p>\n</li>\n<li>\n<p>元素按照插入顺序有序存储。</p>\n</li>\n<li>\n<p>可以通过索引访问 List 中的元素，索引从 0 开始。</p>\n</li>\n<li>\n<p>List 可以动态调整大小，即添加或删除元素。</p>\n<p><strong>有序，可重复</strong></p>\n</li>\n</ol>\n<h3 id=\"31-arraylist\"><a class=\"markdownIt-Anchor\" href=\"#31-arraylist\">#</a> 3.1 ArrayList</h3>\n<p>List 的常用方法（可能不完全）：（类似数组）</p>\n<ol>\n<li>add (element)：向 List 末尾添加元素。</li>\n<li>add (index, element)：在指定索引位置插入元素。</li>\n<li>remove (index)：删除指定索引位置的元素。</li>\n<li>get (index)：返回指定索引位置的元素。</li>\n<li>set (index, element)：替换指定索引位置的元素。</li>\n<li>size ()：返回 List 的大小。</li>\n<li>contains (element)：判断 List 是否包含指定元素。</li>\n<li>indexOf (element)：返回指定元素在 List 中第一次出现的索引位置。</li>\n<li>clear ()：清空 List 中的所有元素。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListExample</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：[apple, banana, orange]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：[apple, orange]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">String</span> fruit <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：orange</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"grape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：[apple, grape]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上代码由 [ChatGPT Mar 14 Version] 生成。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>beihua<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>listEX001<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>beihua<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>listEX001<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>news<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test_for_ArrayList <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        * add ()     ---- 增加对象</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        * get ()     ---- 获取对象</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        * 非泛型返回 Object</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        * isEmpty () ---- 判空</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        * clear ()   ---- 清除</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        * iterator ()---- 迭代器</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        * toArray () ---- 转为数组</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        * */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        news newslkr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lkr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        news newsffl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ffl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        news newslqr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lqr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        news imnews <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hexin\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"!!!!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>news<span class=\"token punctuation\">></span></span> arrayList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>news<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newslkr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                     <span class=\"token comment\">// 普通追加</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newsffl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newslqr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>         arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>imnews<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">// 标记追加</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________标题数目输出______________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新闻有\"</span><span class=\"token operator\">+</span>arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"条\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________标题输出______________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 不适用非泛型，可以使用（Object）强制转换，（news）进行匹配</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________标题输出____________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token operator\">:</span>arrayList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                                  <span class=\"token comment\">//** 增强形态的 For**</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            news newst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> obj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>newst<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________标题输出____________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>news news<span class=\"token operator\">:</span>arrayList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                                  <span class=\"token comment\">//** 增强形态的 For**|| 最终版：面向对象</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"________________标题判断__________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>newslqr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________标题输出____________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>news news<span class=\"token operator\">:</span>arrayList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                                  <span class=\"token comment\">//** 增强形态的 For**|| 最终版：面向对象</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________标题判断__________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>newslqr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"________________清空_______________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrayList<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上代码为上课所写（丑丑的 www）。</p>\n<h3 id=\"32-linkedlist\"><a class=\"markdownIt-Anchor\" href=\"#32-linkedlist\">#</a> 3.2 LinkedList</h3>\n<p>LinkedList 具有以下特点：</p>\n<ol>\n<li>随机访问元素效率较低，因为需要遍历链表。</li>\n<li>在链表的开头或结尾插入、删除元素的效率较高。</li>\n<li>占用的内存空间相对较小。</li>\n</ol>\n<p>有趣的方法：</p>\n<blockquote>\n<ul>\n<li>getFirst ()：返回链表的第一个元素。</li>\n<li>getLast ()：返回链表的最后一个元素。</li>\n<li>removeFirst ()：删除链表的第一个元素。</li>\n<li>removeLast ()：删除链表的最后一个元素。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LinkedListExample</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：[apple, banana, orange]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：[apple, orange]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">String</span> fruit <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：orange</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"grape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出：[apple, grape]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上代码由 [ChatGPT Mar 14 Version] 生成。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>beihua<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>listEX001<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>beihua<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>listEX001<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>news<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test_for_LinkList <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        news newslkr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lkr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        news newsffl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ffl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        news newslqr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lqr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        news imnews <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hexin\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"!!!!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">LinkedList</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 父父 new 子这种只能使用父子公用的方法</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newslkr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                     <span class=\"token comment\">// 普通追加</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newsffl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newslqr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>imnews<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________内容输出____________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            news s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> obj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        news tyu <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">getFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>tyu<span class=\"token punctuation\">.</span><span class=\"token function\">getNo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        news imnews666 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hexin66666\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"!!66666!!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">addFirst</span><span class=\"token punctuation\">(</span>imnews666<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"______________内容输出____________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            news s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> obj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        news re <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">removeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token class-name\">Iterator</span> iterator <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_________________________\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            news news <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"4set\"><a class=\"markdownIt-Anchor\" href=\"#4set\">#</a> 4，Set</h2>\n<p>在 Java 中，Set 是一种集合（Collection）类型，它是一组不允许包含重复元素的对象。Set 是通过哈希表（hash table）实现的，因此它没有顺序，也不能通过索引访问其中的元素。Set 接口继承自 Collection 接口，并添加了一些独有的方法。</p>\n<p><strong>无序，唯一</strong></p>\n<p>Java 中常用的 Set 类有以下几种：</p>\n<ol>\n<li>HashSet：基于哈希表实现，具有良好的插入和查询性能，但不保证元素的顺序。</li>\n<li>TreeSet：基于红黑树实现，元素按照自然顺序排序或指定的 Comparator 顺序排序。</li>\n<li>LinkedHashSet：基于哈希表和链表实现，保证元素按照插入顺序排列。</li>\n</ol>\n<p>Set 的常用方法包括：</p>\n<ol>\n<li>add (element)：向集合中添加元素。</li>\n<li>remove (element)：从集合中删除指定元素。</li>\n<li>contains (element)：判断集合中是否包含指定元素。</li>\n<li>size ()：返回集合中元素的数量。</li>\n<li>isEmpty ()：判断集合是否为空。</li>\n<li>clear ()：清空集合中的所有元素。</li>\n</ol>\n<p>例如，以下是使用 HashSet 和 TreeSet 实现的 Set 的示例：</p>\n<pre><code class=\"language-Java\">import java.util.HashSet;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class SetExample &#123;\n    public static void main(String[] args) &#123;\n        Set&lt;String&gt; hashSet = new HashSet&lt;&gt;();\n        hashSet.add(&quot;apple&quot;);\n        hashSet.add(&quot;banana&quot;);\n        hashSet.add(&quot;orange&quot;);\n\n        System.out.println(hashSet); // 输出：[orange, banana, apple]\n\n        hashSet.remove(&quot;banana&quot;);\n        System.out.println(hashSet); // 输出：[orange, apple]\n\n        System.out.println(hashSet.contains(&quot;orange&quot;)); // 输出：true\n\n        Set&lt;String&gt; treeSet = new TreeSet&lt;&gt;();\n        treeSet.add(&quot;apple&quot;);\n        treeSet.add(&quot;banana&quot;);\n        treeSet.add(&quot;orange&quot;);\n\n        System.out.println(treeSet); // 输出：[apple, banana, orange]\n\n        treeSet.remove(&quot;banana&quot;);\n        System.out.println(treeSet); // 输出：[apple, orange]\n\n        System.out.println(treeSet.contains(&quot;orange&quot;)); // 输出：true\n    &#125;\n&#125;\n\n</code></pre>\n<p>以上代码由 [ChatGPT Mar 14 Version] 生成。</p>\n<h3 id=\"41-hashset\"><a class=\"markdownIt-Anchor\" href=\"#41-hashset\">#</a> 4.1 HashSet</h3>\n<p>在 Java 中，HashSet 是一种基于哈希表实现的 Set 集合，它不保证元素的顺序，但是可以快速地插入和查找元素。HashSet 使用哈希函数将元素映射到哈希表中的桶（bucket）中，桶是一个链表或树结构，用于解决哈希冲突（即不同元素映射到同一个桶中的情况）。</p>\n<p>HashSet 的特点包括：</p>\n<ol>\n<li>不保证元素的顺序。</li>\n<li>不允许集合中存在重复元素。</li>\n<li>允许 null 元素。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>beihua<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>listEX001<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>beihua<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KarryCode</span><span class=\"token punctuation\">.</span>listEX001<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>news<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashSet</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test_foe_HashSet <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        * 无论什么 List 还是 Set 均为 Cll... 的继承类，其均具有父类的方法</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        * Set 中存放的是对象的引用，相同的引用是互斥的只能添加一次</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        * equals () 方法可以被重写</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        * Set 是无序的，不存在 Function（index，XXX）类似如此的有序号的的方法，且只能使用增强型的 for 进行循环输出 */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">Set</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        news newslkr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lkr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        news newsffl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ffl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        news newslqr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">news</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"timu3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lqr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newslkr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                     <span class=\"token comment\">// 普通追加</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newsffl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newslqr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token operator\">:</span>set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            news test <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> obj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">Iterator</span> iterator <span class=\"token operator\">=</span> set<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            news test <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"5iterator-迭代器\"><a class=\"markdownIt-Anchor\" href=\"#5iterator-迭代器\">#</a> 5，Iterator 迭代器</h2>\n<p>在 Java 中，Iterator 是一个用于遍历集合（Collection）元素的接口，它提供了一种统一的访问集合中元素的方式。通过 Iterator，我们可以遍历集合中的每个元素，而不需要知道集合的具体实现方式。</p>\n<p>Iterator 接口包含了以下方法：</p>\n<ol>\n<li>hasNext ()：判断集合中是否还有下一个元素。</li>\n<li>next ()：返回集合中的下一个元素。</li>\n<li>remove ()：从集合中移除通过 next () 方法返回的最后一个元素。</li>\n</ol>\n<p>Iterator 的工作原理是，首先通过集合的 iterator () 方法获得一个 Iterator 对象，然后使用 hasNext () 和 next () 方法遍历集合中的元素，最后使用 remove () 方法从集合中移除元素。</p>\n<p>在 4.1HashSet 中用到了本迭代器，以下为关键语句：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Iterator</span> iterator <span class=\"token operator\">=</span> set<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            news test <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>news<span class=\"token punctuation\">)</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "java高级特性",
                "java"
            ]
        },
        {
            "id": "https://735690757.github.io/hello/",
            "url": "https://735690757.github.io/hello/",
            "title": "起点，但不止于起点！",
            "date_published": "2023-03-17T15:11:31.000Z",
            "content_html": "<h2 id=\"领航\"><a class=\"markdownIt-Anchor\" href=\"#领航\">#</a> 领航</h2>\n<p>首先感谢 Github 提供的 pages 服务，其次感谢制作 Hexo 框架全体工作人员和 aurora 主题作者将我带入绚丽多彩的博客世界，最后我还要感谢目前博客使用的主题 Shoka 的制作者，在这里 Karry 献上最崇高的敬意！</p>\n<h2 id=\"简单总结\"><a class=\"markdownIt-Anchor\" href=\"#简单总结\">#</a> 简单总结</h2>\n<p>接下来会使用这个博客分享各种生活趣事、代码经验以及学科题目解答，敬请期待！</p>\n<p><strong>welcome</strong></p>\n<blockquote>\n<ul>\n<li>2023 年 3 月 17 日 完成 Hexo+GitHub 网页搭建</li>\n<li>欢迎访问 Karry.Liu 的个人博客</li>\n<li>QQ：735690757</li>\n<li>WeChat：Sa9329Mxz</li>\n<li>gmail：735690757carry@gmail.com</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "初来乍到",
                "欢迎"
            ]
        }
    ]
}