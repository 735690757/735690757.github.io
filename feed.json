{
    "version": "https://jsonfeed.org/version/1",
    "title": "诗岸梦行舟",
    "subtitle": "分享计算机知识以及各种心得总结",
    "icon": "https://735690757.github.io/images/favicon.ico",
    "description": "愿世间所有的美好都得以祝愿",
    "home_page_url": "https://735690757.github.io",
    "items": [
        {
            "id": "https://735690757.github.io/life/shangan/",
            "url": "https://735690757.github.io/life/shangan/",
            "title": "写给我这一年多的考研时光",
            "date_published": "2025-04-01T11:30:00.000Z",
            "content_html": "<h1 id=\"202401202503\"><a class=\"markdownIt-Anchor\" href=\"#202401202503\"></a> 2024.01——2025.03</h1>\n<p>昨天收到了学校的拟录取通知，很幸运我的名字出现在了拟录取名单里，一年多的努力于此刻兑现。回想一年来的旅途，我真的有很多话想说。</p>\n<h2 id=\"前奏\"><a class=\"markdownIt-Anchor\" href=\"#前奏\"></a> 前奏</h2>\n<p>我其实很早之前就决定考研了，并不是跟风考研党，最初的考研目的也很简单，一是想与自己和解，和十八岁的自己和解，以此来填补高考的遗憾，二是去提升一下自己自身的竞争力。</p>\n<p>就这样，我在刚刚进入大学的时候，就已经决定好考研了。事实上，我是一名转专业的学生，高考的时候由于成绩不理想，导致没能学上自己想要的学的专业，对此我十分懊悔。</p>\n<p>和大多数普通人一样，我是一个堪称绝对平凡的人。普通人究竟该怎样向上，究竟该如何一步步的提升自己？我的回答是：脚踏实地，仰望星空。</p>\n<h2 id=\"启程\"><a class=\"markdownIt-Anchor\" href=\"#启程\"></a> 启程</h2>\n<p>2024年1月，我真正意义上的开启的我的考研之路，我认为我这个时间节点不算早也不算晚。</p>\n<p>2024的“年”显得格外压抑，我觉得考研就是一场完全黑暗的旅途，你能“听见”同学们的声音，但是“看不见”他们在哪里。有人说，考研就是在黑夜里洗衣服，你不知道你是否洗干净了，你只能就这样在黑暗中继续的洗下去，直到天明。</p>\n<h2 id=\"月升\"><a class=\"markdownIt-Anchor\" href=\"#月升\"></a> 月升</h2>\n<p>要说科目是我投入最大的，那一定是数学。我本身数学基础较差，我我花费很长时间去学习数学，遗憾的是最终的数学成绩并不是那么理想，在这里我就不献丑去讲我是怎么学习数学的了，我一定是头号反面教材。讲一句就是少看课，多练题，多练题，多练题。</p>\n<p>英语是我的老大难问题，英语的问题实际上要比数学还糟糕，在大学期间，我仅仅是470分过了四级，六级考了三次没考过，最后一次六级差了一道选择题的分数。我想说，英语你要掌握足够的词汇量，一定要多背单词，只有你认识单词了，才会看懂一句话，才知道他想表达什么意思，其次是语法，语法也很重要，但我认为，语法是一个锦上添花的。单词一定是前提，认识了足够多的单词之后，再学一学语法，那会让你更加如鱼得水。其次是做题技巧，尤其是阅读的做题技巧，多和网上的老师学一学，但是不要依赖这个，在学习之后一定要形成一套自己的解题方式。作文我觉得没什么好说的，多背多写就好了。</p>\n<p>我是一名纯纯理工科的学生，上一次认真学政治还是在初中，我在这里讲一讲怎么用理工科的思维去学政治，我再补充一句，如果你完全用理工的思维去学政治，那我想说，那很难学好政治。这里的理工思维一定要融入一些文科思想。政治一定要去了解历史，历史是由人民群众创造的，只有你了解了历史，理解当时他们的处境，与之共情，你才能明白，为什么他们这样做，以及这样做的好处。在答题时候，加入一些理工思维的公式，如果真正想学好仅靠一些答题公式还是不行的，但是呢我们这个是一个速成，或者是面对一个完全没怎么好好学过政治的人来说的。必要时用一些模板，公式化答题，是十分有利的。</p>\n<p>专业课方面我就不多讲了，我认为我这方面还是比较擅长的。还是多练多理解，毕竟这是你吃饭的工具呀。</p>\n<h2 id=\"月落\"><a class=\"markdownIt-Anchor\" href=\"#月落\"></a> 月落</h2>\n<p>黎明前的日子最煎熬，网上我好像从来没看见过，有人说初试结束后，复试有多难。其实也不能说难，但是这段日子极其痛苦、折磨与难熬。</p>\n<p>成绩出来后，学校不公布排名，同学们自发在网上去排名，每一天你看见你的排名往下掉，整个人都down down的，这种感觉很难形容，很难受。最后在复试前，学校还是公布了排名。今年招生人数35人，进复试44人，我排在35名。这个时候我觉得真的很难保持一个良好的心态，这是我觉得考研最折磨的一个点。没办法，复试还要继续准备，此刻便是至暗。</p>\n<h2 id=\"微光\"><a class=\"markdownIt-Anchor\" href=\"#微光\"></a> 微光</h2>\n<p>复试结束，一天后公布了最终排名，我以复试笔试第一名，复试成绩第四名，总成绩第十七名拟录取了。</p>\n<p>我想说复试真的很重要，我们学校的复试1分，就是初试1.07分，复试和初始同等重要。拟录取的那一刻犹如做梦一样，我不敢相信，我反复确认我真的拟录取了，生怕这一切全是梦境。</p>\n<p>是真的。</p>\n<h2 id=\"回望\"><a class=\"markdownIt-Anchor\" href=\"#回望\"></a> 回望</h2>\n<p>回望我这一年多的旅程，有欢笑，有泪水，此刻我想对自己说，你真的很棒，你站在你曾经幻想过的未来，于此刻，不再是幻想。</p>\n<p>“夹岸群芳相送远帆过千障碍”</p>\n",
            "tags": [
                "上岸",
                "生活"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/os_retest/",
            "url": "https://735690757.github.io/Operate-system/os_retest/",
            "title": "计算机操作系统复试速览",
            "date_published": "2025-03-18T23:50:00.000Z",
            "content_html": "<h1 id=\"计算机操作系统复试\"><a class=\"markdownIt-Anchor\" href=\"#计算机操作系统复试\"></a> 计算机操作系统复试</h1>\n<h2 id=\"操作系统的作用\"><a class=\"markdownIt-Anchor\" href=\"#操作系统的作用\"></a> 操作系统的作用</h2>\n<ol>\n<li>是用户与计算机硬件之间的接口</li>\n<li>是计算机系统资源的管理者</li>\n<li>实现了对计算机资源的抽象</li>\n</ol>\n<h2 id=\"操作系统基本特征\"><a class=\"markdownIt-Anchor\" href=\"#操作系统基本特征\"></a> 操作系统基本特征</h2>\n<ol>\n<li>并发</li>\n<li>共享</li>\n<li>虚拟</li>\n<li>异步</li>\n</ol>\n<h2 id=\"操作系统最基本调特征\"><a class=\"markdownIt-Anchor\" href=\"#操作系统最基本调特征\"></a> 操作系统最基本调特征</h2>\n<ol>\n<li>并发</li>\n<li>共享</li>\n</ol>\n<h2 id=\"处理机的双重工作模式\"><a class=\"markdownIt-Anchor\" href=\"#处理机的双重工作模式\"></a> 处理机的双重工作模式</h2>\n<p>用户态、核心态</p>\n<p>特权指令在核心态执行，非特权指令在用户态下执行</p>\n<h2 id=\"操作系统主要功能\"><a class=\"markdownIt-Anchor\" href=\"#操作系统主要功能\"></a> 操作系统主要功能</h2>\n<ol>\n<li>处理机调度\n<ol>\n<li>进程控制</li>\n<li>进程同步</li>\n<li>进程通信</li>\n<li>调度\n<ol>\n<li>作业调度（高级调度）</li>\n<li>进程调度（低级调度）</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>存储器管理\n<ol>\n<li>内存的分配与回收</li>\n<li>内存保护</li>\n<li>地址映射</li>\n<li>内存扩充</li>\n</ol>\n</li>\n<li>设备管理\n<ol>\n<li>缓冲管理</li>\n<li>设备分配</li>\n<li>设备处理</li>\n</ol>\n</li>\n<li>文件管理\n<ol>\n<li>文件存储空间管理</li>\n<li>目录管理</li>\n<li>文件的读写管理和保护</li>\n</ol>\n</li>\n<li>接口管理\n<ol>\n<li>用户接口（脱机用户接口、联机用户接口、图形用户接口）</li>\n<li>程序接口</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"程序并发执行特性\"><a class=\"markdownIt-Anchor\" href=\"#程序并发执行特性\"></a> 程序并发执行特性</h2>\n<ol>\n<li>间断性</li>\n<li>失去封闭性</li>\n<li>不可再现性</li>\n</ol>\n<h2 id=\"进程的特征\"><a class=\"markdownIt-Anchor\" href=\"#进程的特征\"></a> 进程的特征</h2>\n<p>动态性、并发性、独立性、异步性</p>\n<h2 id=\"进程的3状态模型-5状态模型-7状态模型\"><a class=\"markdownIt-Anchor\" href=\"#进程的3状态模型-5状态模型-7状态模型\"></a> 进程的3状态模型、5状态模型、7状态模型</h2>\n<h2 id=\"单cpu中的状态\"><a class=\"markdownIt-Anchor\" href=\"#单cpu中的状态\"></a> 单CPU中的状态</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态</th>\n<th style=\"text-align:center\">最多</th>\n<th style=\"text-align:center\">最少</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">运行</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">就绪</td>\n<td style=\"text-align:center\">N-1</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">阻塞</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"pcb中的信息\"><a class=\"markdownIt-Anchor\" href=\"#pcb中的信息\"></a> PCB中的信息</h2>\n<ol>\n<li>进程标识符</li>\n<li>处理机状态</li>\n<li>进程调度信息</li>\n<li>进程控制信息</li>\n</ol>\n<h2 id=\"拥有资源调度\"><a class=\"markdownIt-Anchor\" href=\"#拥有资源调度\"></a> 拥有资源？调度？</h2>\n<ol>\n<li>进程是拥有资源的</li>\n<li>线程是独立调度的</li>\n</ol>\n<h2 id=\"高级调度作业调度\"><a class=\"markdownIt-Anchor\" href=\"#高级调度作业调度\"></a> 高级调度（作业调度）</h2>\n<p>决定哪些作业从外存调入内存准备执行，控制系统的并发度。</p>\n<h2 id=\"中级调度内存调度\"><a class=\"markdownIt-Anchor\" href=\"#中级调度内存调度\"></a> 中级调度（内存调度）</h2>\n<p>管理内存中的进程，通过挂起和激活来调整内存使用。</p>\n<h2 id=\"低级调度进程调度\"><a class=\"markdownIt-Anchor\" href=\"#低级调度进程调度\"></a> 低级调度（进程调度）</h2>\n<p>决定哪个就绪进程获得CPU执行。</p>\n<h2 id=\"先来先服务fcfs\"><a class=\"markdownIt-Anchor\" href=\"#先来先服务fcfs\"></a> 先来先服务FCFS</h2>\n<p>按作业或进程到达的顺序分配CPU。</p>\n<ul>\n<li>简单易实现。</li>\n<li>非抢占式，可能导致“护航效应”（短作业等待长作业完成）。</li>\n<li>平均等待时间较长，<strong>适合长作业</strong>。</li>\n</ul>\n<h2 id=\"短作业优先sjf\"><a class=\"markdownIt-Anchor\" href=\"#短作业优先sjf\"></a> 短作业优先SJF</h2>\n<p>优先调度运行时间最短的作业。</p>\n<ul>\n<li>可抢占或非抢占。</li>\n<li>最小化平均等待时间。</li>\n<li><strong>可能导致长作业“饥饿”。</strong></li>\n</ul>\n<h2 id=\"优先级调度priority-scheduling\"><a class=\"markdownIt-Anchor\" href=\"#优先级调度priority-scheduling\"></a> 优先级调度Priority Scheduling</h2>\n<p>按优先级分配CPU，优先级高的先执行。</p>\n<ul>\n<li>可抢占或非抢占。</li>\n<li><strong>可能导致低优先级进程“饥饿”。</strong></li>\n<li>优先级可以是静态或动态调整。</li>\n</ul>\n<h2 id=\"时间片轮转调度rr\"><a class=\"markdownIt-Anchor\" href=\"#时间片轮转调度rr\"></a> 时间片轮转调度RR</h2>\n<p>每个进程分配一个固定时间片（Time Quantum），轮流执行。</p>\n<ul>\n<li>抢占式，适合分时系统。</li>\n<li>时间片大小影响性能：太小增加上下文切换开销，<strong>太大退化为FCFS</strong>。</li>\n<li>公平性好，响应时间短。</li>\n</ul>\n<h2 id=\"多级队列调度multilevel-queue-scheduling\"><a class=\"markdownIt-Anchor\" href=\"#多级队列调度multilevel-queue-scheduling\"></a> 多级队列调度Multilevel Queue Scheduling</h2>\n<p>将进程分为多个队列，每个队列采用不同的调度算法。</p>\n<ul>\n<li>队列间可设置优先级。</li>\n<li>适合混合型任务（如前台交互任务和后台批处理任务）。</li>\n</ul>\n<h2 id=\"多级反馈队列调度multilevel-feedback-queue-scheduling\"><a class=\"markdownIt-Anchor\" href=\"#多级反馈队列调度multilevel-feedback-queue-scheduling\"></a> 多级反馈队列调度Multilevel Feedback Queue Scheduling</h2>\n<p>进程可在多个队列间移动，根据行为动态调整优先级。</p>\n<ul>\n<li>结合了<strong>优先级调度</strong>和<strong>轮转调度</strong>的<strong>优点</strong>。</li>\n<li>动态适应进程行为，避免“饥饿”。</li>\n<li>实现复杂。</li>\n</ul>\n<h2 id=\"算法总结\"><a class=\"markdownIt-Anchor\" href=\"#算法总结\"></a> 算法总结</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">算法</th>\n<th style=\"text-align:left\">特点</th>\n<th style=\"text-align:left\">适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">FCFS</td>\n<td style=\"text-align:left\">简单，非抢占，护航效应</td>\n<td style=\"text-align:left\">批处理系统</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SJF</td>\n<td style=\"text-align:left\">最小化等待时间，可能导致长作业饥饿</td>\n<td style=\"text-align:left\">批处理系统</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">优先级调度</td>\n<td style=\"text-align:left\">按优先级执行，可能导致低优先级饥饿</td>\n<td style=\"text-align:left\">实时系统</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">轮转调度</td>\n<td style=\"text-align:left\">公平，响应时间短，时间片大小影响性能</td>\n<td style=\"text-align:left\">交互式系统</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">多级队列调度</td>\n<td style=\"text-align:left\">多队列，不同策略</td>\n<td style=\"text-align:left\">混合任务系统</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">多级反馈队列调度</td>\n<td style=\"text-align:left\">动态调整优先级，避免饥饿</td>\n<td style=\"text-align:left\">通用操作系统</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"死锁\"><a class=\"markdownIt-Anchor\" href=\"#死锁\"></a> 死锁</h2>\n<p>死锁是操作系统中的一种资源竞争现象，指多个进程或线程因争夺资源而陷入无限等待的状态，导致它们都无法继续执行。死锁的发生通常需要满足四个必要条件，称为<strong>死锁的四个必要条件</strong>。</p>\n<h2 id=\"死锁的四个必要条件\"><a class=\"markdownIt-Anchor\" href=\"#死锁的四个必要条件\"></a> 死锁的四个必要条件</h2>\n<ol>\n<li><strong>互斥条件（Mutual Exclusion）</strong>：\n<ul>\n<li>资源一次只能被一个进程占用，其他进程必须等待。</li>\n</ul>\n</li>\n<li><strong>请求与保持推荐（Hold and Wait）</strong>：\n<ul>\n<li>进程已经占有一些资源，同时请求其他被占用的资源。</li>\n</ul>\n</li>\n<li><strong>不剥夺条件（No Preemption）</strong>：\n<ul>\n<li>进程已获得的资源不能被强制剥夺，只能由进程自行释放。</li>\n</ul>\n</li>\n<li><strong>循环等待条件（Circular Wait）</strong>：\n<ul>\n<li>存在一个进程等待的循环链，每个进程都在等待下一个进程占用的资源。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"死锁的处理方法\"><a class=\"markdownIt-Anchor\" href=\"#死锁的处理方法\"></a> 死锁的处理方法</h2>\n<ol>\n<li>死锁预防</li>\n<li>死锁避免</li>\n<li>死锁检测</li>\n<li>死锁解除</li>\n</ol>\n<h2 id=\"银行家算法\"><a class=\"markdownIt-Anchor\" href=\"#银行家算法\"></a> 银行家算法</h2>\n<ul>\n<li>\n<p>检查资源分配后系统是否处于安全状态（即是否存在一个执行序列使所有进程完成）。</p>\n</li>\n<li>\n<p>如果不安全，则拒绝分配请求。</p>\n</li>\n</ul>\n<h2 id=\"两种制约关系\"><a class=\"markdownIt-Anchor\" href=\"#两种制约关系\"></a> 两种制约关系</h2>\n<ol>\n<li>互斥关系</li>\n<li>同步关系</li>\n</ol>\n<h2 id=\"解决临界区同步问题须遵循以下准则\"><a class=\"markdownIt-Anchor\" href=\"#解决临界区同步问题须遵循以下准则\"></a> 解决临界区同步问题须遵循以下准则</h2>\n<ol>\n<li>空闲让进</li>\n<li>忙则等待</li>\n<li>有限等待</li>\n<li>让权等待</li>\n</ol>\n<h2 id=\"程序的装入方式\"><a class=\"markdownIt-Anchor\" href=\"#程序的装入方式\"></a> 程序的装入方式</h2>\n<ol>\n<li>绝对装入\n<ol>\n<li>程序中的地址是固定的，装入时不需要进行地址转换。</li>\n<li>适用于单道程序环境，或者内存地址固定的系统。</li>\n<li>灵活性差，程序必须加载到指定的内存位置，无法适应多道程序环境。</li>\n</ol>\n</li>\n<li>可重定位装入\n<ol>\n<li>程序可以在内存的不同位置加载，适应多道程序设计。</li>\n<li>装入时需要进行地址重定位，通常由操作系统或装入程序完成。</li>\n<li>适用于多道程序环境，支持内存的动态分配。</li>\n</ol>\n</li>\n<li>动态运行时装入\n<ol>\n<li>程序可以部分加载，只有在需要时才将相关部分加载到内存。</li>\n<li>地址转换由硬件和操作系统共同完成。</li>\n<li>支持虚拟内存技术，允许程序的大小超过物理内存的容量。</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li><strong>绝对装入</strong>：适用于单道程序环境，地址固定，装入简单但缺乏灵活性。</li>\n<li><strong>可重定位装入</strong>：适用于多道程序环境，支持地址重定位，灵活性高。</li>\n<li><strong>动态运行时装入</strong>：支持虚拟内存，程序可以动态加载，适合现代操作系统。</li>\n</ul>\n<h2 id=\"连续分配存储器管理方式\"><a class=\"markdownIt-Anchor\" href=\"#连续分配存储器管理方式\"></a> 连续分配存储器管理方式</h2>\n<ol>\n<li>单一连续分配</li>\n<li>固定分区分配</li>\n<li>动态分区分配</li>\n</ol>\n<h2 id=\"动态分区分配的算法\"><a class=\"markdownIt-Anchor\" href=\"#动态分区分配的算法\"></a> 动态分区分配的算法</h2>\n<ol>\n<li>首次适应算法</li>\n<li>循环首次适应算法</li>\n<li>最佳适配算法</li>\n<li>最坏适配算法</li>\n</ol>\n<h2 id=\"分页存储\"><a class=\"markdownIt-Anchor\" href=\"#分页存储\"></a> 分页存储</h2>\n<h2 id=\"分段存储\"><a class=\"markdownIt-Anchor\" href=\"#分段存储\"></a> 分段存储</h2>\n<h2 id=\"页面置换算法\"><a class=\"markdownIt-Anchor\" href=\"#页面置换算法\"></a> 页面置换算法</h2>\n<ol>\n<li>先进先出算法</li>\n<li>最佳页面置换算法</li>\n<li>最近最久未使用算法</li>\n<li>最少使用算法</li>\n<li>Clock算法</li>\n<li>改进型Clock算法</li>\n</ol>\n<h2 id=\"抖动\"><a class=\"markdownIt-Anchor\" href=\"#抖动\"></a> 抖动</h2>\n<p>**抖动（Thrashing）**是操作系统中与虚拟内存管理相关的一种现象，通常发生在系统内存资源不足时。当系统频繁地进行页面置换（即频繁地将内存中的页面换出到外存，再从外存换入新的页面），导致大部分时间都花在页面调度上，而不是执行实际任务时，就发生了抖动。</p>\n<h2 id=\"io设别控制方式\"><a class=\"markdownIt-Anchor\" href=\"#io设别控制方式\"></a> I/O设别控制方式</h2>\n<ol>\n<li>使用<strong>轮询</strong>的可编程I/O方式（落后）</li>\n<li>使用<strong>中断</strong>的可编程I/O方式（用的比较多）</li>\n<li>使用DMA（减少了CPU对I/O的干预）</li>\n<li>使用I/O通道</li>\n</ol>\n<h2 id=\"假脱机技术-spooling\"><a class=\"markdownIt-Anchor\" href=\"#假脱机技术-spooling\"></a> 假脱机技术-SPOOLing</h2>\n<p><strong>假脱机技术（SPOOLing，Simultaneous Peripheral Operations On-Line）</strong> 是一种用于管理输入/输出（I/O）操作的技术，特别是在处理低速外设（如打印机）时。SPOOLing 的核心思想是通过<strong>缓冲</strong>和<strong>排队</strong>机制，将外设的操作与主机的计算任务分离，从而提高系统的效率和资源利用率。</p>\n<p>SPOOLing 的基本原理</p>\n<ol>\n<li><strong>输入井和输出井</strong>：\n<ul>\n<li>SPOOLing 系统在磁盘上创建两个专门的存储区域：<strong>输入井</strong>和<strong>输出井</strong>。</li>\n<li><strong>输入井</strong>用于暂存从输入设备（如读卡器）读取的数据。</li>\n<li><strong>输出井</strong>用于暂存需要发送到输出设备（如打印机）的数据。</li>\n</ul>\n</li>\n<li><strong>缓冲和排队</strong>：\n<ul>\n<li>当用户提交任务时，数据首先被写入磁盘的输入井或输出井，而不是直接发送到外设。</li>\n<li>外设（如打印机）从输出井中按顺序读取数据并执行操作，而主机可以继续执行其他任务。</li>\n</ul>\n</li>\n<li><strong>并行操作</strong>：\n<ul>\n<li>主机和外设可以并行工作。主机不需要等待外设完成操作，而是将数据交给 SPOOLing 系统后继续执行其他任务。</li>\n</ul>\n</li>\n</ol>\n<p>SPOOLing 的应用场景</p>\n<ol>\n<li><strong>打印任务管理</strong>：\n<ul>\n<li>打印机是典型的低速外设，SPOOLing 技术可以有效地管理多个打印任务，避免用户等待。</li>\n</ul>\n</li>\n<li><strong>批处理系统</strong>：\n<ul>\n<li>在批处理系统中，SPOOLing 技术可以用于管理输入作业和输出结果。</li>\n</ul>\n</li>\n<li><strong>网络打印</strong>：\n<ul>\n<li>现代网络打印机通常使用 SPOOLing 技术来管理来自多个用户的打印任务。</li>\n</ul>\n</li>\n</ol>\n<p>SPOOLing技术就是将独占设备转变为逻辑上的共享设备，提高了I/O速度，实现了虚拟设备的功能。</p>\n<h2 id=\"文件在外存的组织方式\"><a class=\"markdownIt-Anchor\" href=\"#文件在外存的组织方式\"></a> 文件在外存的组织方式</h2>\n<ol>\n<li>连续组织方式</li>\n<li>链接组织方式（显示连接FAT、隐式链接）</li>\n<li>索引组织方式（一级索引、二级索引…）</li>\n</ol>\n<h2 id=\"显示链接\"><a class=\"markdownIt-Anchor\" href=\"#显示链接\"></a> 显示链接</h2>\n<p>显示链接通过一个专门的<strong>链接表</strong>来记录文件中各个块的物理地址。这个表通常称为<strong>文件分配表（FAT, File Allocation Table）</strong>。</p>\n<h2 id=\"隐式链接\"><a class=\"markdownIt-Anchor\" href=\"#隐式链接\"></a> 隐式链接</h2>\n<p>隐式链接将每个块的指针存储在块本身中，而不是使用一个全局的链接表。每个块中除了存储数据外，还包含下一个块的地址。</p>\n<h2 id=\"显示链接-vs-隐式链接\"><a class=\"markdownIt-Anchor\" href=\"#显示链接-vs-隐式链接\"></a> 显示链接 vs 隐式链接</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特性</th>\n<th style=\"text-align:left\">显示链接（FAT）</th>\n<th style=\"text-align:left\">隐式链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>存储结构</strong></td>\n<td style=\"text-align:left\">使用全局的 FAT 表存储链接信息</td>\n<td style=\"text-align:left\">链接信息存储在块内部</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>访问方式</strong></td>\n<td style=\"text-align:left\">支持随机访问</td>\n<td style=\"text-align:left\">仅支持顺序访问</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>空间开销</strong></td>\n<td style=\"text-align:left\">FAT 表占用额外空间</td>\n<td style=\"text-align:left\">无额外空间开销</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>实现复杂度</strong></td>\n<td style=\"text-align:left\">较复杂</td>\n<td style=\"text-align:left\">较简单</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>可靠性</strong></td>\n<td style=\"text-align:left\">FAT 损坏可能导致文件系统失效</td>\n<td style=\"text-align:left\">单个块损坏可能影响文件完整性</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>适用场景</strong></td>\n<td style=\"text-align:left\">需要随机访问的场景</td>\n<td style=\"text-align:left\">顺序访问为主的场景</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"小问题\"><a class=\"markdownIt-Anchor\" href=\"#小问题\"></a> 小问题</h1>\n<h2 id=\"进程和程序有什么区别\"><a class=\"markdownIt-Anchor\" href=\"#进程和程序有什么区别\"></a> 进程和程序有什么区别</h2>\n<ol>\n<li>程序\n<ol>\n<li>程序是存储在磁盘或其他存储介质上的<strong>静态实体</strong>，由一系列指令和数据组成。</li>\n<li>它是一个被动的实体，只有在被加载到内存并执行时才会发挥作用。</li>\n</ol>\n</li>\n<li>进程\n<ol>\n<li>进程是程序在内存中的<strong>动态执行实例</strong>。</li>\n<li>它是一个主动的实体，包含了程序的执行状态（如程序计数器、寄存器、堆栈等）以及系统分配的资源（如内存、文件句柄等）。</li>\n</ol>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特性</th>\n<th style=\"text-align:left\">程序（Program）</th>\n<th style=\"text-align:left\">进程（Process）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>定义</strong></td>\n<td style=\"text-align:left\">静态的指令和数据集合</td>\n<td style=\"text-align:left\">程序的动态执行实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>生命周期</strong></td>\n<td style=\"text-align:left\">永久存在</td>\n<td style=\"text-align:left\">临时存在，从创建到终止</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>状态</strong></td>\n<td style=\"text-align:left\">无状态</td>\n<td style=\"text-align:left\">有状态（运行、就绪、阻塞等）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>资源占用</strong></td>\n<td style=\"text-align:left\">不占用系统资源</td>\n<td style=\"text-align:left\">占用系统资源（CPU、内存等）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>并发性</strong></td>\n<td style=\"text-align:left\">不支持并发</td>\n<td style=\"text-align:left\">支持并发</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>独立性</strong></td>\n<td style=\"text-align:left\">独立存在</td>\n<td style=\"text-align:left\">进程间独立，可通过 IPC 交互</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>创建方式</strong></td>\n<td style=\"text-align:left\">开发者编写，编译生成</td>\n<td style=\"text-align:left\">操作系统创建</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>示例</strong></td>\n<td style=\"text-align:left\">可执行文件（如 <code>a.exe</code>）</td>\n<td style=\"text-align:left\">运行中的程序实例</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"死锁是什么死锁是怎么产生的如何处理死锁\"><a class=\"markdownIt-Anchor\" href=\"#死锁是什么死锁是怎么产生的如何处理死锁\"></a> 死锁是什么？死锁是怎么产生的？如何处理死锁？</h2>\n<p><strong>死锁</strong>是操作系统中的一种<strong>资源竞争问题</strong>，指的是多个进程或线程因为竞争资源而相互等待，导致它们都无法继续执行的状态。死锁是一种<strong>严重的系统问题</strong>，会导致系统资源浪费和程序无法正常运行。</p>\n<ol>\n<li>死锁的产生条件\n<ol>\n<li>互斥条件</li>\n<li>不剥夺条件</li>\n<li>请求与保持条件</li>\n<li>循环等待条件</li>\n</ol>\n</li>\n<li>死锁的处理方法\n<ol>\n<li>死锁的预防</li>\n<li>死锁的检测</li>\n<li>死锁的避免</li>\n<li>死锁的解除</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"饥饿是什么和死锁有什么区别\"><a class=\"markdownIt-Anchor\" href=\"#饥饿是什么和死锁有什么区别\"></a> 饥饿是什么？和死锁有什么区别？</h2>\n<p>饥饿是指某个进程或线程因为资源总是被其他进程抢占，导致它长期得不到所需的资源，从而无法继续执行。</p>\n<p>产生原因</p>\n<ol>\n<li><strong>资源分配策略不公平</strong>：\n<ul>\n<li>某些进程总是优先获得资源，而其他进程被忽略。</li>\n</ul>\n</li>\n<li><strong>优先级调度问题</strong>：\n<ul>\n<li>高优先级进程不断抢占资源，低优先级进程始终得不到资源。</li>\n</ul>\n</li>\n<li><strong>资源竞争激烈</strong>：\n<ul>\n<li>资源数量有限，且竞争资源的进程过多。</li>\n</ul>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特性</th>\n<th style=\"text-align:left\">饥饿（Starvation）</th>\n<th style=\"text-align:left\">死锁（Deadlock）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>定义</strong></td>\n<td style=\"text-align:left\">某个进程长期得不到资源</td>\n<td style=\"text-align:left\">多个进程相互等待，无法继续执行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>成因</strong></td>\n<td style=\"text-align:left\">资源分配不公平或优先级调度问题</td>\n<td style=\"text-align:left\">四个必要条件同时满足</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>涉及进程数量</strong></td>\n<td style=\"text-align:left\">可能只有一个进程被“饿死”</td>\n<td style=\"text-align:left\">至少有两个或多个进程相互等待</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>资源状态</strong></td>\n<td style=\"text-align:left\">资源被其他进程占用，但未被阻塞</td>\n<td style=\"text-align:left\">资源被占用且进程相互阻塞</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>解决方法</strong></td>\n<td style=\"text-align:left\">公平调度、动态优先级调整、资源预留</td>\n<td style=\"text-align:left\">预防、避免、检测与恢复、忽略</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>影响范围</strong></td>\n<td style=\"text-align:left\">只影响被“饿死”的进程</td>\n<td style=\"text-align:left\">影响所有参与死锁的进程</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>是否可恢复</strong></td>\n<td style=\"text-align:left\">可以通过调整资源分配恢复</td>\n<td style=\"text-align:left\">需要外部干预（如终止进程）才能恢复</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/network/computer_network_retest/",
            "url": "https://735690757.github.io/network/computer_network_retest/",
            "title": "计算机网络复试速览",
            "date_published": "2025-03-16T16:00:00.000Z",
            "content_html": "<h1 id=\"计算机网络复试\"><a class=\"markdownIt-Anchor\" href=\"#计算机网络复试\"></a> 计算机网络复试</h1>\n<h2 id=\"物理层\"><a class=\"markdownIt-Anchor\" href=\"#物理层\"></a> 物理层</h2>\n<p>传输比特流，规定机械特性、电气特性、功能特性。</p>\n<h2 id=\"数据链路层\"><a class=\"markdownIt-Anchor\" href=\"#数据链路层\"></a> 数据链路层</h2>\n<p>将原始比特流<strong>封装成帧</strong>，将物理层提供的可能出错的物理连接改造为逻辑上无差错的数据链路，是对物理层的<strong>一次增强</strong>。</p>\n<h2 id=\"网络层\"><a class=\"markdownIt-Anchor\" href=\"#网络层\"></a> 网络层</h2>\n<p>传输单位是<strong>数据报</strong>，进行路由选择，实现流量控制、拥塞控制、差错控制、网际互连。</p>\n<h2 id=\"传输层\"><a class=\"markdownIt-Anchor\" href=\"#传输层\"></a> 传输层</h2>\n<p>负责主机中两个<strong>进程通信</strong>，提供端到端的可靠传输。</p>\n<p>端到端：进程的端口号之间</p>\n<p>点对点：IP之间</p>\n<h2 id=\"应用层\"><a class=\"markdownIt-Anchor\" href=\"#应用层\"></a> 应用层</h2>\n<p>OSI最高层，是<strong>用户</strong>与<strong>网络</strong>之间的接口。</p>\n<h2 id=\"信道-串行与并行\"><a class=\"markdownIt-Anchor\" href=\"#信道-串行与并行\"></a> 信道、串行与并行</h2>\n<p>是通信的通道，即传输介质。串行适合长距离通信，并行适用于并行通信。</p>\n<h2 id=\"单工-半双工与全双工\"><a class=\"markdownIt-Anchor\" href=\"#单工-半双工与全双工\"></a> 单工、半双工与全双工</h2>\n<p>单工：只单向传输。</p>\n<p>半双工：双向，但是不能同时。</p>\n<p>全双工：双向，允许同时。</p>\n<h2 id=\"奈奎斯特定理\"><a class=\"markdownIt-Anchor\" href=\"#奈奎斯特定理\"></a> 奈奎斯特定理</h2>\n<p>理想信道中，为避免串码干扰极限速率。</p>\n<h2 id=\"香农定理\"><a class=\"markdownIt-Anchor\" href=\"#香农定理\"></a> 香农定理</h2>\n<p>实际信道中，传输速率上界。</p>\n<h2 id=\"双绞线-同轴电缆-光纤与无线传输\"><a class=\"markdownIt-Anchor\" href=\"#双绞线-同轴电缆-光纤与无线传输\"></a> 双绞线、同轴电缆、光纤与无线传输</h2>\n<p>双绞线、同轴电缆、光纤与无线传输这些都是<strong>物理层</strong>的传输介质。</p>\n<h2 id=\"物理层设备\"><a class=\"markdownIt-Anchor\" href=\"#物理层设备\"></a> 物理层设备</h2>\n<p>中继器：信号的转发、放大、整形，以防止失真，无差错控制。</p>\n<p>集线器：实际上集线器是一个多端口中继器。</p>\n<h2 id=\"帧\"><a class=\"markdownIt-Anchor\" href=\"#帧\"></a> 帧</h2>\n<p>是数据链路层对等实体之间进行的逻辑通信单元。</p>\n<h2 id=\"为网络层提供的三种服务\"><a class=\"markdownIt-Anchor\" href=\"#为网络层提供的三种服务\"></a> 为网络层提供的三种服务</h2>\n<ol>\n<li>无确认、无连接的服务，适用于误码率低的比如以太网</li>\n<li>有确认、无连接的服务，适用于无线通信</li>\n<li>有确认的面向连接的服务，适用于有高可靠要求的网络</li>\n</ol>\n<h2 id=\"封装成帧\"><a class=\"markdownIt-Anchor\" href=\"#封装成帧\"></a> 封装成帧</h2>\n<p>在一点数据的<strong>头</strong>和<strong>尾</strong>加一些信息，构成帧，主要是：标志、地址、控制、信息、帧检验序列、标志组成。</p>\n<h2 id=\"透明传输\"><a class=\"markdownIt-Anchor\" href=\"#透明传输\"></a> 透明传输</h2>\n<p>透明传输的作用是你无论传输了什么数据，都会保证你的传输原数据，不会被”误解“</p>\n<h2 id=\"流量控制\"><a class=\"markdownIt-Anchor\" href=\"#流量控制\"></a> 流量控制</h2>\n<p>链路两端存在工作速率差异，为以防淹没现象，使用流量控制。接收方控制发送方。</p>\n<h2 id=\"差错检测\"><a class=\"markdownIt-Anchor\" href=\"#差错检测\"></a> 差错检测</h2>\n<p>传输时可能产生错误，为修复这些错误使用差错检测机制</p>\n<ol>\n<li>位错：用CRC冗余校验</li>\n<li>帧错：这个是传输错误</li>\n</ol>\n<h2 id=\"字节填充法\"><a class=\"markdownIt-Anchor\" href=\"#字节填充法\"></a> 字节填充法</h2>\n<p>在开头填充和末尾填充</p>\n<h2 id=\"零比特填充法\"><a class=\"markdownIt-Anchor\" href=\"#零比特填充法\"></a> 零比特填充法</h2>\n<p>每遇五个‘1’在后面填充一个‘0’</p>\n<h2 id=\"差错控制\"><a class=\"markdownIt-Anchor\" href=\"#差错控制\"></a> 差错控制</h2>\n<p>自动重传请求ARQ / 前向纠错FEC：ARQ 是一种基于重传的错误控制机制。当接收端检测到数据包错误或丢失时，会请求发送端重新发送数据。FEC 是一种通过在发送的数据中添加冗余信息来纠正错误的机制。接收端利用这些冗余信息检测并纠正错误，而无需请求重传。</p>\n<p>差错控制又可分为：检错编码（奇偶校验码、循环冗余码）和纠错编码（海明码）</p>\n<ol>\n<li>奇偶校验码（检错）就是让1的个数是奇数个还是偶数个</li>\n<li>海明码（纠错）就是在信息位中加入几个就错位</li>\n</ol>\n<h2 id=\"停止-等待流量控制一个一个的\"><a class=\"markdownIt-Anchor\" href=\"#停止-等待流量控制一个一个的\"></a> 停止-等待流量控制（一个一个的）</h2>\n<p>发送方每次发送一个帧，只有接收方回复确认帧才发下一帧</p>\n<h2 id=\"滑动窗口流量控制一块一块的\"><a class=\"markdownIt-Anchor\" href=\"#滑动窗口流量控制一块一块的\"></a> 滑动窗口流量控制（一块一块的）</h2>\n<p>集中发送一块，收到最左侧的帧后向右滑动，如果未收确认消息到那就重发。</p>\n<h2 id=\"arq协议自动重传请求\"><a class=\"markdownIt-Anchor\" href=\"#arq协议自动重传请求\"></a> ARQ协议（自动重传请求）!</h2>\n<ol>\n<li>停止-等待<strong>Stop-and-Wait</strong>：发送端发送一个数据包后，等待接收端的确认（ACK）。如果收到 ACK，发送下一个数据包；如果超时未收到 ACK，则重传。简单但效率较低，适合低速率通信。</li>\n<li>后退N帧<strong>Go-Back-N</strong>：如果某个数据包出错，接收端会丢弃该包及其后续的所有包，发送端需要从出错的数据包开始重传。</li>\n<li>选择性重传<strong>Selective Repeat</strong>：如果某个数据包出错，只重传出错的数据包，而不是后续的所有包。</li>\n</ol>\n<p>1-&gt;2-&gt;3，越来越优秀。</p>\n<h2 id=\"介质访问控制\"><a class=\"markdownIt-Anchor\" href=\"#介质访问控制\"></a> 介质访问控制</h2>\n<p>数据链路层的一个子层，主要负责管理多个设备共享同一通信介质时的访问权限。它的核心目标是解决<strong>多路访问问题</strong>，即如何高效、公平地协调多个设备对共享介质的访问，以避免冲突并提高网络性能。</p>\n<ol>\n<li>频分复用FDM：将总带宽划分为多个子频带，每个子频带分配给一个信道（用户或设备）</li>\n<li>时分复用TDM：将时间划分为固定长度的时隙，每个时隙分配给一个信道。</li>\n<li>波分复用WDM：在光纤通信中，将不同波长的光信号复用到同一根光纤中传输。</li>\n<li>码分复用CDM：每个信道使用唯一的编码序列对数据进行调制，多个信道可以在同一频率和时间内传输。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">技术</th>\n<th style=\"text-align:left\">划分依据</th>\n<th style=\"text-align:left\">适用场景</th>\n<th style=\"text-align:left\">优点</th>\n<th style=\"text-align:left\">缺点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>FDM</strong></td>\n<td style=\"text-align:left\">频率</td>\n<td style=\"text-align:left\">广播、模拟通信</td>\n<td style=\"text-align:left\">简单、适合恒定速率数据</td>\n<td style=\"text-align:left\">频率利用率低</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>TDM</strong></td>\n<td style=\"text-align:left\">时间</td>\n<td style=\"text-align:left\">数字电话、数字通信</td>\n<td style=\"text-align:left\">高效、适合数字信号</td>\n<td style=\"text-align:left\">对同步要求高</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>WDM</strong></td>\n<td style=\"text-align:left\">波长（光频率）</td>\n<td style=\"text-align:left\">光纤通信</td>\n<td style=\"text-align:left\">高容量、长距离传输</td>\n<td style=\"text-align:left\">设备成本高</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>CDM</strong></td>\n<td style=\"text-align:left\">编码</td>\n<td style=\"text-align:left\">移动通信、卫星通信</td>\n<td style=\"text-align:left\">抗干扰、多用户同时通信</td>\n<td style=\"text-align:left\">实现复杂</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"aloha\"><a class=\"markdownIt-Anchor\" href=\"#aloha\"></a> ALOHA</h2>\n<p>最简单的随机访问协议，设备随时发送数据。如果发生冲突，随机等待一段时间后重传。效率较低，最大信道利用率为 18.4%。</p>\n<h2 id=\"载波侦听多路访问csma\"><a class=\"markdownIt-Anchor\" href=\"#载波侦听多路访问csma\"></a> 载波侦听多路访问（CSMA）</h2>\n<p>设备在发送数据前先侦听介质是否空闲。如果介质空闲，则发送数据；否则等待。</p>\n<ul>\n<li>\n<p><strong>CSMA/CD（冲突检测）</strong>：用于有线以太网，检测到冲突后立即停止发送。</p>\n</li>\n<li>\n<p><strong>CSMA/CA（冲突避免）</strong>：用于无线网络（如 Wi-Fi），通过随机退避避免冲突。</p>\n</li>\n</ul>\n<p>CSMA有：1-坚持CSMA、非坚持CSMA、p-坚持CSMA</p>\n<ul>\n<li>“1-坚持” 表示设备以概率 1 发送数据（即一旦介质空闲，必定发送）。</li>\n<li>设备不会持续侦听介质，而是随机退避。</li>\n<li><em>p</em> 是一个可调参数，用于控制发送概率，结合了 1-坚持和非坚持的特点。</li>\n</ul>\n<h2 id=\"载波侦听多路访问冲突检测-csmacd-有线网络\"><a class=\"markdownIt-Anchor\" href=\"#载波侦听多路访问冲突检测-csmacd-有线网络\"></a> 载波侦听多路访问/冲突检测 CSMA/CD （有线网络）</h2>\n<h3 id=\"载波侦听carrier-sense\"><a class=\"markdownIt-Anchor\" href=\"#载波侦听carrier-sense\"></a> 载波侦听（Carrier Sense）</h3>\n<ul>\n<li>设备在发送数据前先侦听介质是否空闲。</li>\n<li>如果介质空闲，则开始发送数据。</li>\n<li>如果介质忙，则等待直到介质空闲。</li>\n</ul>\n<h3 id=\"多路访问multiple-access\"><a class=\"markdownIt-Anchor\" href=\"#多路访问multiple-access\"></a> 多路访问（Multiple Access）</h3>\n<ul>\n<li>多个设备共享同一通信介质，可能同时尝试发送数据。</li>\n</ul>\n<h3 id=\"冲突检测collision-detectioncd\"><a class=\"markdownIt-Anchor\" href=\"#冲突检测collision-detectioncd\"></a> 冲突检测（Collision Detection）（CD）</h3>\n<ul>\n<li>设备在发送数据的同时继续侦听介质。</li>\n<li>如果检测到冲突（即信号强度异常），立即停止发送数据。</li>\n<li>发送一个<strong>冲突强化信号（Jamming Signal）</strong>，通知其他设备发生了冲突。</li>\n</ul>\n<h3 id=\"随机退避random-backoff\"><a class=\"markdownIt-Anchor\" href=\"#随机退避random-backoff\"></a> 随机退避（Random Backoff）</h3>\n<ul>\n<li>设备等待一个随机时间后重新尝试发送数据。</li>\n<li>随机时间通过<strong>二进制指数退避算法</strong>计算，以减少再次冲突的概率。</li>\n</ul>\n<p><strong>先听再发、边发边听、冲突停发、随机重发</strong></p>\n<h2 id=\"争用期2τ\"><a class=\"markdownIt-Anchor\" href=\"#争用期2τ\"></a> 争用期2τ</h2>\n<p><strong>τ</strong> 是信号在网络中传播的<strong>单程最大传播时延</strong>，<strong>争用期（2τ）</strong> 是 CSMA/CD 协议中冲突检测的时间窗口。决定了网络的最大物理范围和最小帧长。通过合理设计争用期，可以确保冲突检测的有效性，从而提高网络的可靠性。</p>\n<h2 id=\"二进制指数退避算法\"><a class=\"markdownIt-Anchor\" href=\"#二进制指数退避算法\"></a> 二进制指数退避算法</h2>\n<p>冲突之后要等待，等？到底等多久？利用二进制指数退避算法就能知道。</p>\n<h2 id=\"冲突避免ca\"><a class=\"markdownIt-Anchor\" href=\"#冲突避免ca\"></a> 冲突避免（CA）</h2>\n<p>冲突避免通过预先协调和随机退避来尽量避免冲突的发生，而不是在冲突发生后再进行处理。</p>\n<h2 id=\"载波侦听多路访问冲突避免-csmaca-无线网络\"><a class=\"markdownIt-Anchor\" href=\"#载波侦听多路访问冲突避免-csmaca-无线网络\"></a> 载波侦听多路访问/冲突避免 CSMA/CA （无线网络）</h2>\n<p>是一种用于无线网络（如 Wi-Fi）的介质访问控制协议。</p>\n<h2 id=\"csmaca-与-csmacd-的区别\"><a class=\"markdownIt-Anchor\" href=\"#csmaca-与-csmacd-的区别\"></a> <strong>CSMA/CA 与 CSMA/CD 的区别</strong></h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特性</th>\n<th style=\"text-align:left\">CSMA/CA（冲突避免）</th>\n<th style=\"text-align:left\">CSMA/CD（冲突检测）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>适用网络</strong></td>\n<td style=\"text-align:left\">无线网络（如 Wi-Fi）</td>\n<td style=\"text-align:left\">有线网络（如以太网）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>冲突处理</strong></td>\n<td style=\"text-align:left\">通过 RTS/CTS 和退避避免冲突</td>\n<td style=\"text-align:left\">通过检测冲突并重发数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>隐藏终端问题</strong></td>\n<td style=\"text-align:left\">有效解决</td>\n<td style=\"text-align:left\">无法解决</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>开销</strong></td>\n<td style=\"text-align:left\">较高（RTS/CTS 和退避机制）</td>\n<td style=\"text-align:left\">较低</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>延迟</strong></td>\n<td style=\"text-align:left\">较高</td>\n<td style=\"text-align:left\">较低</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常见拓扑结构\"><a class=\"markdownIt-Anchor\" href=\"#常见拓扑结构\"></a> 常见拓扑结构</h2>\n<ol>\n<li>星型</li>\n<li>环型</li>\n<li>总线型</li>\n</ol>\n<h2 id=\"以太网\"><a class=\"markdownIt-Anchor\" href=\"#以太网\"></a> 以太网</h2>\n<p><strong>逻辑拓扑结构是总线型，物理拓扑是星型结构</strong></p>\n<p>以太网采用两项措施简化通信</p>\n<ol>\n<li>采用无连接工作方式</li>\n<li>使用曼彻斯特编码</li>\n</ol>\n<h2 id=\"mac地址\"><a class=\"markdownIt-Anchor\" href=\"#mac地址\"></a> MAC地址</h2>\n<p>设备身份证，绝对唯一的地址，MAC地址48位。</p>\n<h2 id=\"单播-多播-广播\"><a class=\"markdownIt-Anchor\" href=\"#单播-多播-广播\"></a> 单播、多播、广播</h2>\n<ol>\n<li>单播：一对一</li>\n<li>多播：一对多</li>\n<li>广播：一对所有</li>\n</ol>\n<h2 id=\"以太网的目的地址-源地址\"><a class=\"markdownIt-Anchor\" href=\"#以太网的目的地址-源地址\"></a> 以太网的目的地址、源地址</h2>\n<ol>\n<li>目的地址：标识帧的接收方。</li>\n<li>源地址：标识帧的发送方。</li>\n<li>类型：指示帧内数据的协议类型。（IPV4、IPV6、ARP）</li>\n</ol>\n<h2 id=\"vlan虚拟局域网\"><a class=\"markdownIt-Anchor\" href=\"#vlan虚拟局域网\"></a> VLAN虚拟局域网</h2>\n<p>VLAN（Virtual Local Area Network） 是一种将<strong>物理局域网</strong>划分为多个<strong>逻辑局域网</strong>的技术。通过VLAN，可以在同一物理网络设备（如交换机）上创建<strong>多个独立的广播域</strong>，从而实现网络的逻辑隔离和优化。</p>\n<h2 id=\"ppp-协议point-to-point-protocol\"><a class=\"markdownIt-Anchor\" href=\"#ppp-协议point-to-point-protocol\"></a> PPP 协议（Point-to-Point Protocol）</h2>\n<p><strong>PPP（点对点协议）</strong> 是一种<strong>数据链路层协议</strong>，用于在两个节点之间直接传输数据。它广泛应用于拨号连接、DSL、串行通信等场景，支持多种网络层协议（如 IP、IPX 等），并提供了身份验证、错误检测和压缩等功能。</p>\n<ol>\n<li>只保证无差错接收（CRC校验），是不可靠的服务</li>\n<li>只支持全双工的点对点链路</li>\n<li>PPP两端可以运行不同的网络层协议</li>\n</ol>\n<p>PPP无连接、不可靠、速度快</p>\n<h2 id=\"集线器\"><a class=\"markdownIt-Anchor\" href=\"#集线器\"></a> 集线器</h2>\n<p>广播传输：数据会被发送到所有端口，无论目标设备是哪一个。</p>\n<p>无智能过滤：集线器无法识别数据的目标地址，因此无法优化数据传输。</p>\n<p>冲突域：所有设备共享同一个冲突域，容易发生数据冲突，导致网络效率低下。</p>\n<p>带宽共享：所有端口共享总带宽（例如，10 Mbps 的集线器连接 5 台设备，每台设备平均只能使用 2 Mbps）。</p>\n<h2 id=\"网桥\"><a class=\"markdownIt-Anchor\" href=\"#网桥\"></a> 网桥</h2>\n<p>网桥可以识别帧转发帧，解决冲突的问题</p>\n<h2 id=\"集线器与网桥的主要区别\"><a class=\"markdownIt-Anchor\" href=\"#集线器与网桥的主要区别\"></a> 集线器与网桥的主要区别</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特性</th>\n<th style=\"text-align:left\">集线器（Hub）</th>\n<th style=\"text-align:left\">网桥（Bridge）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>工作层次</strong></td>\n<td style=\"text-align:left\">物理层（Layer 1）</td>\n<td style=\"text-align:left\">数据链路层（Layer 2）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>数据传输方式</strong></td>\n<td style=\"text-align:left\">广播到所有端口</td>\n<td style=\"text-align:left\">根据 MAC 地址转发到目标端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>冲突域</strong></td>\n<td style=\"text-align:left\">所有端口共享一个冲突域</td>\n<td style=\"text-align:left\">每个端口是一个独立的冲突域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>广播域</strong></td>\n<td style=\"text-align:left\">所有端口共享一个广播域</td>\n<td style=\"text-align:left\">所有端口共享一个广播域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>带宽管理</strong></td>\n<td style=\"text-align:left\">所有端口共享总带宽</td>\n<td style=\"text-align:left\">每个端口有独立带宽</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>智能过滤</strong></td>\n<td style=\"text-align:left\">无</td>\n<td style=\"text-align:left\">有（基于 MAC 地址）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>应用场景</strong></td>\n<td style=\"text-align:left\">小型网络或临时连接</td>\n<td style=\"text-align:left\">连接两个局域网或扩展网络</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>现代替代品</strong></td>\n<td style=\"text-align:left\">交换机</td>\n<td style=\"text-align:left\">交换机</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"交换机\"><a class=\"markdownIt-Anchor\" href=\"#交换机\"></a> 交换机</h2>\n<p>是多接口的网桥，是网桥的增强版，<strong>拥有自学习算法</strong></p>\n<p>记录各个端口的MAC地址（交换表），冷启动阶段通过泛洪，找到对应的MAC</p>\n<h2 id=\"集线器-交换机\"><a class=\"markdownIt-Anchor\" href=\"#集线器-交换机\"></a> 集线器、交换机</h2>\n<p>集线器不隔离冲突域，也不隔离广播域。</p>\n<p>交换机隔离冲突域，但不隔离广播域。</p>\n<h2 id=\"设备\"><a class=\"markdownIt-Anchor\" href=\"#设备\"></a> 设备</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特性</th>\n<th style=\"text-align:center\">能否隔离冲突域</th>\n<th style=\"text-align:center\">能否隔离广播域</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>集线器</strong></td>\n<td style=\"text-align:center\">不能</td>\n<td style=\"text-align:center\">不能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>中继器</strong></td>\n<td style=\"text-align:center\">不能</td>\n<td style=\"text-align:center\">不能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>交换机</strong></td>\n<td style=\"text-align:center\">能</td>\n<td style=\"text-align:center\">不能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>网桥</strong></td>\n<td style=\"text-align:center\">能</td>\n<td style=\"text-align:center\">不能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>路由器</strong></td>\n<td style=\"text-align:center\">能</td>\n<td style=\"text-align:center\">能</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"网络层功能\"><a class=\"markdownIt-Anchor\" href=\"#网络层功能\"></a> 网络层功能</h2>\n<ol>\n<li>路由选择：选择数据从源设备到目标设备的最佳路径。</li>\n<li>分组转发：根据路由表将数据包从输入接口转发到输出接口。</li>\n<li>逻辑寻址：为网络中的设备分配唯一的逻辑地址（如 IP 地址）。</li>\n<li>分段与重组：将大数据包分割成适合传输的小数据包，并在目标设备处重新组装。</li>\n<li>拥塞控制：防止网络因数据流量过大而出现拥塞。</li>\n<li>异构网络互联：连接不同类型的网络（如以太网、Wi-Fi、帧中继等）。</li>\n<li>错误处理与诊断：检测和处理网络中的错误。</li>\n<li>服务质量：为不同类型的数据流提供优先级和带宽保障。</li>\n<li>安全性：保护网络层数据的安全性和隐私性。</li>\n</ol>\n<h2 id=\"路由器功能\"><a class=\"markdownIt-Anchor\" href=\"#路由器功能\"></a> 路由器功能</h2>\n<ol>\n<li>路由选择</li>\n<li>分组转发</li>\n</ol>\n<h2 id=\"sdn软件定义网络\"><a class=\"markdownIt-Anchor\" href=\"#sdn软件定义网络\"></a> SDN软件定义网络</h2>\n<p><strong>软件定义网络（SDN，Software-Defined Networking）</strong> 是一种网络架构，旨在通过将网络控制平面与数据平面分离，提升网络的可编程性、灵活性和管理效率。SDN的核心思想是通过集中式的控制器来管理网络设备，简化配置和优化流量。</p>\n<p>SDN的优势</p>\n<ol>\n<li><strong>集中控制</strong>：\n<ul>\n<li>通过集中控制器管理网络，简化配置和故障排查。</li>\n</ul>\n</li>\n<li><strong>灵活性与可编程性</strong>：\n<ul>\n<li>网络行为可通过软件编程动态调整，适应不同需求。</li>\n</ul>\n</li>\n<li><strong>自动化与智能化</strong>：\n<ul>\n<li>支持自动化配置和优化，减少人工干预。</li>\n</ul>\n</li>\n<li><strong>网络虚拟化</strong>：\n<ul>\n<li>支持多租户网络虚拟化，提升资源利用率。</li>\n</ul>\n</li>\n<li><strong>快速创新</strong>：\n<ul>\n<li>新功能可通过软件快速部署，无需更换硬件。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"拥塞控制\"><a class=\"markdownIt-Anchor\" href=\"#拥塞控制\"></a> 拥塞控制</h2>\n<p>因为网络中出现过多的分组而引起的网络性能下降。</p>\n<p>控制拥塞的两种方法：</p>\n<ol>\n<li>开环控制：事发前</li>\n<li>闭环控制：事发中/后</li>\n</ol>\n<h2 id=\"ipv432位\"><a class=\"markdownIt-Anchor\" href=\"#ipv432位\"></a> IPv4（32位）</h2>\n<p>控制网络数据传送的网络协议。其主要由<strong>首部（20字节）<strong>加</strong>数据部</strong></p>\n<p>网络号+主机号</p>\n<p>全0是本机地址</p>\n<p>全1是广播地址</p>\n<h2 id=\"ipv6128位\"><a class=\"markdownIt-Anchor\" href=\"#ipv6128位\"></a> IPv6（128位）</h2>\n<h2 id=\"源地址字段-目的地址字段\"><a class=\"markdownIt-Anchor\" href=\"#源地址字段-目的地址字段\"></a> 源地址字段、目的地址字段</h2>\n<h2 id=\"mtu最大传送单元\"><a class=\"markdownIt-Anchor\" href=\"#mtu最大传送单元\"></a> MTU（最大传送单元）</h2>\n<h2 id=\"osi-五层模型-vs-osi-七层模型\"><a class=\"markdownIt-Anchor\" href=\"#osi-五层模型-vs-osi-七层模型\"></a> OSI 五层模型 vs OSI 七层模型</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>OSI 五层模型</strong></th>\n<th style=\"text-align:left\"><strong>OSI 七层模型</strong></th>\n<th style=\"text-align:left\"><strong>功能描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">应用层</td>\n<td style=\"text-align:left\">应用层（Application）</td>\n<td style=\"text-align:left\">提供应用程序接口和服务（如 HTTP、FTP、DNS 等）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">表示层（Presentation）</td>\n<td style=\"text-align:left\">数据格式化、加密和解密（如 SSL/TLS）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">会话层（Session）</td>\n<td style=\"text-align:left\">建立、管理和终止会话（如 RPC、NetBIOS）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">传输层</td>\n<td style=\"text-align:left\">传输层（Transport）</td>\n<td style=\"text-align:left\">提供端到端的可靠数据传输（如 TCP、UDP）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">网络层</td>\n<td style=\"text-align:left\">网络层（Network）</td>\n<td style=\"text-align:left\">负责逻辑地址寻址和路由选择（如 IP、ICMP）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">数据链路层</td>\n<td style=\"text-align:left\">数据链路层（Data Link）</td>\n<td style=\"text-align:left\">提供节点到节点的可靠数据传输（如 Ethernet、PPP）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">物理层</td>\n<td style=\"text-align:left\">物理层（Physical）</td>\n<td style=\"text-align:left\">传输原始的比特流（如网线、光纤、Wi-Fi）。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"nat网络地址转换\"><a class=\"markdownIt-Anchor\" href=\"#nat网络地址转换\"></a> NAT网络地址转换</h2>\n<p><strong>NAT（Network Address Translation，网络地址转换）</strong> 是一种用于将私有网络中的 IP 地址映射到公共 IP 地址的技术。<strong>它主要用于解决 IPv4 地址不足的问题</strong>，并提高网络的安全性。</p>\n<h2 id=\"子网掩码\"><a class=\"markdownIt-Anchor\" href=\"#子网掩码\"></a> 子网掩码</h2>\n<p><strong>子网掩码（Subnet Mask）</strong> 是用于划分 IP 地址的网络部分和主机部分的关键工具。它的主要作用是帮助网络设备确定一个 IP 地址属于哪个子网，从而实现高效的路由和网络管理。</p>\n<ol>\n<li>划分网络和主机</li>\n<li>支持子网划分</li>\n<li>路由选择</li>\n<li>广播域控制</li>\n</ol>\n<h2 id=\"ip-地址的分类\"><a class=\"markdownIt-Anchor\" href=\"#ip-地址的分类\"></a> IP 地址的分类</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>类别</strong></th>\n<th style=\"text-align:left\"><strong>前缀</strong></th>\n<th style=\"text-align:left\"><strong>地址范围</strong></th>\n<th style=\"text-align:left\"><strong>默认子网掩码</strong></th>\n<th style=\"text-align:left\"><strong>用途</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">A 类</td>\n<td style=\"text-align:left\"><code>0</code></td>\n<td style=\"text-align:left\"><code>1.0.0.0</code> 到 <code>126.0.0.0</code></td>\n<td style=\"text-align:left\"><code>255.0.0.0</code></td>\n<td style=\"text-align:left\">大型网络</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">B 类</td>\n<td style=\"text-align:left\"><code>10</code></td>\n<td style=\"text-align:left\"><code>128.0.0.0</code> 到 <code>191.255.0.0</code></td>\n<td style=\"text-align:left\"><code>255.255.0.0</code></td>\n<td style=\"text-align:left\">中型网络</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">C 类</td>\n<td style=\"text-align:left\"><code>110</code></td>\n<td style=\"text-align:left\"><code>192.0.0.0</code> 到 <code>223.255.255.0</code></td>\n<td style=\"text-align:left\"><code>255.255.255.0</code></td>\n<td style=\"text-align:left\">小型网络</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">D 类</td>\n<td style=\"text-align:left\"><code>1110</code></td>\n<td style=\"text-align:left\"><code>224.0.0.0</code> 到 <code>239.255.255.255</code></td>\n<td style=\"text-align:left\">无</td>\n<td style=\"text-align:left\">多播（Multicast）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">E 类</td>\n<td style=\"text-align:left\"><code>1111</code></td>\n<td style=\"text-align:left\"><code>240.0.0.0</code> 到 <code>255.255.255.255</code></td>\n<td style=\"text-align:left\">无</td>\n<td style=\"text-align:left\">保留（实验用途）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"路由聚合\"><a class=\"markdownIt-Anchor\" href=\"#路由聚合\"></a> 路由聚合</h2>\n<p>将好几个路由器逻辑上视为一个，是地址聚合。</p>\n<h2 id=\"最长前缀匹配\"><a class=\"markdownIt-Anchor\" href=\"#最长前缀匹配\"></a> 最长前缀匹配</h2>\n<h2 id=\"arp地址解析协议\"><a class=\"markdownIt-Anchor\" href=\"#arp地址解析协议\"></a> ARP地址解析协议</h2>\n<h2 id=\"dhcp动态主机配置协议\"><a class=\"markdownIt-Anchor\" href=\"#dhcp动态主机配置协议\"></a> DHCP动态主机配置协议</h2>\n<p>动态分配IP地址，允许一台主机无需手动配置即可获取到IP地址，基于UDP。</p>\n<h2 id=\"icmp网际控制报文协议\"><a class=\"markdownIt-Anchor\" href=\"#icmp网际控制报文协议\"></a> ICMP网际控制报文协议</h2>\n<p>ICMP是传输了一个控制报文，专门用来报告报告错误和异常的情况</p>\n<h2 id=\"rip的优势和劣势\"><a class=\"markdownIt-Anchor\" href=\"#rip的优势和劣势\"></a> RIP的优势和劣势</h2>\n<p>好消息传得快、坏消息传得慢</p>\n",
            "tags": [
                "计算机网络",
                "计算机网络"
            ]
        },
        {
            "id": "https://735690757.github.io/experience/MD5CalculationTimePractice/",
            "url": "https://735690757.github.io/experience/MD5CalculationTimePractice/",
            "title": "MD5计算时间",
            "date_published": "2025-01-07T16:11:00.000Z",
            "content_html": "<h1 id=\"md5计算时间的实践\"><a class=\"markdownIt-Anchor\" href=\"#md5计算时间的实践\"></a> MD5计算时间的实践</h1>\n<h2 id=\"引言\"><a class=\"markdownIt-Anchor\" href=\"#引言\"></a> 引言</h2>\n<p>最近在做一个项目，里面用到了MD5算法来生成文件名，并且可以对相同文件进行合并存储，不禁让我想到了一个问题——MD5的计算很耗时吗还是MD5是一个轻量级的算法，在网上翻阅了一些资料，得到了结果，确实MD5的计算是很轻量的。</p>\n<p>但是，他到底需要多长时间呢？我直接开始实践一下。</p>\n<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\"></a> 配置</h2>\n<p>机器采用：AMD Ryzen 7 5800H处理器 + 32GB 内存 频率为 3200 使用约 50%</p>\n<h2 id=\"实践\"><a class=\"markdownIt-Anchor\" href=\"#实践\"></a> 实践</h2>\n<p>先对小文件进行测试，现选用文件大小为2.83 MB的图片，在anaconda环境下，对比不同chunk_size下的计算时间。</p>\n<pre class=\"highlight\"><code class=\"python\"><span class=\"hljs-keyword\">import</span> hashlib\n<span class=\"hljs-keyword\">import</span> time\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">file_to_md5</span>(<span class=\"hljs-params\">file_path, chunk_size=<span class=\"hljs-number\">8192</span></span>):\n    md5 = hashlib.md5()\n    <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(file_path, <span class=\"hljs-string\">&#x27;rb&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:\n        <span class=\"hljs-keyword\">while</span> chunk := f.read(chunk_size):\n            md5.update(chunk)\n    <span class=\"hljs-keyword\">return</span> md5.hexdigest()\n\n\nt = time.perf_counter()\n\nfile_to_md5(<span class=\"hljs-string\">&#x27;D:\\\\ZzMu\\\\Aping\\\\bz\\\\zb.png&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&#x27;<span class=\"hljs-subst\">&#123;time.perf_counter() - t:<span class=\"hljs-number\">.8</span>f&#125;</span>s&#x27;</span>)\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1024</td>\n<td style=\"text-align:center\">0.00551090s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2048</td>\n<td style=\"text-align:center\">0.00501470s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4096</td>\n<td style=\"text-align:center\">0.00491630s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8192</td>\n<td style=\"text-align:center\">0.00470980s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">16384</td>\n<td style=\"text-align:center\">0.00436570s</td>\n</tr>\n</tbody>\n</table>\n<p>随着chunk_size的增大，计算时间不断缩短，不过确实微乎其微，0.00几的时间无法感知，那么大一点的文件能放大影响吗？</p>\n<p>下面对文件大小为957 MB的4分44秒的5k视频进行计算。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1024</td>\n<td style=\"text-align:center\">1.68504020s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2048</td>\n<td style=\"text-align:center\">1.61570920s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4096</td>\n<td style=\"text-align:center\">1.57428070s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8192</td>\n<td style=\"text-align:center\">1.55151410s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">16384</td>\n<td style=\"text-align:center\">1.35576710s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">32768</td>\n<td style=\"text-align:center\">1.28117580s</td>\n</tr>\n</tbody>\n</table>\n<p>大文件对chunk_size的感知更为明显，变现为0.几的波动。</p>\n<p>下面试试更大的文件，文件大小为9.58 GB的Linux安装文件CentOS-7-x86_64-Everything-2207-02.iso进行计算。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1024</td>\n<td style=\"text-align:center\">17.36447650s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2048</td>\n<td style=\"text-align:center\">17.03117640s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4096</td>\n<td style=\"text-align:center\">16.44976660s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8192</td>\n<td style=\"text-align:center\">16.01030290s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">16384</td>\n<td style=\"text-align:center\">14.48009140s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">32768</td>\n<td style=\"text-align:center\">13.57228980s</td>\n</tr>\n</tbody>\n</table>\n<p>得出结论，越大的文件对chunk_size越敏感。到此为止，我仍然对这个执行时间有疑问，不同的变成语言对计算时间有什么影响呢，以上是使用Python语言完成的测试，接下来试试Java的语言。</p>\n<p>原生：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">import</span> java.io.FileInputStream;\n<span class=\"hljs-keyword\">import</span> java.io.IOException;\n<span class=\"hljs-keyword\">import</span> java.io.InputStream;\n<span class=\"hljs-keyword\">import</span> java.security.MessageDigest;\n<span class=\"hljs-keyword\">import</span> java.security.NoSuchAlgorithmException;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Main</span> &#123;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">BUFFER_SIZE</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">32768</span>;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">fileToMD5</span><span class=\"hljs-params\">(String filePath)</span> <span class=\"hljs-keyword\">throws</span> IOException, NoSuchAlgorithmException &#123;\n        <span class=\"hljs-keyword\">try</span> (<span class=\"hljs-type\">InputStream</span> <span class=\"hljs-variable\">is</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(filePath)) &#123;\n            <span class=\"hljs-type\">MessageDigest</span> <span class=\"hljs-variable\">md5Digest</span> <span class=\"hljs-operator\">=</span> MessageDigest.getInstance(<span class=\"hljs-string\">&quot;MD5&quot;</span>);\n            <span class=\"hljs-type\">byte</span>[] buffer = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">byte</span>[BUFFER_SIZE];\n            <span class=\"hljs-type\">int</span> bytesRead;\n            <span class=\"hljs-keyword\">while</span> ((bytesRead = is.read(buffer)) != -<span class=\"hljs-number\">1</span>) &#123;\n                md5Digest.update(buffer, <span class=\"hljs-number\">0</span>, bytesRead);\n            &#125;\n            <span class=\"hljs-keyword\">return</span> bytesToHex(md5Digest.digest());\n        &#125;\n    &#125;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">bytesToHex</span><span class=\"hljs-params\">(<span class=\"hljs-type\">byte</span>[] bytes)</span> &#123;\n        <span class=\"hljs-type\">StringBuilder</span> <span class=\"hljs-variable\">hexString</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuilder</span>();\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">byte</span> b : bytes) &#123;\n            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">hex</span> <span class=\"hljs-operator\">=</span> Integer.toHexString(<span class=\"hljs-number\">0xff</span> &amp; b);\n            <span class=\"hljs-keyword\">if</span> (hex.length() == <span class=\"hljs-number\">1</span>) hexString.append(<span class=\"hljs-string\">&#x27;0&#x27;</span>);\n            hexString.append(hex);\n        &#125;\n        <span class=\"hljs-keyword\">return</span> hexString.toString();\n    &#125;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> <span class=\"hljs-keyword\">throws</span> IOException, NoSuchAlgorithmException &#123;\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">startTime</span> <span class=\"hljs-operator\">=</span> System.nanoTime();\n        fileToMD5(<span class=\"hljs-string\">&quot;D:\\\\ZzMu\\\\Aping\\\\bz\\\\zb.png&quot;</span>);\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">endTime</span> <span class=\"hljs-operator\">=</span> System.nanoTime();\n        System.out.printf(<span class=\"hljs-string\">&quot;Time taken: %.8fs%n&quot;</span>, (endTime - startTime) / <span class=\"hljs-number\">1e9</span>);\n    &#125;\n&#125;\n</code></pre>\n<p>使用java 8：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">8192</td>\n<td style=\"text-align:center\">22.89824750</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">16384</td>\n<td style=\"text-align:center\">21.72088020</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">32768</td>\n<td style=\"text-align:center\">20.98676390</td>\n</tr>\n</tbody>\n</table>\n<p>没想到啊，java表现的更为糟糕，是不是和java版本有关系呢？</p>\n<p>使用java 17：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1024</td>\n<td style=\"text-align:center\">27.40612860</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8192</td>\n<td style=\"text-align:center\">15.47918140</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">16384</td>\n<td style=\"text-align:center\">14.53450360</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">32768</td>\n<td style=\"text-align:center\">13.85291620</td>\n</tr>\n</tbody>\n</table>\n<p>确实java 17 的表现要比java 8 的表现好。不过还是弱于Python？难道是我写的代码太烂了？</p>\n<p>又引入了DigestUtils工具类，DigestUtils是apache. commons包下的的MD5计算工具，默认chunk_size大小为1024。</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">import</span> org.apache.commons.codec.digest.DigestUtils;\n<span class=\"hljs-keyword\">import</span> org.junit.jupiter.api.Test;\n\n<span class=\"hljs-keyword\">import</span> java.io.FileInputStream;\n<span class=\"hljs-keyword\">import</span> java.io.IOException;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MD5</span> &#123;\n    <span class=\"hljs-meta\">@Test</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> IOException &#123;\n        <span class=\"hljs-type\">FileInputStream</span> <span class=\"hljs-variable\">inputStream</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(<span class=\"hljs-string\">&quot;E:\\\\LinuxIso\\\\CentOS-7-x86_64-Everything-2207-02.iso&quot;</span>);\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">startTime</span> <span class=\"hljs-operator\">=</span> System.nanoTime();\n        DigestUtils.md5Hex(inputStream);\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">endTime</span> <span class=\"hljs-operator\">=</span> System.nanoTime();\n        System.out.printf(<span class=\"hljs-string\">&quot;Time taken: %.8fs%n&quot;</span>, (endTime - startTime) / <span class=\"hljs-number\">1e9</span>);\n    &#125;\n&#125;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1024</td>\n<td style=\"text-align:center\">27.50305870</td>\n</tr>\n</tbody>\n</table>\n<p>彼此彼此吧，哈哈哈哈哈哈。</p>\n<p>下面又引入了SecureUtil，该工具是HuTool包下一个计算MD5的工具，默认chunk_size为1024。</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">import</span> cn.hutool.crypto.SecureUtil;\n<span class=\"hljs-keyword\">import</span> org.junit.jupiter.api.Test;\n\n<span class=\"hljs-keyword\">import</span> java.io.FileInputStream;\n<span class=\"hljs-keyword\">import</span> java.io.IOException;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MD5</span> &#123;\n    <span class=\"hljs-meta\">@Test</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> IOException &#123;\n        <span class=\"hljs-type\">FileInputStream</span> <span class=\"hljs-variable\">inputStream</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(<span class=\"hljs-string\">&quot;E:\\\\LinuxIso\\\\CentOS-7-x86_64-Everything-2207-02.iso&quot;</span>);\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">startTime</span> <span class=\"hljs-operator\">=</span> System.nanoTime();\n        SecureUtil.md5(inputStream);\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">endTime</span> <span class=\"hljs-operator\">=</span> System.nanoTime();\n        System.out.printf(<span class=\"hljs-string\">&quot;Time taken: %.8fs%n&quot;</span>, (endTime - startTime) / <span class=\"hljs-number\">1e9</span>);\n    &#125;\n&#125;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chunk_size</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1024</td>\n<td style=\"text-align:center\">15.42640900</td>\n</tr>\n</tbody>\n</table>\n<p>HuTool的SecureUtil确实更高效，应该是做了一些特殊优化，源码中显示的是MD5没有使用BC库，完全依赖于jdk库。</p>\n",
            "tags": [
                "开发经验",
                "MD5"
            ]
        },
        {
            "id": "https://735690757.github.io/experience/CollaborativeFiltering/",
            "url": "https://735690757.github.io/experience/CollaborativeFiltering/",
            "title": "基于用户的协同过滤算法",
            "date_published": "2024-12-29T16:11:00.000Z",
            "content_html": "<h1 id=\"基于用户的协同过滤算法\"><a class=\"markdownIt-Anchor\" href=\"#基于用户的协同过滤算法\"></a> 基于用户的协同过滤算法</h1>\n<p>本篇文档将会用通俗易懂的方式带你来了解并实现基于用户的协同过滤算法，不再基于特定开源库，使用原生代码完成协同过滤的构建，实际上，基于用户的协同过滤很简单，只需要弄懂那几个公式是怎么用的就好了，真正的难点是公式的提出与证明，不过呢今天我不想讲相关的证明了。</p>\n<p>本篇文章主要是带你打开协同过滤的大门，我只是想告诉你，作为人的你我具有不断认识的能力，且在认识中不断消除谬误，并无限趋近于真理，我们有能力也必将认识这个世界，而协同过滤正是其中之一，究其本质并不复杂。</p>\n<p>那么请坐好，协同过滤的列车要发车啦！</p>\n<h1 id=\"算法介绍\"><a class=\"markdownIt-Anchor\" href=\"#算法介绍\"></a> 算法介绍</h1>\n<p>基于用户的协同过滤，实际上就是找与目标用户最为相似的一个或多个用户，这里的目标用户实际上就是我们要为其进行信息推送的用户。假如瑞瑞喜欢A和B，鸭鸭喜欢A、B和C，他们都对喜欢的商品给予较高的评价，嘎嘎非常讨厌A和B，但是钟爱D。</p>\n<p>那么我们可以看到似乎鸭鸭的A和B与瑞瑞的A和B是一样的，但是鸭鸭买过C而瑞瑞没有买过C，瑞瑞和鸭鸭是高度相似的，那么我们就可以给瑞瑞推荐鸭鸭喜欢的C，或许瑞瑞也喜欢呢！</p>\n<p>而对于嘎嘎来说瑞瑞喜欢的A和B正是嘎嘎他所讨厌的，而嘎嘎对D情有独钟，我们可以了解到，瑞瑞或许是讨厌嘎嘎所喜欢的，那么嘎嘎和瑞瑞是低相似的，嘎嘎喜欢的D也许不应该给瑞瑞推荐！</p>\n<p><img data-src=\"../../images/CollaborativeFiltering/p1.png\" alt=\"协同过滤原理\" /></p>\n<h1 id=\"计算用户间的相似度\"><a class=\"markdownIt-Anchor\" href=\"#计算用户间的相似度\"></a> 计算用户间的相似度</h1>\n<h2 id=\"jaccard相似系数\"><a class=\"markdownIt-Anchor\" href=\"#jaccard相似系数\"></a> Jaccard相似系数</h2>\n<p><strong>Jaccard相似系数</strong>主要是衡量两个集合的相似度<strong>J(A,B)是它的数学表达</strong></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mo fence=\"true\">∣</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo fence=\"true\">∣</mo></mrow><mrow><mo fence=\"true\">∣</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo fence=\"true\">∣</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\nJ(A,B)=\\frac{\\left | A\\cap B \\right | }{\\left | A\\cup  B \\right |}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.5149999999999999em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0150000000000001em;\"><span style=\"top:-3.015em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"minner mtight\"><span class=\"mopen mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">∣</span></span><span class=\"mord mathnormal mtight\">A</span><span class=\"mbin mtight\">∪</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">∣</span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"minner mtight\"><span class=\"mopen mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">∣</span></span><span class=\"mord mathnormal mtight\">A</span><span class=\"mbin mtight\">∩</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose mtight delimcenter\" style=\"top:0em;\"><span class=\"mtight\">∣</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5149999999999999em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>Jaccard相似系数特别适用于处理二值数据（即只有两个值：0或1）。例如，在文本处理中，可以通过是否包含某个词来表示文档中的词汇出现与否，这种情况下Jaccard相似系数非常有效。然而 Jaccard相似度不考虑元素的权重或频率。如果两个集合中有的元素出现频率较高，而有的频率较低，Jaccard相似度会将这些元素视为等价，不适用于需要考虑元素重要性的场景。</p>\n<h2 id=\"余弦相似度\"><a class=\"markdownIt-Anchor\" href=\"#余弦相似度\"></a> 余弦相似度</h2>\n<p><strong>余弦相似度</strong>是n维空间中两个n维向量之间角度的余弦。它等于两个向量的点积（向量积）除以两个向量长度（或大小）的乘积。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>A</mi><mo separator=\"true\">⋅</mo><mi>B</mi></mrow><mrow><mrow><mo fence=\"true\">∣</mo><mrow><mo fence=\"true\">∣</mo><mi>A</mi><mo fence=\"true\">∣</mo></mrow><mo fence=\"true\">∣</mo></mrow><mo>×</mo><mrow><mo fence=\"true\">∣</mo><mrow><mo fence=\"true\">∣</mo><mi>B</mi><mo fence=\"true\">∣</mo></mrow><mo fence=\"true\">∣</mo></mrow></mrow></mfrac><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo>×</mo><msub><mi>B</mi><mrow></mrow></msub><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><mrow><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>A</mi><mi>i</mi><mn>2</mn></msubsup></mrow></msqrt><mo>×</mo><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>B</mi><mi>i</mi><mn>2</mn></msubsup></mrow></msqrt></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">sim(A,B)=\\frac{A·B}{\\left | \\left | A \\right |  \\right | \\times \\left | \\left | B \\right |  \\right | } =\\frac{\\sum_{i=1}^{n}(A_{i}\\times B_{}i)}{\\sqrt{\\sum_{i=1}^{n}A_{i}^{2} } \\times \\sqrt{\\sum_{i=1}^{n}B_{i}^{2} }} \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.29633em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.624002em;vertical-align:-1.13em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.494002em;\"><span style=\"top:-2.1727090000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.937291em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7959080000000001em;\"><span style=\"top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.0448000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.897291em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.302709em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.937291em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7959080000000001em;\"><span style=\"top:-2.4231360000000004em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.0448000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.897291em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.302709em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6897100000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.15em;\"><span style=\"top:-1.85em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">sim(A,B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span>是有取值范围的，在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[-1,1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>之间，1是完全相似，-1是完全不相似，余弦相似度的计算公式简单，通常只涉及向量的点积和模长的运算，因此在实际应用中计算速度较快。</p>\n<h2 id=\"皮尔逊相关系数\"><a class=\"markdownIt-Anchor\" href=\"#皮尔逊相关系数\"></a> 皮尔逊相关系数</h2>\n<p><strong>皮尔逊相关系数</strong>，也称为<strong>皮尔逊积矩相关系数</strong>，是衡量两个变量之间线性关系的强度和方向的统计量。其值范围从-1到+1，广泛应用于统计学、数据分析、机器学习等领域，特别是在衡量变量之间的相关性时。</p>\n<p><strong>标准差：</strong></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><msqrt><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></mfrac></msqrt></mrow><annotation encoding=\"application/x-tex\">S=\\sqrt{\\frac{\\sum_{i=1}^{n}(X_{i}-\\overline{X})^2}{N-1}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.04em;vertical-align:-1.00427em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.03573em;\"><span class=\"svg-align\" style=\"top:-5em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5730400000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6897100000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.99573em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:3.08em;\"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793\nc339.3,-1799.3,509.3,-2700,510,-2702 l0 -0\nc3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.00427em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>是数据总量，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{X}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833300000000001em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>是平均值。</p>\n<p><strong>协方差：</strong></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>Y</mi><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"false\">)</mo></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Cov(X,Y)=\\frac{\\sum_{i=1}^{n}(X_{i}-\\overline{X})(Y_{i}-\\overline{Y}) }{N-1}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3423700000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5730400000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6897100000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><strong>皮尔逊相关系数</strong></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>S</mi><mi>x</mi></msub><msub><mi>S</mi><mi>y</mi></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\rho =\\frac{Cov(X,Y)}{S_{x}S_{y}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.399108em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>是X的标准差。同样他是有取值范围的，在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[-1,1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>之间，1是完全相似，-1是完全不相似</p>\n<p>皮尔逊相关系数的计算公式相对简单，容易理解，且其值的意义非常直观，可以清楚地表示变量之间的线性关系强度和方向。 它不仅衡量了两个变量之间的协方差，还考虑了变量的标准差，因此能够归一化协方差，使得相关系数的值独立于变量的尺度。</p>\n<h1 id=\"应用示例\"><a class=\"markdownIt-Anchor\" href=\"#应用示例\"></a> 应用示例</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">用户-商品评分表</th>\n<th style=\"text-align:center\">用户1001</th>\n<th style=\"text-align:center\">用户1002</th>\n<th style=\"text-align:center\">用户1003</th>\n<th style=\"text-align:center\">用户1004</th>\n<th style=\"text-align:center\">用户1005</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">商品1</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">商品2</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">商品3</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">商品4</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n</tbody>\n</table>\n<p>这个时候我们要找与用户1003最相似的用户，可见1003给出了（5，4，5，4）的评分向量，这与用户1001的（5，4，5，4）评分向量完全一致，用户1003与用户1001高度相似，我们还可以看到用户1005给出了（5，4，5，3）的评分向量，这也与用户1003高度相似。</p>\n<p>这些都是显然的，但是计算机怎么能知道呢？本篇文章采用<strong>皮尔逊相关系数</strong>完成协同过滤。</p>\n<h2 id=\"计算标准差\"><a class=\"markdownIt-Anchor\" href=\"#计算标准差\"></a> 计算标准差</h2>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">standardDeviationCalculations</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] ratings)</span> &#123;\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">std</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;        <span class=\"hljs-comment\">//标准差</span>\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">avarage</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;    <span class=\"hljs-comment\">//平均值</span>\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">sum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;           <span class=\"hljs-comment\">//评分和</span>\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">varianceUP</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//方差分子</span>\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">variance</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//方差</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; ratings.length; i++) &#123;\n        sum += ratings[i];\n    &#125;\n    avarage = (<span class=\"hljs-type\">double</span>) sum / ratings.length;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">4</span>; i++) &#123; <span class=\"hljs-comment\">//方差分子</span>\n        varianceUP += Math.pow(ratings[i] - avarage, <span class=\"hljs-number\">2</span>);\n    &#125;\n    variance = varianceUP / (ratings.length - <span class=\"hljs-number\">1</span>);\n    std = Math.sqrt(variance);\n    <span class=\"hljs-keyword\">return</span> std;\n&#125;\n</code></pre>\n<h2 id=\"计算协方差\"><a class=\"markdownIt-Anchor\" href=\"#计算协方差\"></a> 计算协方差</h2>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">covarianceCalculation</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] X, <span class=\"hljs-type\">int</span>[] Y)</span> &#123;\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">covariance</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;       <span class=\"hljs-comment\">// 协方差</span>\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">avarageX</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;         <span class=\"hljs-comment\">// 平均值X</span>\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">avarageY</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;         <span class=\"hljs-comment\">// 平均值Y</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; X.length; i++) &#123;\n        avarageX += X[i];\n    &#125;\n    avarageX = avarageX / X.length;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; Y.length; i++) &#123;\n        avarageY += Y[i];\n    &#125;\n    avarageY = avarageY / Y.length;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; X.length; i++) &#123;\n        covariance += (X[i] - avarageX) * (Y[i] - avarageY);\n    &#125;\n    covariance = covariance / (X.length - <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">return</span> covariance;\n&#125;\n</code></pre>\n<h2 id=\"计算皮尔逊相关系数\"><a class=\"markdownIt-Anchor\" href=\"#计算皮尔逊相关系数\"></a> 计算皮尔逊相关系数</h2>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">pearsonCorrelationCoefficient</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> covarianceXY, <span class=\"hljs-type\">double</span> stdX, <span class=\"hljs-type\">double</span> stdY)</span> &#123;\n    <span class=\"hljs-keyword\">return</span> covarianceXY / (stdX * stdY);\n&#125;\n</code></pre>\n<h2 id=\"调用\"><a class=\"markdownIt-Anchor\" href=\"#调用\"></a> 调用</h2>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SuiBianTest</span> &#123;\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">standardDeviationCalculations</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] ratings)</span> &#123;\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">std</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;        <span class=\"hljs-comment\">//标准差</span>\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">avarage</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;    <span class=\"hljs-comment\">//平均值</span>\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">sum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;           <span class=\"hljs-comment\">//评分和</span>\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">varianceUP</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//方差分子</span>\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">variance</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//方差</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; ratings.length; i++) &#123;\n            sum += ratings[i];\n        &#125;\n        avarage = (<span class=\"hljs-type\">double</span>) sum / ratings.length;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">4</span>; i++) &#123; <span class=\"hljs-comment\">//方差分子</span>\n            varianceUP += Math.pow(ratings[i] - avarage, <span class=\"hljs-number\">2</span>);\n        &#125;\n        variance = varianceUP / (ratings.length - <span class=\"hljs-number\">1</span>);\n        std = Math.sqrt(variance);\n        <span class=\"hljs-keyword\">return</span> std;\n    &#125;\n\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">covarianceCalculation</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] X, <span class=\"hljs-type\">int</span>[] Y)</span> &#123;\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">covariance</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;       <span class=\"hljs-comment\">// 协方差</span>\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">avarageX</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;         <span class=\"hljs-comment\">// 平均值X</span>\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">avarageY</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;         <span class=\"hljs-comment\">// 平均值Y</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; X.length; i++) &#123;\n            avarageX += X[i];\n        &#125;\n        avarageX = avarageX / X.length;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; Y.length; i++) &#123;\n            avarageY += Y[i];\n        &#125;\n        avarageY = avarageY / Y.length;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; X.length; i++) &#123;\n            covariance += (X[i] - avarageX) * (Y[i] - avarageY);\n        &#125;\n        covariance = covariance / (X.length - <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">return</span> covariance;\n    &#125;\n\n    <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">pearsonCorrelationCoefficient</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> covarianceXY, <span class=\"hljs-type\">double</span> stdX, <span class=\"hljs-type\">double</span> stdY)</span> &#123;\n        <span class=\"hljs-keyword\">return</span> covarianceXY / (stdX * stdY);\n    &#125;\n\n    <span class=\"hljs-meta\">@Test</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">testCollaborativeFiltering</span><span class=\"hljs-params\">()</span> &#123;\n        <span class=\"hljs-type\">int</span>[][] ratings_1_5 = &#123;\n                &#123;<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>&#125;,       <span class=\"hljs-comment\">//1001对商品1、2、3、4的评分</span>\n                &#123;<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>&#125;,       <span class=\"hljs-comment\">//1002对商品1、2、3、4的评分</span>\n                &#123;<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>&#125;,       <span class=\"hljs-comment\">//1003对商品1、2、3、4的评分</span>\n                &#123;<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>&#125;,       <span class=\"hljs-comment\">//1004对商品1、2、3、4的评分</span>\n                &#123;<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">3</span>&#125;,       <span class=\"hljs-comment\">//1005对商品1、2、3、4的评分</span>\n        &#125;;\n        <span class=\"hljs-comment\">// ---------------------计算方差-----------------</span>\n        ArrayList&lt;Double&gt; stdVector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();    <span class=\"hljs-comment\">// 方差向量</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; ratings_1_5.length; i++) &#123;\n            stdVector.add(standardDeviationCalculations(ratings_1_5[i]));\n        &#125;\n        System.out.println(<span class=\"hljs-string\">&quot;方差向量：&quot;</span> + stdVector);\n        <span class=\"hljs-comment\">// ----------------协方差计算cov(X,Y)------------</span>\n        ArrayList&lt;Double&gt; covarianceVector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;(); <span class=\"hljs-comment\">// 协方差向量</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; ratings_1_5.length; i++) &#123;\n            covarianceVector.add(covarianceCalculation(ratings_1_5[<span class=\"hljs-number\">2</span>], ratings_1_5[i]));\n        &#125;\n        System.out.println(<span class=\"hljs-string\">&quot;协方差向量：&quot;</span> + covarianceVector);\n        <span class=\"hljs-comment\">// --------------皮尔逊相关系数----------------</span>\n        ArrayList&lt;Double&gt; pearsonVector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();    <span class=\"hljs-comment\">// 皮尔逊相关系数向量</span>\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; ratings_1_5.length; i++) &#123;\n            pearsonVector.add(pearsonCorrelationCoefficient(covarianceVector.get(i), stdVector.get(<span class=\"hljs-number\">2</span>), stdVector.get(i)));\n        &#125;\n        System.out.println(<span class=\"hljs-string\">&quot;皮尔逊相关系数向量：&quot;</span> + pearsonVector);\n        System.out.println(<span class=\"hljs-string\">&quot;----------------------------&quot;</span>);\n        HashMap&lt;String, Double&gt; map = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;();\n        map.put(<span class=\"hljs-string\">&quot;1001&quot;</span>, pearsonVector.get(<span class=\"hljs-number\">0</span>));\n        map.put(<span class=\"hljs-string\">&quot;1002&quot;</span>, pearsonVector.get(<span class=\"hljs-number\">1</span>));\n<span class=\"hljs-comment\">//        map.put(&quot;1003&quot;, pearsonVector.get(2));</span>\n        map.put(<span class=\"hljs-string\">&quot;1004&quot;</span>, pearsonVector.get(<span class=\"hljs-number\">3</span>));\n        map.put(<span class=\"hljs-string\">&quot;1005&quot;</span>, pearsonVector.get(<span class=\"hljs-number\">4</span>));\n        <span class=\"hljs-comment\">// 使用Stream API获取最大的两个值及它们对应的键</span>\n        List&lt;Map.Entry&lt;String, Double&gt;&gt; topTwoEntries = map.entrySet()\n                .stream()\n                .sorted(Map.Entry.&lt;String, Double&gt;comparingByValue().reversed()) <span class=\"hljs-comment\">// 按照value降序排序</span>\n                .limit(<span class=\"hljs-number\">2</span>) <span class=\"hljs-comment\">// 只取前两项</span>\n                .toList();\n\n        <span class=\"hljs-comment\">// 输出结果</span>\n        topTwoEntries.forEach(entry -&gt;\n                System.out.println(<span class=\"hljs-string\">&quot;最大皮尔逊相关系数之一对应的键：&quot;</span> + entry.getKey() + <span class=\"hljs-string\">&quot;，值为：&quot;</span> + entry.getValue())\n        );\n\n        <span class=\"hljs-keyword\">if</span> (topTwoEntries.size() &lt; <span class=\"hljs-number\">2</span>) &#123;\n            System.out.println(<span class=\"hljs-string\">&quot;注意：Map中的元素不足两个&quot;</span>);\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\"></a> 输出</h2>\n<p><img data-src=\"../../images/CollaborativeFiltering/p2.png\" alt=\"输出\" /></p>\n<h2 id=\"后续\"><a class=\"markdownIt-Anchor\" href=\"#后续\"></a> 后续</h2>\n<p>此时我们已经找到了，与用户1003最为相似的两个用户，分别是用户1001——1.000和用户1005——0.905，这与我们之前的”显然猜想“相一致。</p>\n<p>然后我们就可以根据用户1001和用户1005已经购买的商品但用户1003没有购买的商品，将他们两个加权综合计算，为用户1003推荐。</p>\n<h1 id=\"小结\"><a class=\"markdownIt-Anchor\" href=\"#小结\"></a> 小结</h1>\n<p>其实，利用皮尔逊相关系数计算用户之间的相关性并不复杂，而在计算之前，我们应该怎么设计根据用户1003的已购买商品的评分信息，抽取与他购买的相同商品的其他用户的商品评分信息的SQL或者是其他信息提取方法，我想，这才是更为重要的点。</p>\n<p>这可能就是简单的“数据清洗”吧！哈哈哈哈哈哈哈。</p>\n",
            "tags": [
                "开发经验",
                "协同过滤"
            ]
        },
        {
            "id": "https://735690757.github.io/English/xbbEnglish/",
            "url": "https://735690757.github.io/English/xbbEnglish/",
            "title": "英语笔记",
            "date_published": "2024-11-08T03:00:00.000Z",
            "content_html": "<h1 id=\"领航\"><a class=\"markdownIt-Anchor\" href=\"#领航\"></a> 领航</h1>\n<p>:::primary no-icon<br />\n<strong>核心内容来自颉斌斌老师</strong><br />\n:::</p>\n<h1 id=\"阅读\"><a class=\"markdownIt-Anchor\" href=\"#阅读\"></a> 阅读</h1>\n<h2 id=\"常考的隐含假设\"><a class=\"markdownIt-Anchor\" href=\"#常考的隐含假设\"></a> 常考的隐含假设</h2>\n<table>\n<thead>\n<tr>\n<th>要素</th>\n<th>隐含假设</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>做了什么</td>\n<td>论述的主体有能力/条件可以做</td>\n</tr>\n<tr>\n<td>建议/应该去做一件事情</td>\n<td>这件事还没有做过，作者认为这件事合理</td>\n</tr>\n<tr>\n<td>为什么+观点</td>\n<td>观点成立</td>\n</tr>\n<tr>\n<td>一个措施有利，应该去做</td>\n<td>同时不会有更大的弊端</td>\n</tr>\n<tr>\n<td>一个措施不利，应该去做</td>\n<td>同时不会出现更大的利</td>\n</tr>\n<tr>\n<td>禁止做一件的事情</td>\n<td>这件事已经被做过</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"选项比错的依据\"><a class=\"markdownIt-Anchor\" href=\"#选项比错的依据\"></a> 选项比错的依据</h2>\n<ol>\n<li>答案已知且唯一</li>\n<li>选项具有有限性（4个）</li>\n</ol>\n<p>比出一个最佳选择即可，放弃求证每日一个选项的正确于错误</p>\n<p><strong>但，什么是最佳？</strong></p>\n<p>实际上，找对很难， <strong>比错比比对更加容易！</strong></p>\n<p><mark>选项比错是高效的做法</mark></p>\n<h2 id=\"比错的逻辑\"><a class=\"markdownIt-Anchor\" href=\"#比错的逻辑\"></a> 比错的逻辑</h2>\n<p>依据精准定位，评估一个出错率最小的选项</p>\n<p>比选项👉相对性👉借助其他选项</p>\n<p>比错👉 比较四个选项错误率的大小</p>\n<p>出错率最小不是完全正确，放弃追求完全正确的执念，转变为“接受最佳的选项”的新认识。</p>\n<p>:::primary no-icon</p>\n<p>When you have eliminated the impossible ，whatever remains，however improbable，must be the truth.</p>\n<p>:::</p>\n<h2 id=\"精准定位选项比错\"><a class=\"markdownIt-Anchor\" href=\"#精准定位选项比错\"></a> 精准定位+选项比错</h2>\n<h2 id=\"定位不到的解题思路\"><a class=\"markdownIt-Anchor\" href=\"#定位不到的解题思路\"></a> 定位不到的解题思路</h2>\n<ol>\n<li>反向定位（判断选项信息正误）</li>\n<li>取反/取非</li>\n<li>原命题转逆否命题</li>\n<li>主题主旨</li>\n</ol>\n<h1 id=\"写作大作文\"><a class=\"markdownIt-Anchor\" href=\"#写作大作文\"></a> 写作(大作文)</h1>\n<h2 id=\"图画作文\"><a class=\"markdownIt-Anchor\" href=\"#图画作文\"></a> 图画作文</h2>\n<h3 id=\"行文框架\"><a class=\"markdownIt-Anchor\" href=\"#行文框架\"></a> 行文框架</h3>\n<h4 id=\"第一段2-3句\"><a class=\"markdownIt-Anchor\" href=\"#第一段2-3句\"></a> 第一段（2-3句）</h4>\n<ol>\n<li>引出主题</li>\n<li>描述图片</li>\n<li>评价图片（可有可无）</li>\n</ol>\n<h4 id=\"第二段5句\"><a class=\"markdownIt-Anchor\" href=\"#第二段5句\"></a> 第二段（5句）</h4>\n<ol>\n<li>重申主题+分析影响</li>\n<li>影响1+研究调查</li>\n<li>影响2+名人名言</li>\n</ol>\n<h4 id=\"第三段\"><a class=\"markdownIt-Anchor\" href=\"#第三段\"></a> 第三段</h4>\n<ol>\n<li>升华主题</li>\n<li>建议措施</li>\n<li>展望未来（可有可无）</li>\n</ol>\n<h3 id=\"引出主题的句子选一个即可\"><a class=\"markdownIt-Anchor\" href=\"#引出主题的句子选一个即可\"></a> 引出主题的句子（选一个即可）</h3>\n<p>The animated cartoon reminds its readers of the significance of  (主题词).</p>\n<p>:::primary no-icon</p>\n<p>看到这副生动的漫画，人们想到了（主题词）的重要性</p>\n<p>:::</p>\n<p>Nothing can get us denying that (主题词), under any circumstances, tends to be of great/enormous importance.</p>\n<p>:::primary no-icon</p>\n<p>不可否认，在任何情况下，（主题词）往往很重要</p>\n<p>:::</p>\n<p>You will not miss thinking that (主题词) is playing an indispensable role in our life and work.</p>\n<p>:::primary no-icon</p>\n<p>你一定会想到（主题词）在我们的生活和工作中的起着不可或缺的作用（背）</p>\n<p>:::</p>\n<h3 id=\"描述图片的句子\"><a class=\"markdownIt-Anchor\" href=\"#描述图片的句子\"></a> 描述图片的句子</h3>\n<p>The picture is mainly related to the case that ( 图片主要人物/事物 ) + （doing/done…）, which can be a vivid expression of the topic.</p>\n<p>:::primary no-icon</p>\n<p>这一图片主要和…有关，该图是对主题词的生动表达（背）</p>\n<p>:::</p>\n<h3 id=\"评价图片可有可无\"><a class=\"markdownIt-Anchor\" href=\"#评价图片可有可无\"></a> 评价图片（可有可无）</h3>\n<p>What the drawer tries to convey has profound practical significance.</p>\n<p>:::primary no-icon</p>\n<p>画家试图传达的信息具有深刻的现实意义。(可以背一下)</p>\n<p>:::</p>\n<p>Simple as the picture looks, its implicit meaning should be thought–provoking.</p>\n<p>:::primary no-icon</p>\n<p>尽管图片简单，但其内涵发人深省。</p>\n<p>:::</p>\n<p>The cartoon, at first glance, seems to be simple, but the deep meaning behind it is worth pondering.</p>\n<p>:::primary no-icon</p>\n<p>这幅漫画乍一看似乎很简单，但其深层含义值得深思。</p>\n<p>:::</p>\n<h3 id=\"重申主题分析影响\"><a class=\"markdownIt-Anchor\" href=\"#重申主题分析影响\"></a> 重申主题+分析影响</h3>\n<p>Considering the significance of（主题词）, it is necessary to point out the far-reaching consequences behind it.</p>\n<p>:::primary no-icon</p>\n<p>考虑到 (主题词) 的重要性，有必要指出其背后意义深远的影响。</p>\n<p>:::</p>\n<p>There seems to be more than one direct or indirect effect involved in ( 主 题 词 ) , which none of us can fail to notice.</p>\n<p>:::primary no-icon</p>\n<p>似乎不止一个直接或间接的影响与 (主题词) 有关，我们无法忽视这些影响。(背)</p>\n<p>:::</p>\n<p>The effects that (主题词) can exert are obvious and within easy reach.</p>\n<p>:::primary no-icon</p>\n<p>(主题词) 产生的影响显而易见，也是不难找到的。</p>\n<p>:::</p>\n<h3 id=\"影响-1-调查研究\"><a class=\"markdownIt-Anchor\" href=\"#影响-1-调查研究\"></a> 影响 1 + 调查研究</h3>\n<h4 id=\"万能理由先行\"><a class=\"markdownIt-Anchor\" href=\"#万能理由先行\"></a> 万能理由先行</h4>\n<ol>\n<li>\n<p>成长 / 成功 / 发展</p>\n<ol>\n<li>个人话题：the growth / success / prospect of individual</li>\n<li>社会话题：the development of economy / society / culture / legal system / enviroment</li>\n</ol>\n</li>\n<li>\n<p>知识 / 阅历 / 机会</p>\n<ol>\n<li>acquire adequate knowledge and experience</li>\n</ol>\n</li>\n<li>\n<p>效率 / 便利 / 时间</p>\n<ol>\n<li>efficiency / convenience</li>\n</ol>\n</li>\n<li>\n<p>健康（身体和心理） / 压力 / 愉悦</p>\n<ol>\n<li>physical health / mental health</li>\n<li>pressure / stress / stain</li>\n<li>bring a lot of mental and physical pleasure</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"分析影响\"><a class=\"markdownIt-Anchor\" href=\"#分析影响\"></a> 分析影响</h4>\n<p>It is generally recognized that nothing is more important than (主题词) for (四大万能理由) .</p>\n<p>:::primary no-icon</p>\n<p>人们普遍认为 (主题词) 对 (四大万能理由) 最重要。（背）</p>\n<p>:::</p>\n<h4 id=\"调查研究\"><a class=\"markdownIt-Anchor\" href=\"#调查研究\"></a> 调查研究</h4>\n<p>Depending upon a rough estimate of the relevant department, nearly 86.2% of the respondents hold the same view.</p>\n<p>:::primary no-icon</p>\n<p>根据有关部门的粗略估计，近86.2%的受访者持相同观点。</p>\n<p>relevant department可以替换为具体部门</p>\n<p>:::</p>\n<p>A recent Internet questionnaire of the relevant department indicates that approximately 86.2% of the respondents hold the same view.</p>\n<p>:::primary no-icon</p>\n<p>有关部门最近的一份互联网问卷显示，约 86.2%的受访者持相同观点。（背）</p>\n<p>:::</p>\n<h3 id=\"影响-2-名人名言\"><a class=\"markdownIt-Anchor\" href=\"#影响-2-名人名言\"></a> 影响 2 + 名人名言</h3>\n<h4 id=\"分析影响-2\"><a class=\"markdownIt-Anchor\" href=\"#分析影响-2\"></a> 分析影响</h4>\n<p>(主题词) contributes to/is conducive to/ is responsible for (四大万能理由) .</p>\n<p>:::primary no-icon</p>\n<p>(主题词) 有助于 (四大万能理由) 。</p>\n<p>:::</p>\n<h4 id=\"名人名言\"><a class=\"markdownIt-Anchor\" href=\"#名人名言\"></a> 名人名言</h4>\n<p>As Envduct Karryguess, director of community service at LA College in LitLingo, puts it, “ (万能理由) , needless to say,  enormous importance for us.”</p>\n<h3 id=\"升华主题\"><a class=\"markdownIt-Anchor\" href=\"#升华主题\"></a> 升华主题</h3>\n<p>All these factors support a rational conclusion that great importance should be attached to(主题词)</p>\n<p>:::primary no-icon</p>\n<p>所有这些因素都支持一个合理的结论，即应该对(主题词)给予重视。</p>\n<p>:::</p>\n<h3 id=\"建议措施\"><a class=\"markdownIt-Anchor\" href=\"#建议措施\"></a> 建议措施</h3>\n<p>Everyone should cultivate a better awareness of it and take practical actions.</p>\n<p>:::primary no-icon</p>\n<p>每个人都应更好地意识到这一点，并采取实际行动。</p>\n<p>:::</p>\n<p>Strict laws and disciplines can guarantee the smooth running of the society</p>\n<p>:::primary no-icon</p>\n<p>严格的法律和纪律可以保证社会的平稳运行。</p>\n<p>:::</p>\n<h3 id=\"展望未来可有可无\"><a class=\"markdownIt-Anchor\" href=\"#展望未来可有可无\"></a> 展望未来（可有可无）</h3>\n<p>Only in this way would our life become more real and meaningful</p>\n<p>:::primary no-icon</p>\n<p>只有这样，我们的生活才能变得更加真实和富有意义。</p>\n<p>:::</p>\n<h3 id=\"原型\"><a class=\"markdownIt-Anchor\" href=\"#原型\"></a> 原型</h3>\n<pre class=\"highlight\"><code class=\"\">\tYou will not miss thinking that (主题词) is playing an indispensable role in our life   and work.The picture is mainly related to the case that ( 图片主要人物/事物 ) + （doing/done....）, which can be a vivid expression of the topic.\n\tThere seems to be more than one direct or indirect effect involved in ( 主 题 词 ) , which none of us can fail to notice.It is generally recognized that nothing is more important than (主题词) for (四大万能理由) .A recent Internet questionnaire of the relevant department indicates that approximately 86.2% of the respondents hold the same view. (主题词) contributes to (四大万能理由) .As Envduct Karryguess, director of community service at LA College in LitLingo, puts it, “ (万能理由) , needless to say,  enormous importance for us.”\n\tAll these factors support a rational conclusion that great importance should be attached to(主题词). Everyone should cultivate a better awareness of it and take practical actions.\n</code></pre>\n<p>原型净约136词</p>\n<h3 id=\"试写2005-partb-52\"><a class=\"markdownIt-Anchor\" href=\"#试写2005-partb-52\"></a> 试写（2005. PartB. 52.）</h3>\n<pre class=\"highlight\"><code class=\"\">\tYou will not miss thinking that concern elderly is palying an indispensable role in our life and work. The picture is mainly related to the case that four children would not like to take care their father.\n\tThere seems to be more than one direct or indirect effect involed in concern elderly, which none of us can fail to notice, It is generally recognized that nothing is more important than concern elderly for bring a lot of mental and physical pleasure. A recent Internet questionnaire of the relevant department indicates that approximately 82.6% of the respondents hold the same view. concern elderly contributes to a happy old age. As Envduc Karry, director of community service at LA College in LitLingo, put it,&quot;A happy old age ,needless to say, enormous importance for elderly.&quot;\n\tAll these factors support a rational conclusion that great importance should be attached to concern elderly. Everyone should cultivate a better awareness of it and take pratical actions.\n</code></pre>\n<p>试写仅为作者的练习，不是范文！不是范文！不是范文！可能不会拿到很高的分数，仅供参考。</p>\n<p>共161词，虽然针对2005年的要求有点捉襟见肘，但对于新标准来说还是游刃有余的。</p>\n<h2 id=\"图表作文\"><a class=\"markdownIt-Anchor\" href=\"#图表作文\"></a> 图表作文</h2>\n<h3 id=\"行文框架-2\"><a class=\"markdownIt-Anchor\" href=\"#行文框架-2\"></a> 行文框架</h3>\n<h4 id=\"第一段2-3句-2\"><a class=\"markdownIt-Anchor\" href=\"#第一段2-3句-2\"></a> 第一段（2-3句）</h4>\n<ol>\n<li>引出主题</li>\n<li>描述图表</li>\n<li>评价图表（可有可无）</li>\n</ol>\n<h4 id=\"第二段5句-2\"><a class=\"markdownIt-Anchor\" href=\"#第二段5句-2\"></a> 第二段（5句）</h4>\n<ol>\n<li>重申主题+分析原因</li>\n<li>原因1+研究调查</li>\n<li>原因2+名人名言</li>\n</ol>\n<h4 id=\"第三段-2\"><a class=\"markdownIt-Anchor\" href=\"#第三段-2\"></a> 第三段</h4>\n<ol>\n<li>升华主题</li>\n<li>建议措施</li>\n<li>展望未来（可有可无）</li>\n</ol>\n<h3 id=\"引出主题\"><a class=\"markdownIt-Anchor\" href=\"#引出主题\"></a> 引出主题</h3>\n<p>（主题）is clearly shown in the picture.</p>\n<p>:::primary no-icon</p>\n<p>在图表中清楚的表示了（主题）</p>\n<p>:::</p>\n<p>（主题）is what the chart tries to convey.</p>\n<p>:::primary no-icon</p>\n<p>(主题)是图表想要传达的信息</p>\n<p>:::</p>\n<p>The chart,in an obvious way, speaks volumes about the phenomenon that (主题).   （背）</p>\n<p>:::primary no-icon</p>\n<p>这张图表显然表明了一个现象，即（主题）</p>\n<p>:::</p>\n<p>The chart above demonstrates clearly that some changes have taken place in terms of（数据标题）</p>\n<p>:::primary no-icon</p>\n<p>上图清楚地表明，在（数据标题）方面已经发生了一些变化。</p>\n<p>:::</p>\n<h3 id=\"描述图表\"><a class=\"markdownIt-Anchor\" href=\"#描述图表\"></a> 描述图表</h3>\n<h4 id=\"饼状图表格\"><a class=\"markdownIt-Anchor\" href=\"#饼状图表格\"></a> 饼状图/表格</h4>\n<p>X accounts for the highest percentage at x% of （主题词）,followed by B at y% and C ,z%. At the bottom of the chart, k% is regarded as D.</p>\n<p>:::primary no-icon</p>\n<p>X占了（主题词）的最高比例即x%，紧接着是B占了y%，C占了z%。D占了图的最少的一部分，是k%。</p>\n<p>:::</p>\n<h4 id=\"柱状图折线图\"><a class=\"markdownIt-Anchor\" href=\"#柱状图折线图\"></a> 柱状图/折线图</h4>\n<p>There was a （dramatic increase/a steep drop） in the number of (一个东西) from （数据）in （时间）to（数据） in （时间）.</p>\n<p>:::primary no-icon</p>\n<p>(一个东西的)数据出现了急剧的上升/严重的的下降，从（时间）的（数据）到（时间）的（数据）。</p>\n<p>:::</p>\n<h3 id=\"重申主题分析原因\"><a class=\"markdownIt-Anchor\" href=\"#重申主题分析原因\"></a> 重申主题+分析原因</h3>\n<p>The reasons that caused the phenomenon are obvious and within easy reach.</p>\n<p>:::primary no-icon</p>\n<p>导致这一现象的原因是显而易见的。</p>\n<p>:::</p>\n<p>After observation and consideration, some reasons of （主题词） can be highlight as follows.</p>\n<p>:::primary no-icon</p>\n<p>经过观察和考虑，将一些原因列举如下。（背）</p>\n<p>:::</p>\n<h3 id=\"原因1研究调查\"><a class=\"markdownIt-Anchor\" href=\"#原因1研究调查\"></a> 原因1+研究调查</h3>\n<p>同图画作文</p>\n<h3 id=\"原因2名人名言\"><a class=\"markdownIt-Anchor\" href=\"#原因2名人名言\"></a> 原因2+名人名言</h3>\n<p>同图画作文</p>\n<h3 id=\"升华主题-2\"><a class=\"markdownIt-Anchor\" href=\"#升华主题-2\"></a> 升华主题</h3>\n<p>同图画作文</p>\n<h3 id=\"建议措施-2\"><a class=\"markdownIt-Anchor\" href=\"#建议措施-2\"></a> 建议措施</h3>\n<p>同图画作文</p>\n<h3 id=\"原型-2\"><a class=\"markdownIt-Anchor\" href=\"#原型-2\"></a> 原型</h3>\n<pre class=\"highlight\"><code class=\"\">\tThe chart,in an obvious way, speaks volumes about the phenomenon that (主题).X accounts for the highest percentage at x% of （主题词）,followed by B at y% and C ,z%. At the bottom of the chart, k% is regarded as D.\n\tAfter observation and consideration, some reasons of （主题词） can be highlight as follows.It is generally recognized that nothing is more important than (主题词) for (四大万能理由) .A recent Internet questionnaire of the relevant department indicates that approximately 86.2% of the respondents hold the same view. (主题词) contributes to (四大万能理由) .As Envduct Karryguess, director of community service at LA College in LitLingo, puts it, “ (万能理由) , needless to say,  enormous importance for us.”\n\tAll these factors support a rational conclusion that great importance should be attached to(主题词). Everyone should cultivate a better awareness of it and take practical actions.\n</code></pre>\n<p>模板净含约120词</p>\n<h2 id=\"文字作文\"><a class=\"markdownIt-Anchor\" href=\"#文字作文\"></a> 文字作文</h2>\n<h3 id=\"行文框架-3\"><a class=\"markdownIt-Anchor\" href=\"#行文框架-3\"></a> 行文框架</h3>\n<h4 id=\"第一段\"><a class=\"markdownIt-Anchor\" href=\"#第一段\"></a> 第一段</h4>\n<ol>\n<li>引出主题</li>\n<li>陈述作者观点和态度</li>\n<li>表明自己的观点</li>\n</ol>\n<h4 id=\"第二段\"><a class=\"markdownIt-Anchor\" href=\"#第二段\"></a> 第二段</h4>\n<ol>\n<li>重申主题 + 分析原因/影响</li>\n<li>原因1/影响1 + 例子（调查研究）</li>\n<li>原因2/影响2 + 例子（名人名言）</li>\n</ol>\n<h4 id=\"第三段-3\"><a class=\"markdownIt-Anchor\" href=\"#第三段-3\"></a> 第三段</h4>\n<ol>\n<li>升华主题</li>\n<li>建议措施</li>\n<li>展望未来（可有可无）</li>\n</ol>\n<h3 id=\"引出主题-2\"><a class=\"markdownIt-Anchor\" href=\"#引出主题-2\"></a> 引出主题</h3>\n<p>The phenomenon mentioned in the above excerpt that （主题）is receiving more and more attention and hot discussion.</p>\n<p>:::primary no-icon</p>\n<p>上述摘录中提到的现象（主题）正受到越来越多的关注并成为热点讨论话题。</p>\n<p>:::</p>\n<h3 id=\"陈述作者观点和态度\"><a class=\"markdownIt-Anchor\" href=\"#陈述作者观点和态度\"></a> 陈述作者观点和态度</h3>\n<p>As is presented in the excerpt , the author believes that… is of graet significance for …</p>\n<p>:::primary no-icon</p>\n<p>如摘录所示，作者认为…对…具有重要意义</p>\n<p>:::</p>\n<h3 id=\"表明自己的观点\"><a class=\"markdownIt-Anchor\" href=\"#表明自己的观点\"></a> 表明自己的观点</h3>\n<p>As far as this question is concerned, I support the author’s view.</p>\n<p>:::primary no-icon</p>\n<p>关于这个问题，我支持作者的观点。</p>\n<p>:::</p>\n<h3 id=\"原因1研究调查-2\"><a class=\"markdownIt-Anchor\" href=\"#原因1研究调查-2\"></a> 原因1+研究调查</h3>\n<p>同图画作文</p>\n<h3 id=\"原因2名人名言-2\"><a class=\"markdownIt-Anchor\" href=\"#原因2名人名言-2\"></a> 原因2+名人名言</h3>\n<p>同图画作文</p>\n<h3 id=\"升华主题-3\"><a class=\"markdownIt-Anchor\" href=\"#升华主题-3\"></a> 升华主题</h3>\n<p>同图画作文</p>\n<h3 id=\"建议措施-3\"><a class=\"markdownIt-Anchor\" href=\"#建议措施-3\"></a> 建议措施</h3>\n<p>同图画作文</p>\n<h1 id=\"写作小作文\"><a class=\"markdownIt-Anchor\" href=\"#写作小作文\"></a> 写作(小作文)</h1>\n<h2 id=\"书信\"><a class=\"markdownIt-Anchor\" href=\"#书信\"></a> 书信</h2>\n<h3 id=\"格式\"><a class=\"markdownIt-Anchor\" href=\"#格式\"></a> 格式</h3>\n<pre class=\"highlight\"><code class=\"\">Dear_______,（&lt;-逗号）\n\t\n\t第一段_____________________________________________\n\t第二段_____________________________________________\n\t第三段_____________________________________________\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t（逗号-&gt;）\tyour sincerely，\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLi Ming\n</code></pre>\n<h3 id=\"行文结构\"><a class=\"markdownIt-Anchor\" href=\"#行文结构\"></a> 行文结构</h3>\n<h4 id=\"前置\"><a class=\"markdownIt-Anchor\" href=\"#前置\"></a> 前置</h4>\n<p>称呼</p>\n<h4 id=\"第一段-2\"><a class=\"markdownIt-Anchor\" href=\"#第一段-2\"></a> 第一段</h4>\n<ol>\n<li>表明身份（可有可无）+表明主题（重要）</li>\n</ol>\n<h4 id=\"第二段-2\"><a class=\"markdownIt-Anchor\" href=\"#第二段-2\"></a> 第二段</h4>\n<ol>\n<li>展开主题+两点论</li>\n</ol>\n<h4 id=\"第三段-4\"><a class=\"markdownIt-Anchor\" href=\"#第三段-4\"></a> 第三段</h4>\n<ol>\n<li>重申主题+寒暄（可有可无）</li>\n</ol>\n<h4 id=\"尾部\"><a class=\"markdownIt-Anchor\" href=\"#尾部\"></a> 尾部</h4>\n<p>落款</p>\n<h3 id=\"万能身份\"><a class=\"markdownIt-Anchor\" href=\"#万能身份\"></a> 万能身份</h3>\n<p>I am president of the Students’ Union</p>\n<h3 id=\"表明主题\"><a class=\"markdownIt-Anchor\" href=\"#表明主题\"></a> 表明主题</h3>\n<p>I am writing the letter to you for the purpose of (目的，从”directions“中汲取。doing sth)</p>\n<h3 id=\"展开主题两点论\"><a class=\"markdownIt-Anchor\" href=\"#展开主题两点论\"></a> 展开主题+两点论</h3>\n<p>参考万能主题</p>\n<h3 id=\"万能结尾\"><a class=\"markdownIt-Anchor\" href=\"#万能结尾\"></a> 万能结尾</h3>\n<p>Please accept my sincere gratitude to you for reading the content above. If you need to know more about it, please contact me.</p>\n<h3 id=\"模板\"><a class=\"markdownIt-Anchor\" href=\"#模板\"></a> 模板</h3>\n<pre class=\"highlight\"><code class=\"\">Dear_______,\n\tI am president of the Students' Union)(此处视情况变换身份). I am writing the letter to you for the purpose of (目的，从”directions“中汲取。doing sth).\n\tOf all the points concerned. I'd like to name the most significant ones as follows. First and foremost,______(要点一).Additionally,_______(要点二).(此处可再加一个要点&quot;Not but not least&quot;)\n\tplease accept my sincere gratitude to you for reading the content above. If you need to know more about it, please contact me.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYours sincerely,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(name)\n</code></pre>\n<h2 id=\"通知\"><a class=\"markdownIt-Anchor\" href=\"#通知\"></a> 通知</h2>\n<h2 id=\"备忘录\"><a class=\"markdownIt-Anchor\" href=\"#备忘录\"></a> 备忘录</h2>\n<h1 id=\"翻译\"><a class=\"markdownIt-Anchor\" href=\"#翻译\"></a> 翻译</h1>\n<h2 id=\"文章一\"><a class=\"markdownIt-Anchor\" href=\"#文章一\"></a> 文章一</h2>\n<h3 id=\"原文\"><a class=\"markdownIt-Anchor\" href=\"#原文\"></a> 原文</h3>\n<pre class=\"highlight\"><code class=\"\">\tWe tend to think that friends and family members are our biggest source of connection, laughter and warmth. While that may well be true, researchers have also recently found that interacting with strangers actually brings a boost in mood and feelings of belonging that we didn’t expect.\n\tIn one series of studies, researchers instructed Chicago-area commuters using public transportation to strike up a conversation with someone near them. On average, participants who followed this instruction felt better than those who had been told to stand or sit in silence. The researchers also argued that when we shy away from casual interactions with strangers, it is often due to a misplaced anxiety that they might not want to talk to us. Much of that time, however, this belief is false. As it turns out, many people are actually perfectly willing to talk and may even be flattered to receive your attention.\n</code></pre>\n<h3 id=\"逐句翻译\"><a class=\"markdownIt-Anchor\" href=\"#逐句翻译\"></a> 逐句翻译</h3>\n<p>We tend to think that friends and family members are our biggest source of connection, laughter and warmth.</p>\n<p>:::info no-icon</p>\n<p>我们往往会认为朋友和家庭成员是我们情感联系、欢声笑语以及幸福温暖的最大来源。</p>\n<p>:::</p>\n<p>While that may well be true, researchers have also recently found that interacting with strangers actually brings a boost in mood and feelings of belonging that we didn’t expect.</p>\n<p>:::info no-icon</p>\n<p>尽管那很肯能是真的，但最近研究者们发现与陌生人交往实际上会带来我们没有想到的情绪上的增长以及感觉上的促进（让人心情愉悦、有归属感）</p>\n<p>:::</p>\n<p>In one series of studies, researchers instructed Chicago-area <ins>commuters</ins> using public transportation to strike up a conversation with someone near them</p>\n<p>:::info no-icon</p>\n<p>在一系列研究中，研究者们让Chicago区域使用公共交通的通勤人员去努力和他们身边的人产生交流</p>\n<p>:::</p>\n<p>On average, participants who followed this instruction felt better than those who had been told to stand or sit in silence.</p>\n<p>:::info no-icon</p>\n<p>通常来讲，相较于被告知在安静中站着或者坐着的来说，参与者们跟随着这个指示来做会感觉到更好</p>\n<p>:::</p>\n<p>The researchers also <ins>argued</ins> that when we shy away from casual interactions with strangers, it is often due to a <ins>misplaced</ins> anxiety that they might not want to talk to us.</p>\n<p>:::info no-icon</p>\n<p>研究者们也认为，当我们在与陌生人随意的交谈而感到害羞跑开时，那通常是因为不合时宜的焦虑，那就是他们也许不想和我们讲话</p>\n<p>:::</p>\n<p>Much of that time, however, this belief is false.</p>\n<p>:::info no-icon</p>\n<p>然而，大多数情况下，这种想法是错误的</p>\n<p>:::</p>\n<p>As it turns out, many people are actually perfectly willing to talk and may even be <ins>flattered</ins> to <ins>receive</ins> your attention.</p>\n<p>:::info no-icon</p>\n<p>结果是，许多人实际上非常愿意交谈，甚至会因为得到你的关注而感到荣幸。</p>\n<p>:::</p>\n<h3 id=\"词汇\"><a class=\"markdownIt-Anchor\" href=\"#词汇\"></a> 词汇</h3>\n<table>\n<thead>\n<tr>\n<th>单词</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>flattered</td>\n<td>adj.（因受重视而）感到满意的，觉得荣幸的；（在正式场合表示感谢）不胜荣幸的，深感荣幸的<br /> v. 奉承；自命不凡；使显得漂亮，使显得出色（flattered 的过去式和过去分词）</td>\n</tr>\n<tr>\n<td>misplaced</td>\n<td>adj. 不合时宜的；（情感）寄托错的；放错位置的；暂时丢失的<br />v. 乱放（而找不到），暂时丢失；错放（misplace 的过去式和过去分词）</td>\n</tr>\n<tr>\n<td>argued</td>\n<td>v. 争论；争吵；争辩；论证；说理；显示出，表明（argue 的过去式和过去分词）</td>\n</tr>\n<tr>\n<td>commuters</td>\n<td>n. 通勤者；每日往返上班者（commuter 的复数）</td>\n</tr>\n<tr>\n<td>receive</td>\n<td>v. 得到，收到；遭受，经受（特定待遇）；对……作出反应；接待，招待；接收（某人为成员）；接收，收听（信号）；（通过无线电）听到；购买，窝藏（赃物）；接（球）；领受（圣餐面包或葡萄酒）；接受（治疗）；形成（看法，印象）；容纳，承接</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"文章二\"><a class=\"markdownIt-Anchor\" href=\"#文章二\"></a> 文章二</h2>\n<h3 id=\"原文-2\"><a class=\"markdownIt-Anchor\" href=\"#原文-2\"></a> 原文</h3>\n<pre class=\"highlight\"><code class=\"\">\tIn the late 18th century, William Wordsworth became famous for his poems about nature.And he was one of the founders of a movement called Romanticism, which celebrated the wonders of the natural world.\n\tPoetry is powerful. Its energy and rhythm can capture a reader, transport them to another world and make then see things differently. Through carefully selected words and phrases, poems can be dramatic, funny, beautiful, moving and inspiring.\n\tNo one knows for sure when poetry began but it has been around for thousands of years,even before people could write. It was a way to tell stories and pass down history. It is closely related to song and even when written it is usually created to be performed out loud. Poems really come to life when they are recited. This can also help with understanding them too, because the rhythm and sounds of the words become clearer\n</code></pre>\n<h3 id=\"逐句翻译-2\"><a class=\"markdownIt-Anchor\" href=\"#逐句翻译-2\"></a> 逐句翻译</h3>\n<p>In the late 18th century, William Wordsworth became famous for his poems about nature.</p>\n<p>:::info no-icon</p>\n<p>在18世纪后期，William Wordsworth因他的有关自然的诗集而远近闻名。</p>\n<p>:::</p>\n<p>And he was one of the founders of a movement called Romanticism, which celebrated the wonders of the natural world.</p>\n<p>:::info no-icon</p>\n<p>他是万千浪漫主义运动奠基者的一员，专为自然世界而歌颂。</p>\n<p>:::</p>\n<p>Poetry is powerful.</p>\n<p>:::info no-icon</p>\n<p>诗歌满含力量。</p>\n<p>:::</p>\n<p>Its energy and rhythm can capture a reader, transport them to another world and make then see things differently.</p>\n<p>:::info no-icon</p>\n<p>这种能量和神话能够俘获读者芳心，带领他们进入另外一个世界，使之他们以不同的眼光看待世界。</p>\n<p>:::</p>\n<p>Through carefully selected words and phrases, poems can be dramatic, funny, beautiful, moving and inspiring.</p>\n<p>:::info no-icon</p>\n<p>通过在词汇和语段上的精挑细选，诗歌可以表现出戏剧的，有趣的、华丽的、感动的以及鼓舞人心的情感。</p>\n<p>:::</p>\n<p>No one knows for sure when poetry began but it has been around for thousands of years,even before people could write.</p>\n<p>:::info no-icon</p>\n<p>没有人确切地知道诗歌始于何时，但其确实萦绕千年之久，甚至在人们学会书写之前就已经出现了。</p>\n<p>:::</p>\n<p>It was a way to tell stories and pass down history.</p>\n<p>:::info no-icon</p>\n<p>这曾经是讲述故事和传承过去历史的一种方式</p>\n<p>:::</p>\n<p>It is closely related to song and even when written it is usually created to be performed out loud.</p>\n<p>:::info no-icon</p>\n<p>他与歌曲密切相关，即使写成它，它通常也是为了大声表演而创作的。</p>\n<p>:::</p>\n<p>Poems really come to life when they are recited.</p>\n<p>:::info no-icon</p>\n<p>诗歌吟诵时才正真背赋予了生命。</p>\n<p>:::</p>\n<p>This can also help with understanding them too, because the rhythm and sounds of the words become clearer</p>\n<p>:::info no-icon</p>\n<p>这也有助于理解它们，因为单词的节奏和声音变得更加清晰</p>\n<p>:::</p>\n<h2 id=\"文章三\"><a class=\"markdownIt-Anchor\" href=\"#文章三\"></a> 文章三</h2>\n<h3 id=\"原文-3\"><a class=\"markdownIt-Anchor\" href=\"#原文-3\"></a> 原文</h3>\n<pre class=\"highlight\"><code class=\"\">\tWith the smell of coffee and fresh bread floating in the air, stalls bursting with colorful vegetables and tempting cheeses, and the buzz of friendly chats, farmers’ markets are a feast for the senses. They also provide an opportunity to talk to the people responsible for growing or raising your food, support your local economy and pick up fresh seasonal produce —— all at the same time.\n\n\tFarmers’ markets are usually weekly or monthly events, most often with outdoor stalls, which allow farmers or producers to sell their food directly to customers. The size or regularity of markets can vary from season to season, depending on the area's agricultural calendar, and you’re likely to find different produce on sale at different times of the year. By cutting out the middlemen, the farmers secure more profit for their produce. Shoppers also benefit from seeing exactly where-and to who- their money is going.\n</code></pre>\n<h3 id=\"逐句翻译-3\"><a class=\"markdownIt-Anchor\" href=\"#逐句翻译-3\"></a> 逐句翻译</h3>\n<p>With the smell of coffee and fresh bread floating in the air, stalls bursting with colorful vegetables and tempting cheeses, and the buzz of friendly chats, farmers’ markets are a feast for the senses.</p>\n<p>:::info no-icon</p>\n<p>伴随着漂浮在空气中的咖啡和新鲜面包香气，摊位上摆放着五颜六色的水果和楚楚可人的奶酪，以及友好的聊天嘈杂而又喧闹着，农贸市场上显现出一幅美好的景象（感官盛宴）。</p>\n<p>:::</p>\n<p>They also provide an opportunity to talk to the people responsible for growing or raising your food, support your local economy and pick up fresh seasonal produce— all at the same time.</p>\n<p>:::info no-icon</p>\n<p>这也为你提供了一种既能去人直面交流的机会，而这个人正是负责你食物的播种与采集的人，也能去支持本地经济，与此同时挑选新鲜的季节性产品的——这一切同时发生。</p>\n<p>:::</p>\n<p>Farmers’ markets are usually weekly or monthly events, most often with outdoor stalls, which allow farmers or producers to sell their food directly to customers.</p>\n<p>:::info no-icon</p>\n<p>农贸市场通常是每周或者每月举行，最常见的是户外摊位，届时允许农民或者生产者去直接面向顾客售卖他们的商品。</p>\n<p>:::</p>\n<p>The size or regularity of markets can vary from season to season, depending on the area’s agricultural calendar, and you’re likely to find different produce on sale at different times of the year.</p>\n<p>:::info no-icon</p>\n<p>市场的规模或者是规律很大程度上是适时而异，依托于当地农历，你很可能会发现与众不同的产品售卖于一年的不同时间。</p>\n<p>:::</p>\n<p>By cutting out the middlemen, the farmers secure more profit for their produce.</p>\n<p>:::info no-icon</p>\n<p>鉴于没有中间商赚差价，因此农民们可以获得来自于他们产品的更多利润。</p>\n<p>:::</p>\n<p>Shoppers also benefit from seeing exactly where — and to who — their money is going.</p>\n<p>:::info no-icon</p>\n<p>购买者也受益于他们可以更加准确的认识到，他们的钱支付给谁并流向何方。</p>\n<p>:::</p>\n<h3 id=\"词汇-2\"><a class=\"markdownIt-Anchor\" href=\"#词汇-2\"></a> 词汇</h3>\n<table>\n<thead>\n<tr>\n<th>单词</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stalls</td>\n<td>n. 正厅前排座位（stall 的复数形式）<br /> v. 使（汽车等）抛锚（stall 的第三人称单数形式）</td>\n</tr>\n<tr>\n<td>bursting</td>\n<td>adj. 充满的；渴望的<br/>v. 爆炸；猛冲；涨满；充满感情；突然爆发（感情）；猛然打开；决堤；突然开始活跃（burst 的现在分词）</td>\n</tr>\n<tr>\n<td>tempting</td>\n<td>adj. 诱人的，吸引人的<br/>v. 引诱，诱惑；怂恿，利诱；冒……的风险（tempt 的现在分词）</td>\n</tr>\n<tr>\n<td>buzz</td>\n<td>v. 发嗡嗡声，发蜂鸣声；匆忙走动；充满嘈杂声；充满想法；繁忙，充满活力；&lt;非正式&gt;给（某人）打电话；&lt;非正式&gt;（飞机）低空飞过；（用蜂鸣器）呼叫<br/>n. 嗡嗡声，蜂鸣声；叽叽喳喳声，嘈杂声；&lt;非正式&gt;兴奋，快乐；热闹有趣的气氛，时尚氛围；&lt;非正式&gt;电话；&lt;非正式&gt;流言，传闻<br/>adj. （词语、想法或活动）时髦的</td>\n</tr>\n<tr>\n<td>feast</td>\n<td>n. 宴会，筵席；盛会，特别的享受；宗教节日<br/>v. 饱餐，尽情享用；宴请，设宴招待（某人）</td>\n</tr>\n<tr>\n<td>regularity</td>\n<td>n. 规律性，经常性；匀称，端正；有规则的东西，有规律的事物</td>\n</tr>\n<tr>\n<td>middlemen</td>\n<td>n. 中间商；经纪商</td>\n</tr>\n<tr>\n<td>secure</td>\n<td>adj. 稳固的，可靠的；严密把守的，牢固的；安全的，稳妥的；（对自己和自己的能力）有自信的；感到有保障的，没有顾虑的；固定住的，系牢的；秘密的<br/>v. （尤指经过努力而）获得，得到；使安全，保护；缚牢，将（某物）固定；确保，保证；为（债务或贷款）作抵押，作保；（外科）压迫（血管）止血；停止工作；船抛锚</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"完型\"><a class=\"markdownIt-Anchor\" href=\"#完型\"></a> 完型</h1>\n<h2 id=\"完型理论\"><a class=\"markdownIt-Anchor\" href=\"#完型理论\"></a> 完型理论</h2>\n<ol>\n<li>其本质上仍然是比错</li>\n<li>亟需打破传统思维，摒弃完美理解</li>\n<li>追求文章内部的一致性</li>\n<li>主旨一致</li>\n</ol>\n<h3 id=\"局部一致性全局一致性\"><a class=\"markdownIt-Anchor\" href=\"#局部一致性全局一致性\"></a> 局部一致性+全局一致性</h3>\n<ol>\n<li>上下文语义一致</li>\n<li>注意逻辑合理（逻辑改变方向还是保持方向？）（二分法）</li>\n</ol>\n",
            "tags": [
                "English",
                "英语"
            ]
        },
        {
            "id": "https://735690757.github.io/DSLearnNote/DSErrorProneSummary/",
            "url": "https://735690757.github.io/DSLearnNote/DSErrorProneSummary/",
            "title": "数据结构之与错题博弈",
            "date_published": "2024-10-30T03:00:00.000Z",
            "content_html": "<h1 id=\"错题是回忆的老师\"><a class=\"markdownIt-Anchor\" href=\"#错题是回忆的老师\"></a> 错题是回忆的老师</h1>\n<h1 id=\"时间复杂度\"><a class=\"markdownIt-Anchor\" href=\"#时间复杂度\"></a> 时间复杂度</h1>\n<ol>\n<li>假设一个有n个顶点和e条弧的有向图，用邻接表表示，则删除与某个顶点vi相关的所有弧，则时间复杂度为？ {.quiz}\n<ul>\n<li><code>O(n)</code></li>\n<li><code>O(n+e)</code> {.correct}</li>\n<li><code>O(e);</code></li>\n<li><code>O(n*e);</code><br />\n{.options}</li>\n</ul>\n<blockquote>\n<p>第一步找到Vi,删除从Vi出发的所有弧——O(n)<br />\n第二步删除所有指向Vi的弧——O(e)<br />\n综上合，时间复杂度为O(n+e)<br />\n{.options}</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "DS",
                "数据结构"
            ]
        },
        {
            "id": "https://735690757.github.io/PoliticalKnowledge/politicalNote/",
            "url": "https://735690757.github.io/PoliticalKnowledge/politicalNote/",
            "title": "政治知识点速记（持续更新）",
            "date_published": "2024-10-25T03:00:00.000Z",
            "content_html": "<h1 id=\"领航\"><a class=\"markdownIt-Anchor\" href=\"#领航\"></a> 领航</h1>\n<p>:::primary no-icon<br />\n<strong>部分口诀来自李丽双老师</strong></p>\n<p><strong>主要内容来自《肖秀荣1000题》、《精讲精炼》、《30天70分》的答案解析</strong></p>\n<p><strong>以及其他同学们的笔记</strong></p>\n<p><strong>版权问题请联系作者QQ：735690757</strong><br />\n:::</p>\n<h1 id=\"史纲\"><a class=\"markdownIt-Anchor\" href=\"#史纲\"></a> 史纲</h1>\n<h1 id=\"马原理\"><a class=\"markdownIt-Anchor\" href=\"#马原理\"></a> 马原理</h1>\n<h1 id=\"习思想\"><a class=\"markdownIt-Anchor\" href=\"#习思想\"></a> 习思想</h1>\n<h2 id=\"琐碎\"><a class=\"markdownIt-Anchor\" href=\"#琐碎\"></a> 琐碎</h2>\n<p>在习近平新时代中国特色社会主义思想的指导下，中国共产党团结带领中国人民，自信自强、守正创新，统揽伟大斗争、伟大工程、伟大事业、伟大梦想，<strong>创造了新时代中国特色社会主义的 伟大成就，为实现中华民族伟大复兴提供了<mark>更为完善的制度保证、更为坚实的物质基础、更为主动的精神力量</mark></strong>。</p>\n<h2 id=\"六个坚持\"><a class=\"markdownIt-Anchor\" href=\"#六个坚持\"></a> 六个坚持</h2>\n<p>“六个必须坚持”:必须坚持<mark>人民至上</mark>、必须坚持<mark>自信自立</mark>、必须坚持<mark>守正创新</mark>、必须坚持<mark>问题导向</mark>、必须坚持<mark>系统观念</mark>、必须坚持<mark>胸怀天下</mark>。</p>\n<p>:::primary<br />\n人心正道系天下<br />\n:::</p>\n<h2 id=\"党的根本宗旨\"><a class=\"markdownIt-Anchor\" href=\"#党的根本宗旨\"></a> 党的根本宗旨</h2>\n<p>党的根本宗旨是全心全意为<mark>人民服务</mark></p>\n<h2 id=\"实现途径-行动指南-根本保障-精神力量\"><a class=\"markdownIt-Anchor\" href=\"#实现途径-行动指南-根本保障-精神力量\"></a> 实现途径、行动指南、根本保障、精神力量</h2>\n<p>改革开放以来我们取得一切成绩和进步的根本原因，归结起来就是；开辟了中国特色社会主义道路，形成了中国特色社会主义理论体系，确立了中国特色社会主义制度，发展了中国特色社会主义文化。其中，道路是<strong>实现途径</strong>，理论体系是<strong>行动指南</strong>，制度是<strong>根本保障</strong>，文化是<strong>精神力量</strong>，四者统一于中国特色社会主义伟大实践。</p>\n<h2 id=\"四个自信理论支撑和根本依据\"><a class=\"markdownIt-Anchor\" href=\"#四个自信理论支撑和根本依据\"></a> 四个自信理论支撑和根本依据</h2>\n<p><strong>马克思主义深刻揭示了社会主义必然代替资本主义的客观规律</strong>，这是我们坚定“四个自信”的<strong>理论支撑</strong>和<strong>根本依据</strong>。</p>\n<h2 id=\"四个自信的来源\"><a class=\"markdownIt-Anchor\" href=\"#四个自信的来源\"></a> 四个自信的来源</h2>\n<p>中国特色社会主义道路自信、理论自信、制度自信、文化自信，来源于<mark>实践</mark>、来源于<mark>人民</mark>、来源于<mark>真理</mark>。</p>\n<h2 id=\"四个全面处于主导地位的是\"><a class=\"markdownIt-Anchor\" href=\"#四个全面处于主导地位的是\"></a> 四个全面处于主导地位的是</h2>\n<p>“四个全面”战略布局既有战略目标又有战略举措，每个“全面”之间具有紧密的内在逻辑是一个整体战略部署的有序展开。<mark>全面建设社会主义现代化国家是战略目标</mark>，在“四个全面”中<mark>居于引领地位</mark>;全面深化改革、全面依法治国、全面从严治党是三大战略举措，为全面建设社会主义现代化国家提供重要保障。</p>\n<h2 id=\"党的基本路线\"><a class=\"markdownIt-Anchor\" href=\"#党的基本路线\"></a> 党的基本路线</h2>\n<p><strong>党的基本路线是<mark>国家的生命线</mark>、<mark>人民的幸福线</mark>。</strong></p>\n<h2 id=\"科学社会主义的主张\"><a class=\"markdownIt-Anchor\" href=\"#科学社会主义的主张\"></a> 科学社会主义的主张</h2>\n<p>科学社会主义的主张受到中国人民热烈欢迎，并最终扎根中国大地、开花结果，是因为：第一，它<mark>回答了近代以来中华民族面临的历史性课题</mark>(求得民族独立和人民解放；实现国家富强和人民幸福)、<mark>指明了实现中华民族伟大复兴的正确道路</mark>(中国特色社会主义是实现中华民族复兴的正确道路);第二，<mark>它同我国传承了几千年的优秀历史文化和广大人民日用而不觉的价值观念具有高度的契合性</mark></p>\n<h2 id=\"百年奋斗目标-不是顺序的而是交错的100年\"><a class=\"markdownIt-Anchor\" href=\"#百年奋斗目标-不是顺序的而是交错的100年\"></a> 百年奋斗目标-不是顺序的而是交错的100年</h2>\n<p>第一个一百年（共产党成立100周年），是到中国共产党成立100年时全面建成小康社会（1921-2021）</p>\n<p>第二个一百年（新中国成立100周年），是到新中国成立100年时建成富强民主文明和谐美丽的社会主义现代化强国（1949-2049）</p>\n<h2 id=\"新形势下做好新闻舆论工作的关键\"><a class=\"markdownIt-Anchor\" href=\"#新形势下做好新闻舆论工作的关键\"></a> 新形势下做好新闻舆论工作的关键</h2>\n<p>互联网是意识形态工作的主阵地、主战场、最前沿，<strong>管好用好互联网</strong>是新形势下做好新闻舆论工作的关键。习近平指出：“过不了互联网这一关，就过不了长期执政这一关。</p>\n<h2 id=\"文化是\"><a class=\"markdownIt-Anchor\" href=\"#文化是\"></a> 文化是…</h2>\n<p>面建成社会主义现代化强国必然要求建设社会主义文化强国。统筹推进“五位一体”总体布局、协调推进“四个全面”战略布局，文化是<strong>重要内容</strong>；推动高质量发展，文化是<strong>重要支点</strong>；满足人民日益增长的美好生活需要，文化是<strong>重要因素</strong>；战胜前进道路上各种风险挑战，文化是<strong>重要力量源泉</strong>。只有推动文化繁荣兴盛，才能为推进中国式现代化建设、实现第二个百年奋斗目标提供思想保证、舆论支持、精神动力和文化条件。</p>\n<h2 id=\"中国共产党的精神之源\"><a class=\"markdownIt-Anchor\" href=\"#中国共产党的精神之源\"></a> 中国共产党的精神之源</h2>\n<p><mark>伟大建党精神是中国共产党的精神之源</mark></p>\n<h2 id=\"关乎旗帜-关乎道路-关乎国家政治安全决定文化前进方向和发展道路\"><a class=\"markdownIt-Anchor\" href=\"#关乎旗帜-关乎道路-关乎国家政治安全决定文化前进方向和发展道路\"></a> 关乎旗帜、关乎道路、关乎国家政治安全，决定文化前进方向和发展道路</h2>\n<p><ins>意识形态</ins>关乎旗帜、关乎道路、关乎国家政治安全，决定文化前进方向和发展道路。</p>\n<h2 id=\"坚持百花齐放-百家争鸣双百\"><a class=\"markdownIt-Anchor\" href=\"#坚持百花齐放-百家争鸣双百\"></a> 坚持百花齐放、百家争鸣(“双百”)</h2>\n<p>坚持百花齐放、百家争鸣(“双百”)是<mark>繁荣发展社会主义文化</mark>的重要方针。</p>\n<h2 id=\"坚持为人民服务-为社会主义服务二为\"><a class=\"markdownIt-Anchor\" href=\"#坚持为人民服务-为社会主义服务二为\"></a> 坚持为人民服务、为社会主义服务(“二为”)</h2>\n<p>坚持为人民服务、为社会主义服务(“二为”)的根本方向，是<mark>决定社会主义文化事业前途命运</mark>的关键。</p>\n<h2 id=\"区别于其他国家和民族的根本特征\"><a class=\"markdownIt-Anchor\" href=\"#区别于其他国家和民族的根本特征\"></a> 区别于其他国家和民族的根本特征</h2>\n<p><strong>中华民族创造的优秀传统文化</strong>是民族的根脉，根植在中国人内心，形成了中国人看待世界、看待社会、看待人生的独特价值体系、文化内涵和精神品质，这是我们区别于其他国家和民族的<strong>根本特征</strong>。</p>\n<h2 id=\"文化的生命所在-本质特征\"><a class=\"markdownIt-Anchor\" href=\"#文化的生命所在-本质特征\"></a> 文化的生命所在、本质特征</h2>\n<p><ins>创新创造</ins>是文化的生命所在，是文化的本质特征。因此</p>\n<h2 id=\"共同富裕的基础性制度\"><a class=\"markdownIt-Anchor\" href=\"#共同富裕的基础性制度\"></a> 共同富裕的基础性制度</h2>\n<p>分配制度</p>\n<h2 id=\"初次分配\"><a class=\"markdownIt-Anchor\" href=\"#初次分配\"></a> 初次分配</h2>\n<p>第一次分配的主体是市场参与的各要素主体。</p>\n<p>:::primary</p>\n<p>初次分配，即初次收入分配。在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQTQlQkUlRTQlQkMlOUElRTUlODglODYlRTklODUlOEQvMTI3NTQ5MzI/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">社会分配</span>中，初次分配注重效率，是按贡献分配。该贡献包括对创造利润有益的各种因素，如资金、技术、管理、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOTQlOUYlRTQlQkElQTclRTglQjUlODQlRTYlOTYlOTkvMjUyMjU4MD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">生产资料</span>、劳动力、信息、市场、营销等。谁能利用这些要素作出贡献，就能分到一杯羹。这样群策群力，效率便得以提高。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglODklRTYlQUMlQTElRTUlODglODYlRTklODUlOEQ=\">参考</span></p>\n<p>:::</p>\n<h2 id=\"再分配\"><a class=\"markdownIt-Anchor\" href=\"#再分配\"></a> 再分配</h2>\n<p>第二次分配的主体是政府。</p>\n<p>:::primary</p>\n<p>再分配（二次分配）是指政府根据<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQjMlOTUlRTUlQkUlOEIlRTYlQjMlOTUlRTglQTclODQvMzQ2ODczOD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">法律法规</span>，在初次分配的基础上通过征收税收和政府<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklOUQlOUUlRTclQTglOEUlRTYlOTQlQjYlRTUlODUlQTUvNDE1Mzg1Mz9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">非税收入</span>，在各收入主体之间以现金或实物进行的收入再次分配过程。与初次分配不同，再分配中起主导作用的是政府，强调公平的原则，具有通过<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUIlQkQlRTUlQUUlQjYlRTYlOUQlODMlRTUlOEElOUIvNDY1NTk1MD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">国家权力</span>强制进行的特征。除了公平的目标外，再分配也通过教育、健康等<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUYlQkElRTYlOUMlQUMlRTUlODUlQUMlRTUlODUlQjElRTYlOUMlOEQlRTUlOEElQTEvMTA3MzY1NDg/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">基本公共服务</span>的提供，创造<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOUMlQkElRTQlQkMlOUElRTUlQjklQjMlRTclQUQlODkvMTA4NDc2P2Zyb21Nb2R1bGU9bGVtbWFfaW5saW5r\">机会平等</span>的养教环境，以提升社会经济发展的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOEYlQUYlRTYlOEMlODElRTclQkIlQUQlRTYlODAlQTcvMjY1MDY2OT9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">可持续性</span>。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglODklRTYlQUMlQTElRTUlODglODYlRTklODUlOEQ=\">参考</span></p>\n<p>:::</p>\n<h2 id=\"三次分配\"><a class=\"markdownIt-Anchor\" href=\"#三次分配\"></a> 三次分配</h2>\n<p>而第三次分配的主体是民间社会力量，包括企业、社会组织和个人等。</p>\n<p>:::primary</p>\n<p>三次分配有别于前两者，主要是企业、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQTQlQkUlRTQlQkMlOUElRTclQkIlODQlRTclQkIlODcvMzMxOTc3OD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">社会组织</span>、家族、家庭和个人等基于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglODclQUElRTYlODQlQkYlRTUlOEUlOUYlRTUlODglOTkvOTM2NTk1MD9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">自愿原则</span>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklODElOTMlRTUlQkUlQjclRTUlODclODYlRTUlODglOTkvMjE3NzcwOT9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">道德准则</span>，以募集、捐赠、资助、义工等慈善、公益方式对所属资源和财富进行分配。社会组织和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQTQlQkUlRTQlQkMlOUElRTUlOEElOUIlRTklODclOEYvODk4ODcxNT9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">社会力量</span>是三次分配的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglQUQlRTUlOUQlOUElRTUlOEElOUIlRTklODclOEYvODcyNDg4Nz9mcm9tTW9kdWxlPWxlbW1hX2lubGluaw==\">中坚力量</span> 。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglODklRTYlQUMlQTElRTUlODglODYlRTklODUlOEQ=\">参考</span></p>\n<p>:::</p>\n<h2 id=\"三次分配的变化\"><a class=\"markdownIt-Anchor\" href=\"#三次分配的变化\"></a> 三次分配的变化</h2>\n<p>市场👉政府👉社会</p>\n<h2 id=\"军民融合发展\"><a class=\"markdownIt-Anchor\" href=\"#军民融合发展\"></a> 军民融合发展</h2>\n<p>习近平强军思想明确<strong>军民融合发展是兴国之举、强军之策</strong>；明确党对人民军队的绝对领导是人民军队建军之本、强军之魂；明确依法治军是我们党建军治军基本方式；明确作风优良是我军鲜明特色和政治优势。</p>\n<h2 id=\"政治建军\"><a class=\"markdownIt-Anchor\" href=\"#政治建军\"></a> 政治建军</h2>\n<p>政治建军是人民军队的立军之本，抓军队建设首先要从政治上看。</p>\n<h2 id=\"依法治军\"><a class=\"markdownIt-Anchor\" href=\"#依法治军\"></a> 依法治军</h2>\n<p>依法治军是我们党建军治军基本方式。</p>\n<h2 id=\"一流军队要求一流科技\"><a class=\"markdownIt-Anchor\" href=\"#一流军队要求一流科技\"></a> 一流军队要求一流科技</h2>\n<p>一流军队要求一流科技，必须全面实施科技强军战略。</p>\n<p>科技是核心战斗力，是军事发展中最活跃、最具革命性的因素。</p>\n<h2 id=\"坚持党对人民军队的绝对领导\"><a class=\"markdownIt-Anchor\" href=\"#坚持党对人民军队的绝对领导\"></a> 坚持党对人民军队的绝对领导</h2>\n<p><mark>军委主席负责制</mark>是坚持党对人民军队绝对领导的<mark>根本制度和根本实现形式</mark>，在党领导军队的一整套制度体系中处于最高层次，居于统领地位。</p>\n<h2 id=\"听党指挥首要-核心\"><a class=\"markdownIt-Anchor\" href=\"#听党指挥首要-核心\"></a> 听党指挥——首要、核心</h2>\n<p>听党指挥是<strong>灵魂</strong>，决定军队建设的<strong>政治方向</strong>；能打胜仗是<strong>核心</strong>，反映军队的根本职能和军队建设的<strong>根本指向</strong>。</p>\n<h2 id=\"作风优良保证-性质-宗旨-本质\"><a class=\"markdownIt-Anchor\" href=\"#作风优良保证-性质-宗旨-本质\"></a> 作风优良——保证、性质、宗旨、本质</h2>\n<p>作风优良是<strong>保证</strong>，关系军队的性质、宗旨、本色，是人民军队的<strong>鲜明特色和政治优势</strong>，也是人民军队战无不胜、攻无不克的<strong>重要保证</strong>。</p>\n<h2 id=\"作风优良核心\"><a class=\"markdownIt-Anchor\" href=\"#作风优良核心\"></a> 作风优良——核心</h2>\n<h2 id=\"关键一招\"><a class=\"markdownIt-Anchor\" href=\"#关键一招\"></a> 关键一招</h2>\n<p>改革是决定人民军队发展壮大、制胜未来的关键一招。</p>\n<h2 id=\"四个战略支撑\"><a class=\"markdownIt-Anchor\" href=\"#四个战略支撑\"></a> 四个战略支撑</h2>\n<p>‌我军新时代使命任务的四个战略支撑是‌：‌</p>\n<ol>\n<li>\n<p>为巩固‌<ins>中国共产党领导</ins>和<ins>社会主义制度</ins>提供战略支撑‌：确保党的领导和社会主义制度的安全和稳定。</p>\n</li>\n<li>\n<p>为<ins>捍卫‌国家主权、统一、‌领土完整</ins>提供战略支撑‌：维护国家的领土完整和主权不受侵犯。</p>\n</li>\n<li>\n<p>‌为<ins>维护国家海外利益</ins>提供战略支撑‌：保护国家在海外的利益和公民的安全。</p>\n</li>\n<li>\n<p>为<ins>促进‌世界和平与发展</ins>提供战略支撑‌：积极参与国际事务，推动世界和平与发展。</p>\n</li>\n</ol>\n<h2 id=\"一国两制\"><a class=\"markdownIt-Anchor\" href=\"#一国两制\"></a> 一国两制</h2>\n<p>“一国两制”的<mark>根本宗旨</mark>是<ins>维护国家主权、安全、发展利益，保持香港、澳门长期繁荣稳定</ins></p>\n<p><ins>维护国家</ins>安全是“一国两制”的<mark>核心要义</mark><br />\n<ins>维护国家主权、安全、发展利益</ins>是“一国两制”方针的<mark>最高原则</mark>，在这个前提下，香港、澳门保持原有的资本主义制度长期不变，享有高度自治权。</p>\n<p><ins>坚持“爱国者治港”“爱国者治澳”原则</ins>是事关国家主权、安全、发展利益，事关香港、澳门长期繁荣稳定的<mark>根本原则</mark>，是<ins>保证香港、澳门长治久安</ins>的<mark>必然要求</mark></p>\n<h2 id=\"全面贯彻新时代党解决台湾问题的总体方略\"><a class=\"markdownIt-Anchor\" href=\"#全面贯彻新时代党解决台湾问题的总体方略\"></a> 全面贯彻新时代党解决台湾问题的总体方略</h2>\n<ol>\n<li><mark>根本保证</mark>坚持党中央对对台工作的集中统一领导</li>\n<li><mark>历史方位</mark>在中华民族伟大复兴进程中推进祖国统一</li>\n<li><mark>战略思路</mark>在祖国大陆发展进步基础上解决台湾问题</li>\n<li><mark>大政方针</mark>“和平统一、一国两制”</li>\n<li><mark>政治基础</mark>一个中国原则和“九二共识”</li>\n<li><mark>实践途径</mark>推动两岸关系和平发展、融合发展</li>\n<li><mark>根本动力</mark>团结台湾同胞、争取台湾民心</li>\n<li><mark>必然要求</mark>粉碎“台独”分裂图谋</li>\n<li><mark>外部条件</mark>反对外部势力干涉</li>\n<li><mark>战略支撑</mark>决不承诺放弃使用武力</li>\n</ol>\n<h2 id=\"外交工作主线\"><a class=\"markdownIt-Anchor\" href=\"#外交工作主线\"></a> 外交工作主线</h2>\n<p>服务民族复兴，促进人类进步</p>\n<h2 id=\"经济建设主线\"><a class=\"markdownIt-Anchor\" href=\"#经济建设主线\"></a> 经济建设主线</h2>\n<p>供给侧结构性改革</p>\n<h2 id=\"全面深化改革开放主线\"><a class=\"markdownIt-Anchor\" href=\"#全面深化改革开放主线\"></a> 全面深化改革开放主线</h2>\n<p>制度建设</p>\n<h2 id=\"一带一路\"><a class=\"markdownIt-Anchor\" href=\"#一带一路\"></a> 一带一路</h2>\n<p>互联互通——————————主线<br />\n共商共建共享————————原则<br />\n坚持开放、绿色、廉洁————理念<br />\n高标准、可持续、惠民生———目标</p>\n<h2 id=\"党建\"><a class=\"markdownIt-Anchor\" href=\"#党建\"></a> 党建</h2>\n<p>加强党的长期执政能力建设，先进性和纯洁性建设</p>\n<h2 id=\"构建新型国际关系要秉持原则\"><a class=\"markdownIt-Anchor\" href=\"#构建新型国际关系要秉持原则\"></a> 构建新型国际关系要秉持原则</h2>\n<ol>\n<li>相互尊重</li>\n<li>公平正义</li>\n<li>合作共赢原则</li>\n</ol>\n<p><ins>没有和平共处</ins></p>\n<h2 id=\"区分新型国际关系和大国关系\"><a class=\"markdownIt-Anchor\" href=\"#区分新型国际关系和大国关系\"></a> 区分新型国际关系和大国关系</h2>\n<p>国际关系不用和平，大国关系不用共赢。</p>\n<h2 id=\"新型国际关系\"><a class=\"markdownIt-Anchor\" href=\"#新型国际关系\"></a> 新型国际关系</h2>\n<p>尊重—合作—公平</p>\n<h2 id=\"新型国际关系又分为不同的具体要求\"><a class=\"markdownIt-Anchor\" href=\"#新型国际关系又分为不同的具体要求\"></a> 新型国际关系又分为不同的具体要求</h2>\n<p>a、【大国关系格局】——和平共处、总体稳定、均衡发展<br />\nb、周边外交方针<br />\nc、周边外交理念（外交全局的首要位置）<br />\nd、发展中国家——真实亲诚<br />\ne、新型政党关系——求同存异、相互尊重、互学互鉴</p>\n<h2 id=\"党的政治建设首要任务\"><a class=\"markdownIt-Anchor\" href=\"#党的政治建设首要任务\"></a> 党的政治建设首要任务</h2>\n<p>保证全党服从党中央，维护党中央权威和集中统一领导</p>\n<h1 id=\"毛中特\"><a class=\"markdownIt-Anchor\" href=\"#毛中特\"></a> 毛中特</h1>\n<h2 id=\"琐碎-2\"><a class=\"markdownIt-Anchor\" href=\"#琐碎-2\"></a> 琐碎</h2>\n<p><mark>“工农武装割据”和农村包围城市、武装夺取政权</mark>的思想是<strong>毛泽东在<mark>土地革命</mark>战争时期</strong>提出的</p>\n<p><mark>实事求是</mark>，就是一切从实际出发，理论联系实际，坚持在实践中检验真理和发展真理，<mark>实事求是</mark>是<mark>A. 中国共产党的思想路线</mark>，<mark>B. 中国共产党人认识世界、改造世界的根本要求</mark>，<mark>C. 中国共产党的基本思想方法、工作方法、领导方法</mark>，<mark>D. 马克思主义的根本观点</mark></p>\n<p>:::primary<br />\n<strong><mark>群众路线</mark>是党的<mark>生命线</mark>和<mark>根本工作路线</mark></strong><br />\n:::</p>\n<h2 id=\"南方谈话的内容\"><a class=\"markdownIt-Anchor\" href=\"#南方谈话的内容\"></a> 南方谈话的内容</h2>\n<ol>\n<li>计划和市场都是经济手段;</li>\n<li>阐明了社会主义本质;</li>\n<li>提出了“发展才是硬道理”的重要论断</li>\n<li>提出判断改革开放和各项工作成败得失的“三个有利于”标准;</li>\n<li>强调加强党的建设;</li>\n<li>关于社会主义初级阶段的长期性和前途</li>\n</ol>\n<h2 id=\"速记口诀一二三四\"><a class=\"markdownIt-Anchor\" href=\"#速记口诀一二三四\"></a> 速记口诀一二三四</h2>\n<p>一大立党，二大立纲，三大对国共合作的方针和办法做了正式决定，即“党内合作”，四大提出无产阶级领导校和工农同盟军思想，五大批评陈独秀右倾错误，六大提出中国革命的性质是资产阶级民主革命，七大将毛理论命名为毛思想，并将其作为党的指导思想写入党章，八大提出主要矛盾，十二大提出建设中国特色社会主义社会，十三大系统地论述了关于社会主义初级阶段的理论，十四大概括了中国特色社会主义理论的主要内容，系统释了这一理论的历史地位和指导意义，十五大邓理论被确立为中国共产党的指导思想，并写入了党章。</p>\n<ol>\n<li>一党</li>\n<li>二纲</li>\n<li>三合作</li>\n<li>四权</li>\n<li>五批</li>\n<li>六性</li>\n<li>七入</li>\n<li>八矛</li>\n<li>十二大建中特</li>\n<li>十三大论阶段 （邓小平轮廓）</li>\n<li>十四大系阐释</li>\n<li>十五大邓入党章</li>\n<li>十八大进入新时代</li>\n</ol>\n<p>毛思想-&gt;七大（毛七七）</p>\n<p>邓理论-&gt;十五大</p>\n<p>三个代表-&gt;十六大</p>\n<p>科学发展观-&gt;十七大</p>\n<p>习思想-&gt;十九大</p>\n<h2 id=\"一个神奇的口诀\"><a class=\"markdownIt-Anchor\" href=\"#一个神奇的口诀\"></a> 一个神奇的口诀</h2>\n<p><mark>三线五纲，四体六康</mark></p>\n<h2 id=\"十三大\"><a class=\"markdownIt-Anchor\" href=\"#十三大\"></a> 十三大</h2>\n<p>党的十一届三中全会的胜利召开，<mark>结束了粉碎“四人帮”后党</mark>和国家工作在徘徊中前进的局面，标志着中国共产党<mark>重新确立了马克思主义的思想路线、政治路线和组织路线</mark>，开启了我国<mark>改革开放和社会主义现代化建设历史新时期</mark>，实现了历史性的伟大转折。</p>\n<h2 id=\"十八大\"><a class=\"markdownIt-Anchor\" href=\"#十八大\"></a> 十八大</h2>\n<p>中共十八大的召开，标志着中国已经进入全面建成<mark>小康社会的决定性阶段</mark>，<mark>开启了中国特 色社会主义新时代。</mark></p>\n<h2 id=\"毛泽东思想的地位\"><a class=\"markdownIt-Anchor\" href=\"#毛泽东思想的地位\"></a> 毛泽东思想的地位</h2>\n<p>毛泽东思想是马克思主义中国化的<mark>第一次历史性飞跃</mark>的理论成 果；是<mark>中国革命和建设的科学指南</mark>；是<mark>党和人民的宝贵精神财富</mark>。</p>\n<h2 id=\"有关中心问题\"><a class=\"markdownIt-Anchor\" href=\"#有关中心问题\"></a> 有关中心问题</h2>\n<p>①<mark>无产阶级的领导权是中国革命的中心问题</mark>。</p>\n<p>②在<mark>中国民主革命</mark>中，无产阶级领导权的中心问题是<mark>农民问题</mark>。</p>\n<p>③毛泽东在《国民革命与农民运动》中还提到“农民问题乃国民革命的中心问题”。</p>\n<p>回答问题的时候要注意题干具体考查的角度。</p>\n<h2 id=\"革命的性质1948毛泽东指出\"><a class=\"markdownIt-Anchor\" href=\"#革命的性质1948毛泽东指出\"></a> 革命的性质（1948毛泽东指出…）</h2>\n<p>中国是一个封建经济占明显优势的半殖民地半封建社会，革命是为了终结这个半殖民地半封建的社会形态；中国革命的对象主要是<mark>帝国主义和封建主义势力</mark>；革命的性质是为了推翻这两个主要敌人的民族革命和民主革命</p>\n<h2 id=\"谁\"><a class=\"markdownIt-Anchor\" href=\"#谁\"></a> 谁?</h2>\n<p>中国革命的中心问题、新民主主义苹命理论的<mark>核心问题</mark>：<mark>无产阶级的领导权问题</mark></p>\n<p>中国<mark>革命的实质</mark>：<mark>党领导下的农民革命</mark></p>\n<p>中国革命的最<mark>基本动力</mark>：<mark>无产阶级</mark>;</p>\n<p><mark>主力军</mark>：<mark>农民阶级</mark></p>\n<h2 id=\"打谁\"><a class=\"markdownIt-Anchor\" href=\"#打谁\"></a> 打谁?</h2>\n<p>中国革命的<mark>首要问题</mark>：<mark>分清敌友</mark></p>\n<p>中国<mark>革命的对象</mark>：<mark>帝国主义(首要对象)</mark>、<mark>封建主义</mark>和<mark>官僚资本主义</mark></p>\n<h2 id=\"为什么打\"><a class=\"markdownIt-Anchor\" href=\"#为什么打\"></a> 为什么打?</h2>\n<p>中国革命的<mark>根本问题</mark>：<mark>国家政权问题</mark></p>\n<p>中国革命的<mark>基本问题</mark>：<mark>农民问题</mark></p>\n<h2 id=\"怎么打\"><a class=\"markdownIt-Anchor\" href=\"#怎么打\"></a> 怎么打?</h2>\n<p>中国革命的主要内容：没收封建地主阶级的士地归农民所有</p>\n<h2 id=\"中国民主革命的基本内容\"><a class=\"markdownIt-Anchor\" href=\"#中国民主革命的基本内容\"></a> 中国民主革命的基本内容</h2>\n<p>中国革命走农村包围城市、武装夺取政权的道路，必须处理好土地革命、武装斗争、农村革命根据地建设三者之间的关系。<strong><ins>土地革命</ins>是民主革命的<mark>基本内容</mark>；<ins>武装斗争</ins>是中国革命的<mark>主要形式</mark>，是农村革命根据地建设和土地革命的强<mark>有力保证</mark>；<ins>农村革命根据地</ins>是中国革命的<mark>战略阵地</mark>，是进行武装斗争和开展土地<mark>革命的依托</mark>。</strong></p>\n<h2 id=\"统一战线的经验\"><a class=\"markdownIt-Anchor\" href=\"#统一战线的经验\"></a> 统一战线的经验</h2>\n<p>新民主主义革命时期，中国共产党领导的统一战线，先后经过了第一次国共合作的统一战线、工农民主统一战线、抗日民族统一战线、人民民主统一战线等几个时期，积累了丰富的经验。<strong>其中，最根本的经验就是正确处理好与<mark>资产阶级</mark>的关系</strong>当党能够正确处理与资产阶级建立统一战线或被迫分裂统一战线的问题时，党的发展和巩固就会前进；反之，党的发展和巩固就会后退。</p>\n<h2 id=\"建立统一战线的必要性\"><a class=\"markdownIt-Anchor\" href=\"#建立统一战线的必要性\"></a> 建立统一战线的必要性</h2>\n<p>建立最广泛的统一战线，是由中国半殖民地半封建社会的阶级状况所决定的。毛泽东指出：“中国社会是一个两头小中间大的社会，无产阶级和地主大资产阶级都只占少数，最广大的人民是农民、城市小资产阶级以及其他的中间阶级。”作为无产阶级先锋队的中国共产党所领导的革命力量，要战胜作为地主阶级和官僚资产阶级集中代表的国民党所领导的强大的反革命力量，<strong>就必须把农民、城市小资产阶级以及其他的中间阶级都团结在自己的周围，结成最广泛的统一战线。</strong></p>\n<h2 id=\"新民主主义革命时期的统一战线\"><a class=\"markdownIt-Anchor\" href=\"#新民主主义革命时期的统一战线\"></a> 新民主主义革命时期的统一战线</h2>\n<p>党领导的统一战线，先后经过了<mark>第一次国共合作的统一战线</mark>、<mark>工农民主统一战线</mark>、<mark>抗日民族统一战线</mark>、<mark>人民民主统一战线</mark>等几个时期。</p>\n<p><mark>以国共合作为基础</mark>的是国民革命联合战线(<mark>第一次国共合作的统一战线</mark>)与<mark>抗日民族统一战线。</mark></p>\n<p><ins>国共就合作了2次，一次是推翻封建主义制度，一次是抗日合作</ins></p>\n<h2 id=\"新民主主义革命理论的基本纲领\"><a class=\"markdownIt-Anchor\" href=\"#新民主主义革命理论的基本纲领\"></a> 新民主主义革命理论的基本纲领</h2>\n<p><strong>新民主主义文化是科学的</strong>，是<mark>反对一切封建思想和迷信思想</mark>主张实事求是、客观真理及理论和实践的一致性。对于封建时代创造的文化，应<mark>剔除其封建糟粕</mark>，<mark>吸收其民主性精华</mark>。同时，<strong>要尊重中国的历史，<mark>反对民族虚无主义</mark>，以历史唯物主义的态度对待古今中外文化，发展民族新文化，提高民族自信心。</strong></p>\n<h2 id=\"两步走\"><a class=\"markdownIt-Anchor\" href=\"#两步走\"></a> ”两步走“</h2>\n<p>由于中国革命的反帝反封建的双重任务，决定了革命分两步走：第一步是先进行推翻三座大山的<mark>新民主主义革命</mark>，第二步是进行<mark>社会主义革命</mark>。</p>\n<h2 id=\"一次革命论和二次革命论都是错误的\"><a class=\"markdownIt-Anchor\" href=\"#一次革命论和二次革命论都是错误的\"></a> “一次革命论”和“二次革命论”都是错误的</h2>\n<p>“左”倾<mark>教条主义的“一次革命论”(如“无间断”革命论)的错误</mark>在于，只看到了民主革命与社会主义革命的联系，而混淆了民主革命与社会主义革命的区别，在反帝反封建的同时，也反对民族资产阶级，否定了中国革命的阶段性。而<mark>右的“二次革命论”的错误</mark>在于，只看到了民主革命与社会主义革命的区别，而没有看到两个革命阶段的联系，放弃了党对民主革命的领导权。</p>\n<h2 id=\"两头小中间大的社会\"><a class=\"markdownIt-Anchor\" href=\"#两头小中间大的社会\"></a> ”两头小中间大”的社会</h2>\n<p>毛泽东指出：“中国社会是一个两头小中间大的社会，<mark>无产阶级</mark>和<mark>地主大资产阶级</mark>都只占<ins>少数</ins>，最<ins>广大的人民</ins>是<mark>农民、城市小资产阶级以及其他的中间阶级</mark>。”</p>\n<h2 id=\"三件法宝\"><a class=\"markdownIt-Anchor\" href=\"#三件法宝\"></a> 三件“法宝”</h2>\n<p>统一战线、武装斗争、党的建设</p>\n<p>:::primary<br />\n战斗党<br />\n:::</p>\n<h2 id=\"战胜敌人的两个基本武器\"><a class=\"markdownIt-Anchor\" href=\"#战胜敌人的两个基本武器\"></a> 战胜敌人的两个基本武器</h2>\n<p>统一战线、武装斗争</p>\n<p>:::primary<br />\n战斗<br />\n:::</p>\n<h2 id=\"中国革命道路\"><a class=\"markdownIt-Anchor\" href=\"#中国革命道路\"></a> 中国革命道路</h2>\n<p>土地革命、武装斗争、农村革命根据地建设</p>\n<p>:::primary<br />\n土斗根<br />\n:::</p>\n<h2 id=\"活的灵魂\"><a class=\"markdownIt-Anchor\" href=\"#活的灵魂\"></a> 活的灵魂</h2>\n<p>实事求是、群众路线、独立自主</p>\n<p>:::primary<br />\n实众独<br />\n:::</p>\n<h2 id=\"优良作风\"><a class=\"markdownIt-Anchor\" href=\"#优良作风\"></a> 优良作风</h2>\n<p>理论联系实际、密切联系群众、批评与自我批评</p>\n<h2 id=\"新民主主义革命纲领最具特色一项\"><a class=\"markdownIt-Anchor\" href=\"#新民主主义革命纲领最具特色一项\"></a> 新民主主义革命纲领最具特色一项</h2>\n<p><mark>保护民族工商业</mark>，是新民主主义经济纲领中极具特色的一项内容。在新民主主义条件下保护民族工商业，发展资本主义，是由中国落后的生产力和新民主主义革命的性质所决定的。新民主主义革命的对象是帝国主义、封建主义和官僚资本主义，而不是一般地消灭资本主义和资产阶级。</p>\n<h2 id=\"新民主主义革命胜利的历史意义\"><a class=\"markdownIt-Anchor\" href=\"#新民主主义革命胜利的历史意义\"></a> 新民主主义革命胜利的历史意义</h2>\n<p><strong>新民主主义革命的伟大成就，为实现中华民族伟大复兴创造了根本社会条件。</strong></p>\n<h2 id=\"各个阶段中国社会的主要矛盾\"><a class=\"markdownIt-Anchor\" href=\"#各个阶段中国社会的主要矛盾\"></a> 各个阶段中国社会的主要矛盾</h2>\n<p>1840—1949，中华民族与帝国主义的矛盾。</p>\n<p>1949—1952，与帝国主义、封建主义、国民党残余势力之间的矛盾。</p>\n<p>1952—1956，工人阶级和资产阶级之间的矛盾。（土改基本完成）</p>\n<p>1956—1978，人民对于建立先进的工业国的要求同落后的农业国的现实之间的矛盾，人民对于经济文化迅速发展的需要同当前经济文化不能满足人民需要的状况之间的矛盾。</p>\n<p>1978，人民日益增长的物质文化需要同落后的社会生产之间的矛盾。</p>\n<p>2018，人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾。</p>\n<h2 id=\"互助组-常年互助组-初级合作社-高级合作社\"><a class=\"markdownIt-Anchor\" href=\"#互助组-常年互助组-初级合作社-高级合作社\"></a> 互助组、常年互助组、初级合作社、高级合作社</h2>\n<p><strong>互助组</strong>(<mark>包括临时互助组和常年互助组两种形式</mark>)不涉及生产资料问题，只是在生产方面组织起来、互帮互助，是农业合作化的最初过渡形式，具有<ins>社会主义萌芽性质</ins>。<mark>初级农业生产合作社</mark>以土地入股和统一经营为特点，实行集体劳动，产品分配采取按劳分配和土地入股分红相结合，<ins>具有半社会主义性质</ins>。<mark>高级农业生产合作社</mark>实行生产资料农民集体所有，实行按劳分配，具有<ins>完全的社会主义性质</ins>。</p>\n<h2 id=\"民族资产阶级的两面性\"><a class=\"markdownIt-Anchor\" href=\"#民族资产阶级的两面性\"></a> 民族资产阶级的两面性</h2>\n<p>既有<mark>剥削</mark>工人取得利润的一面，又有拥护中国共产党的领导、拥护宪法、愿意<mark>接受社会主义改造</mark>的一面</p>\n<h2 id=\"民族资产阶级与工人阶级的矛盾的两重性\"><a class=\"markdownIt-Anchor\" href=\"#民族资产阶级与工人阶级的矛盾的两重性\"></a> 民族资产阶级与工人阶级的<strong>矛盾</strong>的两重性</h2>\n<p>既有剥削者与被剥削者的阶级利益相互<mark>对立的对抗性</mark>的一面，又有相互合作、具有相同利益的<mark>非对抗性</mark>的一面</p>\n<h2 id=\"资本主义工商业的社会主义改造经历了三个步骤\"><a class=\"markdownIt-Anchor\" href=\"#资本主义工商业的社会主义改造经历了三个步骤\"></a> 资本主义工商业的社会主义改造经历了三个步骤</h2>\n<p>第一步(<mark>初级形式的国家资本主义</mark>)和第二步(<mark>个别企业的公私合营</mark>)的企业利润分配都是<ins>四马分肥</ins>。第三步(<mark>全行业的公私合营</mark>)在分配上实行<ins>定股定息</ins>。</p>\n<p>:::primary</p>\n<p>第一步实行<mark>初级形式的国家资本主义</mark>。国家在私营工业中实行委托加工、计划订货、统购包销，这主要是<mark>同资本家在企业外部的合作</mark>。</p>\n<p>第二步实行<mark>个别企业的公私合营</mark>。这是社会主义成分同<mark>资本主义成分在企业内部的合作</mark>。</p>\n<p>第三步实行<mark>全行业的公私合营</mark>。全行业公私合营后，国家对合营企业进行清产核资、定股定息，委派人员负责企业的生产经营管理，统一调配企业的人、财、物，生产资料为国家所有。全行业公私合营后，企业的生产关系已经发生了根本的变化，基本上成为<mark>社会主义国营性质的企业</mark>。</p>\n<p>:::</p>\n<h2 id=\"推进手工业合作化的方针\"><a class=\"markdownIt-Anchor\" href=\"#推进手工业合作化的方针\"></a> 推进手工业合作化的方针</h2>\n<p>在推进手工业合作化的过程中，中国共产党采取的是<mark>积极领导、稳步前进的方针。</mark></p>\n<h2 id=\"推进农业社会主义改造的原则\"><a class=\"markdownIt-Anchor\" href=\"#推进农业社会主义改造的原则\"></a> 推进农业社会主义改造的原则</h2>\n<p>这条道路遵循<mark>自愿互利、典型示范和国家帮助</mark>的原则，以互助合作的优越性吸引农民走互 助合作道路。</p>\n<p>:::primary</p>\n<p>士力架</p>\n<p>:::</p>\n<h2 id=\"资本主义工商业社会主义改造的方针\"><a class=\"markdownIt-Anchor\" href=\"#资本主义工商业社会主义改造的方针\"></a> 资本主义工商业社会主义改造的方针</h2>\n<p>和平赎买</p>\n<h2 id=\"经济成分构成及阶级构成\"><a class=\"markdownIt-Anchor\" href=\"#经济成分构成及阶级构成\"></a> 经济成分构成及阶级构成</h2>\n<p>三种主要的经济成分：社会主义经济、个体经济、资本主义经济</p>\n<p>阶级构成：工人、农民、民族资产阶级、其他小资产阶级</p>\n<p>其中，<ins>半社会主义性质的合作社经济是<mark>个体经济</mark>向<mark>社会主义集体经济</mark>过渡的形式</ins>，<ins>国家资本主义经济是<mark>私人资本主义经济</mark>向<mark>社会主义国营经济</mark>过渡的形式。</ins></p>\n<h2 id=\"萌芽性质-半社会主义性质-完全社会主义性质\"><a class=\"markdownIt-Anchor\" href=\"#萌芽性质-半社会主义性质-完全社会主义性质\"></a> 萌芽性质、半社会主义性质、完全社会主义性质</h2>\n<p>社会主义萌芽：农业互助组，手工业供销小组，资本主义工商业初级国家资本主义经济</p>\n<p>半社会主义：农业初级生产合作社，手工业供销合作社，工商业个别企业公私合营</p>\n<p>完全社会主义：农业高级生产合作社，手工业生产合作社，工商业全行业公私合营</p>\n<p>:::primary</p>\n<p>工商业:高级国家资本主义=个别企业公私合营+全行业公私合营</p>\n<p>:::</p>\n<h2 id=\"1956年年底社会主义改造的基本完成\"><a class=\"markdownIt-Anchor\" href=\"#1956年年底社会主义改造的基本完成\"></a> 1956年年底社会主义改造的基本完成</h2>\n<ol>\n<li>标志着中国历史上长达数千年的阶级剥削制度的结束</li>\n<li>实现了由新民主主义向社会主义的转变</li>\n<li>标志着社会主义基本制度在我国确立</li>\n<li>标志着我国的社会主义初级阶段从此开始</li>\n</ol>\n<h2 id=\"两个结合和两次结合\"><a class=\"markdownIt-Anchor\" href=\"#两个结合和两次结合\"></a> 两个结合和“两次结合”</h2>\n<p>毛泽东的两次结合：马+革命、马+建设道路</p>\n<p>习近平的两个结合：马+中国国情、马+传统文化</p>\n<h2 id=\"论十大关系探索中国社会主义建设道路的良好开端\"><a class=\"markdownIt-Anchor\" href=\"#论十大关系探索中国社会主义建设道路的良好开端\"></a> 《论十大关系》——探索中国社会主义建设道路的良好开端</h2>\n<p>毛泽东在1956年4月25日中央政治局扩大会议和5月2日最高国务会议上作《论十大关系》的报告。<strong>强调<ins>以苏为鉴、独立自主地探索适合中国情况的社会主义建设道路</ins>。其中，《论十大关系》中的第一大关系，即<ins>重工业和轻工业、农业的关系</ins>。</strong></p>\n<p>在《论十大关系》的报告中，初步总结了我国社会主义建设的经验，明确提出要以苏为鉴，独立自主地探索适合中国情况的社会主义建设道路。《<strong>论十大关系》标志着党探索中国社会主义建设道路的良好开端</strong>。</p>\n<p>:::primary</p>\n<p>十全十美良好开端</p>\n<p>:::</p>\n<h2 id=\"关于正确处理人民内部矛盾的问题\"><a class=\"markdownIt-Anchor\" href=\"#关于正确处理人民内部矛盾的问题\"></a> 《关于正确处理人民内部矛盾的问题》</h2>\n<p>《关于正确处理人民内部矛盾的问题》一文，是一篇重要的马克思主义文献。它创造性地阐述了<ins>社会主义社会矛盾学说</ins>，<ins>是对科学社会主义理论的重要发展</ins>，<ins>对中国社会主义事业具有长远的指导意义</ins>。</p>\n<p>《关于正确处理人民内部矛盾的问题》指出，<strong>对于政治思想领域的人民内部矛盾，<mark>实行“团结—批评—团结”的方针</mark>，<mark>坚持说服教育、讨论的方法</mark>。</strong></p>\n<h2 id=\"中国特色社会主义理论体系形成发展的帽子题\"><a class=\"markdownIt-Anchor\" href=\"#中国特色社会主义理论体系形成发展的帽子题\"></a> 中国特色社会主义理论体系形成发展的帽子题</h2>\n<p>中国特色社会主义理论体系形成发展的<ins>社会历史条件</ins>：【<mark>国际背景+历史条件+实践基础</mark>】</p>\n<p><mark>而如果光问<ins>历史条件</ins>就不一样，<ins>社会历史条件</ins>范围要大一些</mark></p>\n<p>:::primary</p>\n<p>国际形势的深刻变化和世界发展新趋势——国际背景;</p>\n<p>建设社会主义正反两方面经验和我国发展的历史方位——历史条件;</p>\n<p>改革开放和社会主义现代化建设实践——实践基础</p>\n<p>:::</p>\n<h2 id=\"中国特色社会主义理论体系形成发展的历史条件\"><a class=\"markdownIt-Anchor\" href=\"#中国特色社会主义理论体系形成发展的历史条件\"></a> 中国特色社会主义理论体系形成发展的历史条件</h2>\n<p>党的十一届三中全会以后，中国共产党人鲜明指出建设社会主义没有固定的模式，**必须结合中国实际，在实践中不懈探索和回答什么是社会主义、怎样建设社会主义这一基本问题。**正是在探索和回答这一首要的基本的理论问题的过程中，我们党开创了中国特色社会主义的伟大事业。</p>\n<h2 id=\"马克思主义中国化的第一次飞跃与第二次飞跃\"><a class=\"markdownIt-Anchor\" href=\"#马克思主义中国化的第一次飞跃与第二次飞跃\"></a> 马克思主义中国化的第一次飞跃与第二次飞跃</h2>\n<p>==马克思主义中国化的第一次飞跃，是党在探索中国革命道路的过程中完成的。==在毛泽东思想的指导下，党领导人民走以农村包围城市的道路，取得了新民主主义革命的胜利；走具有中国特色的社会主义改造的道路，积极探索社会主义建设道路，取得社会主义革命和建设的伟大成就。</p>\n<p><mark>马克思主义中国化时代化的第二次飞跃是中国特色社会主义理论体系。</mark></p>\n<h2 id=\"毛泽东思想的精髓\"><a class=\"markdownIt-Anchor\" href=\"#毛泽东思想的精髓\"></a> 毛泽东思想的精髓</h2>\n<p>实事求是</p>\n<h2 id=\"邓小平理论的精髓\"><a class=\"markdownIt-Anchor\" href=\"#邓小平理论的精髓\"></a> 邓小平理论的精髓</h2>\n<p>解放思想，实事求是</p>\n<h2 id=\"十三大提出社会主义初级阶段基本路线\"><a class=\"markdownIt-Anchor\" href=\"#十三大提出社会主义初级阶段基本路线\"></a> 十三大提出社会主义初级阶段基本路线</h2>\n<p>基本途径：一个中心，两个基本点（以经济建设为中心，坚持改革开放，坚持四项基本原则）</p>\n<p>跟本立足点：自力更生，艰苦创业</p>\n<p>领导力量和依靠力量：领导和团结各族人民</p>\n<p>奋斗目标：建设富强民主文明的社会主义现代化国家</p>\n<h2 id=\"几个帽子\"><a class=\"markdownIt-Anchor\" href=\"#几个帽子\"></a> 几个帽子</h2>\n<p>改革——是社会主义社会发展的直接动力;</p>\n<p>阶级斗争——是阶级社会发展的直接动力;</p>\n<p>科技——是第一生产力；</p>\n<p>科技革命–是社会发展的重要动力。</p>\n<p>解放生产力，发展生产力，是社会主义的根本任务。</p>\n<h2 id=\"三个有利于\"><a class=\"markdownIt-Anchor\" href=\"#三个有利于\"></a> 三个有利于</h2>\n<ol>\n<li>是否有利于发展社会主义生产力</li>\n<li>是否有利于增强社会主义国家的综合国力</li>\n<li>是否有利于提高人民的生活水平</li>\n</ol>\n<p>:::primary</p>\n<p>生国人</p>\n<p>:::</p>\n<h2 id=\"正确认识和处理改革-发展-稳定的关系\"><a class=\"markdownIt-Anchor\" href=\"#正确认识和处理改革-发展-稳定的关系\"></a> 正确认识和处理改革、发展、稳定的关系</h2>\n<p>改革是动力，发展是目的，稳定是前提。要把改革的力度、发展的速度和社会可承受的程度统一起来，<strong>把不断改善人民生活作为处理改革、发展、稳定关系的重要结合点</strong>，在社会稳定中推进改革发展，通过改革发展促进社会稳定。</p>\n<h2 id=\"三个代表重要思想的花边\"><a class=\"markdownIt-Anchor\" href=\"#三个代表重要思想的花边\"></a> “三个代表”重要思想的”花边“</h2>\n<p>“三个代表”重要思想是在对<mark>冷战结束后国际局势科学判断的基础上形成的</mark>，是在科学判断党的<mark>历史方位和总结历史经验</mark>的基础上提出来的，是在建设<mark>中国特色社会主义伟大实践</mark>的基础上形成的。</p>\n<h2 id=\"三个代表重要思想\"><a class=\"markdownIt-Anchor\" href=\"#三个代表重要思想\"></a> “三个代表”重要思想</h2>\n<ol>\n<li>中国共产党始终代表中国先进生产力的<ins>发展要求</ins></li>\n<li>始终代表中国先进文化的<ins>前进方向</ins></li>\n<li>始终代表中国最广大人民的<ins>根本利益</ins></li>\n</ol>\n<h2 id=\"新民主主义革命时期-1921-1949\"><a class=\"markdownIt-Anchor\" href=\"#新民主主义革命时期-1921-1949\"></a> 新民主主义革命时期 1921-1949</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">子时期</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>党的创立和大革命时期</strong></td>\n<td style=\"text-align:center\">1921-1927</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>土地革命战争时期</strong></td>\n<td style=\"text-align:center\">1927-1937</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>全民族抗日战争时期</strong></td>\n<td style=\"text-align:center\">1937-1945</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>解放战争时期</strong></td>\n<td style=\"text-align:center\">1945-1949</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"新民主主义社会时期-1949-1956\"><a class=\"markdownIt-Anchor\" href=\"#新民主主义社会时期-1949-1956\"></a> 新民主主义社会时期 1949-1956</h2>\n<h2 id=\"社会主义建设时期-1956-1978\"><a class=\"markdownIt-Anchor\" href=\"#社会主义建设时期-1956-1978\"></a> 社会主义建设时期 1956-1978</h2>\n<h2 id=\"1978之后\"><a class=\"markdownIt-Anchor\" href=\"#1978之后\"></a> 1978之后</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">大事件</th>\n<th style=\"text-align:center\">时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">十一届三中全会提出改革开放</td>\n<td style=\"text-align:center\">1978</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">提出命题“建设有中国特色的社会主义</td>\n<td style=\"text-align:center\">1982</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">苏联解体，冷战结束</td>\n<td style=\"text-align:center\">1991</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">南方谈话</td>\n<td style=\"text-align:center\">1992</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">中共十四大，确立社会主义市场经济体制的改革目标</td>\n<td style=\"text-align:center\">1992</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">邓小平理论提出</td>\n<td style=\"text-align:center\">1997</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三个代表指导思想</td>\n<td style=\"text-align:center\">2002</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"科学发展观\"><a class=\"markdownIt-Anchor\" href=\"#科学发展观\"></a> 科学发展观</h2>\n<p>第一要义：发展</p>\n<p>核心立场：以人为本</p>\n<p>基本要求：全面可持续发展</p>\n<p>根本方法：统筹兼顾</p>\n<p>保持先进性是党自身建设的根本任务和永恒课题</p>\n<h2 id=\"科学发展观的形成条件\"><a class=\"markdownIt-Anchor\" href=\"#科学发展观的形成条件\"></a> 科学发展观的形成条件</h2>\n<ol>\n<li>是在深刻把握我国基本国情和新的阶段性特征的基础 上形成和发展的。</li>\n<li>是在深入总结改革开放以来实践经验的基础上形成和发展的。</li>\n<li>是在深刻分析国际形势及借鉴国外发展经验基础上形成和发展的。</li>\n</ol>\n<h2 id=\"领导人的思想精髓\"><a class=\"markdownIt-Anchor\" href=\"#领导人的思想精髓\"></a> 领导人的思想精髓</h2>\n<p>毛泽东：实事求是<br />\n邓小平：解放思想，实事求是<br />\n江泽民：解放思想，实事求是，与时俱进<br />\n胡锦涛：解放思想，实事求是，与时俱进，求真务实</p>\n<h1 id=\"思修\"><a class=\"markdownIt-Anchor\" href=\"#思修\"></a> 思修</h1>\n<h2 id=\"琐碎-3\"><a class=\"markdownIt-Anchor\" href=\"#琐碎-3\"></a> 琐碎</h2>\n<p>中国特色社会主义建设实践是社会主义核心价值观的现实基础<br />\n先进性、人民性和真实性是社会主义核心价值观的道义力量</p>\n<h2 id=\"道德作用\"><a class=\"markdownIt-Anchor\" href=\"#道德作用\"></a> 道德作用</h2>\n<p>认识功能—反映揭示（行为前）<br />\n规范功能—规范引导（行为中）<br />\n调节功能—指导纠正（行为后）</p>\n<h2 id=\"爱国主义\"><a class=\"markdownIt-Anchor\" href=\"#爱国主义\"></a> 爱国主义</h2>\n<p>爱国主义是 道德要求 政治原则 法律规范 精神纽带</p>\n<p>以爱国主义为核心的民族精神，以改革创新为核心的时代精神</p>\n<h2 id=\"信念\"><a class=\"markdownIt-Anchor\" href=\"#信念\"></a> 信念</h2>\n<p>执着性、支撑性、多样性</p>\n<h2 id=\"理想\"><a class=\"markdownIt-Anchor\" href=\"#理想\"></a> 理想</h2>\n<p>超越性、实践性、时代性</p>\n<h2 id=\"价值观\"><a class=\"markdownIt-Anchor\" href=\"#价值观\"></a> 价值观</h2>\n<p>先进性、人民性、真实性</p>\n<h2 id=\"区分创造精神梦想精神团结精神和奋斗精神\"><a class=\"markdownIt-Anchor\" href=\"#区分创造精神梦想精神团结精神和奋斗精神\"></a> 区分创造精神，梦想精神，团结精神，和奋斗精神</h2>\n<p>神话就是梦想，发明一类就是创造，开垦治理河流之类的就是奋斗，剩下的那个就是团结</p>\n<h2 id=\"文化\"><a class=\"markdownIt-Anchor\" href=\"#文化\"></a> 文化</h2>\n<p>文化是涵养民族心理、民族个性、民族精神的摇篮，而不是祖国大好河山</p>\n<h2 id=\"祖国河山\"><a class=\"markdownIt-Anchor\" href=\"#祖国河山\"></a> 祖国河山</h2>\n<p>祖国的河山在人们的心中占据着<mark>至高无上</mark>的地位，祖国的山山水水<mark>滋养哺育着她的子子孙孙</mark>。“禾苗离土即死，国家无土难存”,祖国的大好河山，不只是自然风光，更<mark>是主权、财富、民族发 展和进步</mark>的基本载体。因此，每一个爱国者都会把“保我国土” “爱我家乡”、维护祖国领土的完整和统一，作为自己的神圣使命和义不容辞的责任。</p>\n<h2 id=\"中华传统美德的根本要求\"><a class=\"markdownIt-Anchor\" href=\"#中华传统美德的根本要求\"></a> 中华传统美德的根本要求</h2>\n<p>中华传统美德的根本要求是公义胜私欲</p>\n<h2 id=\"道德的作用\"><a class=\"markdownIt-Anchor\" href=\"#道德的作用\"></a> 道德的作用</h2>\n<ol>\n<li>道德为经济基础的形成、巩固和发展服务，是一种重要的精神力量。</li>\n<li>道德对其他社会意识形态的存在有着重大的影响</li>\n<li>道德通过调整人们之间的关系维护社会秩序和稳定</li>\n<li>道德是提高人的精神境界、促进人的自我完善，推动人的全面发展的内在动力</li>\n<li>在阶级社会中，道德是阶级斗争的重要工具</li>\n</ol>\n<h2 id=\"公共生活的四个特征\"><a class=\"markdownIt-Anchor\" href=\"#公共生活的四个特征\"></a> 公共生活的四个特征</h2>\n<ol>\n<li>一是活动范围的<ins>广泛性</ins></li>\n<li>二是活动内容的<ins>开放性</ins></li>\n<li>三是交往对象的<ins>复杂性</ins></li>\n<li>四是活动方式的<ins>多样性</ins></li>\n</ol>\n<h2 id=\"全心全意为人民服务是贯穿中国革命道德的一根红线\"><a class=\"markdownIt-Anchor\" href=\"#全心全意为人民服务是贯穿中国革命道德的一根红线\"></a> 全心全意为人民服务是贯穿中国革命道德的一根红线</h2>\n<ol>\n<li>是坚持历史唯物主义必然要求</li>\n<li>是中国共产党践行根本宗旨</li>\n<li>也是社会主义道德观集中体现</li>\n<li>是全体中国人民共同遵循道德要求</li>\n<li>是社会主义经济基础和人际关系的客观要求</li>\n<li>是社会主义市 场经济健康发展的要求</li>\n<li>是先进性要求和广泛性要求的统一</li>\n<li>为人民服务是社会主义道德的核心</li>\n<li>集体主义是社会主义道德的原则</li>\n</ol>\n<h2 id=\"法律的作用\"><a class=\"markdownIt-Anchor\" href=\"#法律的作用\"></a> 法律的作用</h2>\n<ol>\n<li>普遍适用（遵守）</li>\n<li>优先适用</li>\n<li>不可违返（遵守+制裁）</li>\n</ol>\n<h1 id=\"时政2024年\"><a class=\"markdownIt-Anchor\" href=\"#时政2024年\"></a> 时政（2024年）</h1>\n<h2 id=\"二十届三中全会\"><a class=\"markdownIt-Anchor\" href=\"#二十届三中全会\"></a> 二十届三中全会</h2>\n<ol>\n<li>通过了《中共中央关于进一步全面深化改革、推进中国式现代化的决定》（最重要成果）</li>\n<li>当前和今后一个时期是以中国式现代化全面推进强国建设、民族复兴伟业的关键时期</li>\n<li><mark>高水平社会主体市场经济体制</mark>是中国式现代化的<ins>重要保障</ins></li>\n<li><mark>教育、科技、人才</mark>是中国式现代化的<ins>基础性、战略性支撑</ins></li>\n<li><mark>城乡融合发展</mark>是中国式现代化<ins>的必然要求</ins></li>\n<li><mark>开放</mark>是中国式现代化的<ins>鲜明标识</ins></li>\n<li><mark>发展全过程人民民主</mark>是中国式现代化的<ins>本质要求</ins></li>\n<li><mark>法治</mark>是中国式现代化的<ins>重要保障</ins></li>\n<li>在<mark>发展中保障和改善民生</mark>是中国式现代化的<ins>重大任务</ins></li>\n<li><mark>国家安全</mark>是中国式现代化行稳致远的<ins>重要基础</ins></li>\n<li><mark>国防和军队现代化</mark>是中国式现代化的<ins>重要组成部分</ins></li>\n<li><mark>党的领导</mark>是进一步全面深化改革、推进中国式现代化的<ins>根本保证</ins></li>\n</ol>\n<h2 id=\"2024年中非合作论坛北京峰会\"><a class=\"markdownIt-Anchor\" href=\"#2024年中非合作论坛北京峰会\"></a> 2024年中非合作论坛北京峰会</h2>\n<p>2024年中非合作论坛北京峰会的<mark>主题为“携手推进现代化，共筑高水平中非命运共同体”。</mark></p>\n<p><ins>治国理政</ins>、<ins>工业化和农业现代化</ins>、<ins>和平安全</ins>、<ins>高质量共建“一带一路”分别是</ins>中非合作论坛北京峰会四场高级别会议的<ins>议题。</ins></p>\n<h2 id=\"培养社会主义法治思维\"><a class=\"markdownIt-Anchor\" href=\"#培养社会主义法治思维\"></a> 培养社会主义法治思维</h2>\n<p>宪法保障、立法保障、行政保障和司法保障。</p>\n<p>宪法保障是权利保障的前提和基础，</p>\n<p>立法保障是权利保障的重要条件，</p>\n<p>行政保障是权利保障的关键环节，</p>\n<p>司法保障是公民权利保障的最后防线。</p>\n<h2 id=\"建设中国特色社会主义法治体系\"><a class=\"markdownIt-Anchor\" href=\"#建设中国特色社会主义法治体系\"></a> 建设中国特色社会主义法治体系</h2>\n<p>建设中国特色社会主义法治体系，就是要形成完备的法律规范体系、高效的法治实施体系、严密的法治监督体系、有力的法治保障体系，形成完善的党内法规体系。</p>\n<p>形成完备的法律规范体系，是中国特色社会主义法治体系的前提，是法治国家、法治政府、法治社会的制度基础；</p>\n<p>建设高效的法治实施体系，是建设中国特色社会主义法治体系的重点；</p>\n<p>形成严密的法治监督体系，是宪法法律有效实施的重要保障；</p>\n<p>建设有力的法治保障体系，是全面依法治国的重要依托；</p>\n<p>形成完善的党内法规体系，是中国特色社会主义法治体系的本质要求和重要内容。</p>\n<h2 id=\"六个必须坚持\"><a class=\"markdownIt-Anchor\" href=\"#六个必须坚持\"></a> 六个必须坚持</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">坚持</th>\n<th style=\"text-align:center\">是…</th>\n<th>体现了</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">人民至上</td>\n<td style=\"text-align:center\">根本价值立场</td>\n<td>唯物主义群众史观</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自立自信</td>\n<td style=\"text-align:center\">内在精神特质</td>\n<td>客观规律性和主观能动性的有机结合</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">守正创新</td>\n<td style=\"text-align:center\">鲜明理论品格</td>\n<td>变与不变，继承与发展的内在联系</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">问题导向</td>\n<td style=\"text-align:center\">重要实践要求</td>\n<td>矛盾的普遍性与客观性</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">系统观念</td>\n<td style=\"text-align:center\">基本思想和工作方法</td>\n<td>辩证唯物主义普遍联系的原理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">胸怀天下</td>\n<td style=\"text-align:center\">中国共产党人的境界格局</td>\n<td>马克思主义追求人类进步和解放的崇高理想</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"新质生产力口诀\"><a class=\"markdownIt-Anchor\" href=\"#新质生产力口诀\"></a> 新质生产力口诀</h2>\n<p>关谷悠悠业务劳累咳嗽，立志全心做点心。</p>\n<ol>\n<li>关键在于质优（关谷悠悠）</li>\n<li>重点任务是新产业（业务）</li>\n<li>内涵——劳动者、劳动对象、劳动资料（劳累）</li>\n<li>核心要素——科技创新（咳嗽）</li>\n<li>本质——先进生产力（立志）</li>\n<li>核心标志——全要素生产率（全心）</li>\n<li>显著特点——创新（创新）</li>\n</ol>\n<h2 id=\"多民族国家\"><a class=\"markdownIt-Anchor\" href=\"#多民族国家\"></a> 多民族国家…</h2>\n<p>血脉相融——历史根基<br />\n信念相同——内生动力<br />\n文化相通——文化基因<br />\n经济相依——强大力量</p>\n<h2 id=\"科技创新和产业创新深度融合\"><a class=\"markdownIt-Anchor\" href=\"#科技创新和产业创新深度融合\"></a> 科技创新和产业创新深度融合</h2>\n<p>基础——高质量科技供给<br />\n关键——企业科技创新主体地位<br />\n途径——促进科技成果转化应用</p>\n<h1 id=\"主观题解题\"><a class=\"markdownIt-Anchor\" href=\"#主观题解题\"></a> 主观题解题</h1>\n<h2 id=\"问题分类\"><a class=\"markdownIt-Anchor\" href=\"#问题分类\"></a> 问题分类</h2>\n<ol>\n<li>为什么</li>\n<li>是什么…如何理解？</li>\n<li>意义是？</li>\n<li>怎么做？未来怎么做？</li>\n</ol>\n<p>四大类型+主语</p>\n<h2 id=\"万能三步走\"><a class=\"markdownIt-Anchor\" href=\"#万能三步走\"></a> 万能三步走</h2>\n<p>观点【出发点】+落脚点+论据</p>\n<h2 id=\"中国声音关键词\"><a class=\"markdownIt-Anchor\" href=\"#中国声音关键词\"></a> 中国声音关键词</h2>\n<p>携手共建人类命运共同体、和平、公道正义、共同发展、发展与安全、公正</p>\n<p>一切的核心是共同发展，构建人类命运共同体。</p>\n<p>和平共处五项原则发表70周年，引出中非合作论坛峰会，引出上海合作组织、引出国际友好大会、引出金砖国家领导人第十六次会晤、引出二十国集团领导人第十九次峰会。</p>\n<p>抓住主旋律：</p>\n<ol>\n<li>观点：世界和平发展、安全、公道正义、合作、多边主义</li>\n<li>落脚点：人类命运共同体、全人类共同价值</li>\n</ol>\n<h2 id=\"小小模板\"><a class=\"markdownIt-Anchor\" href=\"#小小模板\"></a> 小小模板</h2>\n<h3 id=\"38时政第一问\"><a class=\"markdownIt-Anchor\" href=\"#38时政第一问\"></a> 38时政，第一问</h3>\n<pre class=\"highlight\"><code class=\"\">当前，世界百年变局加速推进，一些西方国家为维护自身霸权，大搞单边主义、保护主义，建立封闭排他的“小圈子”，危害世界和平与共同发展。\n①（主语【材料】金砖....）坚持开放包容、合作共赢的初心使命，顺应全球南方崛起大势。\n②（主语【材料】中非....）走到一起，顺应世界和平和发展发出和平之声，倡导互惠包容的经济全球化和世界多极化，坚守共同发展的大道。\n③（主语【材料】和平共处五项原则....）树立了历史标杆，为不同社会制度国家建立和发展关系提供正确指导，为发展中国家团结合汇聚强大合力，为推动国际秩序朝着更加公正合理的方向贡献了中国智慧。\n</code></pre>\n<h3 id=\"38时政第二问\"><a class=\"markdownIt-Anchor\" href=\"#38时政第二问\"></a> 38时政，第二问</h3>\n<pre class=\"highlight\"><code class=\"\">历史和现实告诉我们，各国必须共担维护和平责任，同走和平发展道路，要秉持公道正义的理念，展现开放包容的胸襟。\n①我们要建设“和平金砖”、“创新金砖”、“绿色金砖”、“公正金砖”，“人文金砖”。\n②我们要坚持和平的原则，夯实相互尊重的基础，实现和平安全的愿景，汇聚共筑繁荣的动力。\n③提出“坚持和平，实现共同安全” “重振发展，实现普遍繁荣” “共兴文明，实现多元和谐发展”三点主张。\n在世界变局乱局中开辟长治久安、共同繁荣的人间正道，奋力开创中国特色大国外交更有作为的新局面，为进一步全面深化改革、推进中国式现化、推为构建人类命运共同体作出新的贡献。\n</code></pre>\n<p>有金砖写一二，无金砖选二三</p>\n<h2 id=\"答题逻辑\"><a class=\"markdownIt-Anchor\" href=\"#答题逻辑\"></a> 答题逻辑</h2>\n<ol>\n<li>抛出考点</li>\n<li>解释考点</li>\n<li>阐明关系</li>\n<li>方法论</li>\n<li>结合材料</li>\n</ol>\n<h2 id=\"肖四25大题逻辑练习\"><a class=\"markdownIt-Anchor\" href=\"#肖四25大题逻辑练习\"></a> 肖四25——大题逻辑练习</h2>\n<h3 id=\"马原部分\"><a class=\"markdownIt-Anchor\" href=\"#马原部分\"></a> 马原部分</h3>\n<p>:::primary</p>\n<p>（1）结合“该改的坚决改，不该改的不改”，说明为什么必须坚持守正创新。</p>\n<p>:::</p>\n<p>“该改的坚决改，不该的不改”，体现的正是守正与创新的辩证统一。“不该改的不改”，守正才能不迷失方向，不犯颠覆性错误，“该改的坚决改”，创新才能把握时代，引领时代。</p>\n<p>坚持守正不动摇，所谓守正，就是坚持实事求是，坚持真理性认识，坚持正确的政治方向。</p>\n<p>坚持创新不停步，所谓创新，就是坚持解放思想，秉承科学的思想观念，发现和运用事物的新联系、新观点、新规律，更有效的认识世界改造世界。</p>\n<p>守正是创新的前提和基础，创新是守正的目的和路径。守正创新深刻的揭示了“变”与“不变”、继承与发展的辩证统一。</p>\n<p>守正创新为党和人民事业提供了科学的观点、立场、方法。</p>\n<p>:::primary</p>\n<p>（2）为什么要“坚持破和立的辩证统一”？</p>\n<p>:::</p>\n<p>唯物辩证法认为，事物发发展是通过其自身的矛盾运动以自我否定的方式来实现的，着要求我们掌握破与立的辩证统一关系。</p>\n<p>所谓破，就是要破除与事物发展进程不相符合的旧观点、旧理论、旧方法。所谓立，就是秉承科学的理念，寻找并发现事物的新联系、新方法、理论。</p>\n<p>破与立是矛盾着的对立面，即相区别，又相联系，二者对立统一，在事物的发展中起到重要的作用。该原理要求我们掌握破与立的辩证统一关系。</p>\n<p>:::primary</p>\n<p>（1）运用唯物史观原理，说明为什么“发展新质生产力，必须进一步全面深化改革，形成与之相适应的新型生产关系”。</p>\n<p>:::</p>\n<p>唯物史观认为，生产力与生产关系是对立统一的有机体。</p>\n<p>生产力时生产的物质内容，生产关系是生产的社会形式。</p>\n<p>发展新质生产力就要形成与之相匹配的生产关系这是因为，生产力决定生产关系，而生产关系对生产力具有能动的反作用。生产关系对生产力能动的反作用主要体现在两个方面：当生产关系适应生产力的发展时就生产力起到促进和推动的作用，当生产关系不适应生产力的发展时就对成产力起到阻碍的作用。</p>\n<p>生产力与生产关系的相互作用，构成了生产关系要适应生产力的客观规律，这是社会形态发展的普遍规律。</p>\n<p>:::primary</p>\n<p>（2）善用因地制宜的“土办法”体现了怎样的辩证思维？（或：为什么不能“一哄而上”“简单 套用单一发展模式”，而要“因地制宜”发展新质生产力？）</p>\n<p>:::</p>\n<p>辩证法认为，矛盾具有普遍性和特殊性，二者是辩证统一的整体。</p>\n<p>矛盾的普遍性就是，矛盾无处不在，无时不有，矛盾具有普遍存在的特点。矛盾的特殊性在于，事物有着不同的矛盾以及同一矛盾在不同时期体现出不同的特点，只有具体分析矛盾的特殊性，才能认清事物的本质与发展规律。</p>\n<p>矛盾的普遍性和特殊性辩证统一也是共性与个性的辩证统一，共性寓于个性之中，个性也离不开共性，任何事物都是个性与共性的统一体。</p>\n<p>这要求我们掌握矛盾的普遍性与特殊性的其二者的关系，更好的理解事物的本质。善用“因地制宜”的办法正是体现了具体问题具体分析的辩证思维。</p>\n<p>:::primary</p>\n<p>（3）从理论创新和实践创新的辩证关系角度，分析为什么要将已经在实践中形成的新质生产力 “从理论上进行总结、概括，用以指导新的发展实践”。</p>\n<p>:::</p>\n<p>人类的创新活动主要体现在理论创新和实践创新两个方面，实践创新为理论创新提供了不竭动力，理论创新为实践创新提供了科学的行动指南，理论创新与实践创新二者构成了有机的统一体，我们要坚持将理论创新与实践创新相联系。</p>\n<p>理论与实践相统一，理论创新不仅要以实践创新为基础，还要以科学的知道反哺实践创新。</p>\n",
            "tags": [
                "political",
                "政治"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/OSPVCode/",
            "url": "https://735690757.github.io/Operate-system/OSPVCode/",
            "title": "操作系统PV代码题速记",
            "date_published": "2024-09-24T12:41:00.000Z",
            "content_html": "<h1 id=\"操作系统pv代码题速记\"><a class=\"markdownIt-Anchor\" href=\"#操作系统pv代码题速记\"></a> 操作系统PV代码题速记</h1>\n<p>进程P向m个进程Q1、Q2、Q3…Qm发送消息，进程P发消息到缓冲区，只有所有的Q进程都接收到消息后，进程P才能继续向缓冲区放消息，请写出PV操作逻辑。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore mutex=<span class=\"hljs-number\">1</span>, T[i]=<span class=\"hljs-number\">0</span>, notHave=<span class=\"hljs-number\">1</span>;\n<span class=\"hljs-comment\">//mutex是缓冲区互斥锁，T[i]是Qi进程完成数组，是一个自阻塞数组</span>\n<span class=\"hljs-comment\">//notHave是缓冲区是否为空，1就是空，初始没有信息</span>\n<span class=\"hljs-type\">int</span> R=<span class=\"hljs-number\">0</span>;\n<span class=\"hljs-comment\">//R是一个计数器</span>\n<span class=\"hljs-built_in\">Process_P</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(notHave);\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        放入缓冲区;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;=m;i++)&#123;\n            <span class=\"hljs-built_in\">P</span>(T[i]);\n        &#125;\n        R=<span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-built_in\">V</span>(mutex);\n    &#125;\n&#125;\n<span class=\"hljs-built_in\">Process_Qi</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(T[i]);\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        取消息;\n        R=R+<span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(R==m)&#123;\n            <span class=\"hljs-built_in\">V</span>(notHave);\n        &#125;\n        <span class=\"hljs-built_in\">V</span>(mutex);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"单生产者-单消费者\"><a class=\"markdownIt-Anchor\" href=\"#单生产者-单消费者\"></a> 单生产者-单消费者</h2>\n<p>一组生产者进程和一组消费者进程共享一个初始为空、大小为n的缓冲区:只有缓冲区没满时，生产者才能把消息放入缓冲区，否则必须等待:只有缓冲区不空时，消费者才能从中取出消息，否则必须等待。由于缓冲区是临界资源，它只允许一个生产者放入消息，或一个消费者从中取出消息。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore full = <span class=\"hljs-number\">0</span>;\t<span class=\"hljs-comment\">//已生产</span>\nsemaphore empty = n;<span class=\"hljs-comment\">//总可用空间</span>\nsemaphore mutex = <span class=\"hljs-number\">1</span>;<span class=\"hljs-comment\">//互斥锁</span>\n<span class=\"hljs-built_in\">procuder</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        生产商品;\n        <span class=\"hljs-built_in\">P</span>(empty);\t<span class=\"hljs-comment\">//假取空间</span>\n        <span class=\"hljs-built_in\">P</span>(mutex);\t<span class=\"hljs-comment\">//加锁</span>\n        放入缓冲区;\t\n        <span class=\"hljs-built_in\">V</span>(mutex);\t<span class=\"hljs-comment\">//解锁</span>\n        <span class=\"hljs-built_in\">V</span>(full);\t<span class=\"hljs-comment\">//告知以生产</span>\n    &#125;\n&#125;\n<span class=\"hljs-built_in\">consumer</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(full);\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        从缓冲区取;\n        <span class=\"hljs-built_in\">V</span>(mutex);\n        <span class=\"hljs-built_in\">V</span>(empty);\n        消费商品;\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"多生产者-多消费者\"><a class=\"markdownIt-Anchor\" href=\"#多生产者-多消费者\"></a> 多生产者-多消费者</h2>\n<p>桌子上有一个盘子，每次只能向其中放入一个水果;爸爸专向盘子中放革果，妈妈专向盘子中放橘子;儿子专等吃盘子中的橘子，女儿专等吃盘子中的革果，只有盘子为空时，爸爸或妈妈才可向盘子中放一个水果，仅当盘子中有自己需要的水果时，儿子或女儿可以从盘子中取出。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore mutex = <span class=\"hljs-number\">1</span>;\t<span class=\"hljs-comment\">//盘子锁</span>\nsemaphore apple = <span class=\"hljs-number\">0</span>;\nsemaphore orange = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-built_in\">dad</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        准备苹果;\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        放苹果;\n        <span class=\"hljs-built_in\">V</span>(apple);\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">mom</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        准备橘子;\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        放橘子;\n        <span class=\"hljs-built_in\">V</span>(orange);\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">son</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(orange);\n        拿苹果;\n        <span class=\"hljs-built_in\">V</span>(mutex);\n        吃苹果;\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">daughter</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(apple);\n        拿苹果;\n        <span class=\"hljs-built_in\">V</span>(mutex);\n        吃苹果;\n    &#125;\n&#125;\n\n</code></pre>\n<h2 id=\"读者写者问题读优先\"><a class=\"markdownIt-Anchor\" href=\"#读者写者问题读优先\"></a> 读者写者问题（读优先）</h2>\n<p>有读者和写者两组并发进程，共享一个文件，当两个或以上的读进程同时访问共享数据时不会产生副作用。但若某个写进程和其他进程（读进程或写进程）同时访问共享数据时则可能导致数据不一致的错误。</p>\n<p>因此要求:</p>\n<ol>\n<li>允许多个读者可以同时对文件执行读操作。</li>\n<li>只中许一个写者往文件中写信息。</li>\n<li>任一写者在完成写操作之前不允许其他读者或写者工作。</li>\n<li>写者执行写操作前，应让已有的读者和写者全部退出。</li>\n</ol>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore rw = <span class=\"hljs-number\">1</span>;\t<span class=\"hljs-comment\">//r-w 读者在读时，不容许其他写者加入。写者在写时，不容许其他读者写者加入。</span>\n<span class=\"hljs-type\">int</span> count = <span class=\"hljs-number\">0</span>;\t\t<span class=\"hljs-comment\">//记录已加入的读者的数量，如果不为0，那么其中必有读者，那么其他读者随便加入。</span>\nsemaphore count_mutex = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-built_in\">writer</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(rw);\n        写文件;\n        <span class=\"hljs-built_in\">V</span>(rw);\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">reader</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(count_mutex);\n        <span class=\"hljs-keyword\">if</span>(count == <span class=\"hljs-number\">0</span>)&#123;\t<span class=\"hljs-comment\">//如果不为0，那么其中必有读者，那么其他读者随便加入。</span>\n            <span class=\"hljs-built_in\">P</span>(rw);\t<span class=\"hljs-comment\">//读者为排除其他写者</span>\n        &#125;\n        count++;\t<span class=\"hljs-comment\">//在线加1</span>\n        <span class=\"hljs-built_in\">V</span>(count_mutex);\n        读文件;\n        <span class=\"hljs-built_in\">P</span>(count_mutex);\n        count--;\t<span class=\"hljs-comment\">//在线减1</span>\n        <span class=\"hljs-keyword\">if</span>(count == <span class=\"hljs-number\">0</span>)&#123;\n            <span class=\"hljs-built_in\">V</span>(rw);\n        &#125;\n        <span class=\"hljs-built_in\">V</span>(count_mutex);\n        \n    &#125;\n&#125;\n</code></pre>\n<p>有可能造成写饥饿</p>\n<h2 id=\"读者写者问题写优先\"><a class=\"markdownIt-Anchor\" href=\"#读者写者问题写优先\"></a> 读者写者问题（写优先）</h2>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore rw = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-type\">int</span> count = <span class=\"hljs-number\">0</span>;\nsemaphore w = <span class=\"hljs-number\">1</span>;\t<span class=\"hljs-comment\">//写进程霸占</span>\n\nsemaphore count_mutex = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-built_in\">writer</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(w);\t<span class=\"hljs-comment\">//写进程启用霸占</span>\n        <span class=\"hljs-built_in\">P</span>(rw);\n        写文件;\n        <span class=\"hljs-built_in\">V</span>(rw);\n        <span class=\"hljs-built_in\">V</span>(w);\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">reader</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(w);\t<span class=\"hljs-comment\">//写进程阻碍读进程进入</span>\n        <span class=\"hljs-built_in\">P</span>(count_mutex);\n        <span class=\"hljs-keyword\">if</span>(count == <span class=\"hljs-number\">0</span>)&#123;\n            <span class=\"hljs-built_in\">P</span>(rw);\n        &#125;\n        count++;\n        <span class=\"hljs-built_in\">V</span>(count_mutex);\n        <span class=\"hljs-built_in\">V</span>(w);\n        读文件;\n        <span class=\"hljs-built_in\">P</span>(count_mutex);\n        count--;\n        <span class=\"hljs-keyword\">if</span>(count == <span class=\"hljs-number\">0</span>)&#123;\n            <span class=\"hljs-built_in\">V</span>(rw);\n        &#125;\n        <span class=\"hljs-built_in\">V</span>(count_mutex);\n        \n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"吸烟者问题\"><a class=\"markdownIt-Anchor\" href=\"#吸烟者问题\"></a> 吸烟者问题</h2>\n<p>假设一个系统有三个抽烟者进程和一个供应者进程。每个抽烟者不停地卷烟并抽掉它，但要卷起并抽掉一支烟，抽烟者需要有三种材料:烟草、纸和胶水。三个抽烟者中，第一个拥有烟草，第二个拥有纸，第三个拥有胶水。供应者进程无限地提供三种材料，供应者每次将两种材料放到桌子上，拥有剩下那种材料的抽烟者卷一根烟并抽掉它，并给供应者一个信号告诉已完成，此时供应者就会将另外两种材料放到桌上，如此重复(让三个抽烟者轮流地抽烟)。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore offer1 = <span class=\"hljs-number\">0</span>;\nsemaphore offer2 = <span class=\"hljs-number\">0</span>;\nsemaphore offer3 = <span class=\"hljs-number\">0</span>;\nsemaphore isFinish = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-built_in\">provider</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(isFinish);\n    \t<span class=\"hljs-keyword\">if</span>(i%<span class=\"hljs-number\">3</span> == <span class=\"hljs-number\">0</span>)&#123;\n        \t<span class=\"hljs-built_in\">V</span>(offer1);\n    \t&#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(i%<span class=\"hljs-number\">3</span> == <span class=\"hljs-number\">1</span>)&#123;\n        \t<span class=\"hljs-built_in\">V</span>(offer2);\n    \t&#125;<span class=\"hljs-keyword\">else</span>&#123;\n        \t<span class=\"hljs-built_in\">V</span>(offer3);\n    \t&#125;\n    &#125;\n    \n&#125;\n\n<span class=\"hljs-built_in\">somker1</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(offer1);\n    \t制作香烟;\n    \t吸烟;\n        <span class=\"hljs-built_in\">V</span>(isFinish);\n    &#125; \n&#125;\n\n<span class=\"hljs-built_in\">somker2</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(offer2);\n    \t制作香烟;\n    \t吸烟;\n        <span class=\"hljs-built_in\">V</span>(isFinish);\n    &#125; \n&#125;\n\n<span class=\"hljs-built_in\">somker3</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(offer3);\n    \t制作香烟;\n    \t吸烟;\n        <span class=\"hljs-built_in\">V</span>(isFinish);\n    &#125; \n&#125;\n</code></pre>\n<h1 id=\"pv审题流程\"><a class=\"markdownIt-Anchor\" href=\"#pv审题流程\"></a> PV审题流程</h1>\n<ol>\n<li>看有几个进程</li>\n<li>进程内部的步骤</li>\n<li>是否需要while（1）</li>\n<li>哪里有P？有P必有V</li>\n<li>连续P是否会死锁</li>\n<li>定义信号量，写注释</li>\n</ol>\n<h1 id=\"题目实操\"><a class=\"markdownIt-Anchor\" href=\"#题目实操\"></a> 题目实操</h1>\n<h2 id=\"2020-统考真题\"><a class=\"markdownIt-Anchor\" href=\"#2020-统考真题\"></a> 2020 统考真题</h2>\n<p>【2020 统考真题】现有5个操作A、B、C、D和E，操作C必须在A和B完成后执行操作E必须在C和D完成后执行，请使用信号量的 wait（）、signal（）操作（P、V 操作）描述上述操作之间的同步关系，并说明所用信号量及其初值。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore ac = <span class=\"hljs-number\">0</span>;\nsemaphore bc = <span class=\"hljs-number\">0</span>;\nsemaphore ce = <span class=\"hljs-number\">0</span>;\nsemaphore ce = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-built_in\">A</span>()&#123;\n    执行任务;\n    <span class=\"hljs-built_in\">V</span>(ac);\n&#125;\n\n<span class=\"hljs-built_in\">B</span>()&#123;\n    执行任务;\n    <span class=\"hljs-built_in\">V</span>(bc);\n&#125;\n\n<span class=\"hljs-built_in\">C</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(ac);\n    <span class=\"hljs-built_in\">P</span>(bc);\n    执行任务;\n    <span class=\"hljs-built_in\">V</span>(ce);\n&#125;\n\n<span class=\"hljs-built_in\">D</span>()&#123;\n    执行任务;\n    <span class=\"hljs-built_in\">V</span>(de);\n&#125;\n\n<span class=\"hljs-built_in\">C</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(ce);\n    <span class=\"hljs-built_in\">P</span>(de);\n    执行任务;\n&#125;\n</code></pre>\n<p>【2009 统考真题】三个进程P1,P2,P3,互斥使用一个包含N(N&gt;0)个单元的缓冲区。</p>\n<ol>\n<li>P1每次用 produce()生成一个正整数并用 put()送入缓冲区某一空单元;</li>\n<li>P2每次用 getodd()从该缓冲区中取出一个奇数并用 countodd()统计奇数个数;</li>\n<li>P3每次用geteven()从该缓冲区中取出一个偶数并用 counteven()统计偶数个数。</li>\n</ol>\n<p>请用信号量机制实现这三个进程的同步与互斥活动，并说明所定义的信号量的含义(要求用伪代码描述)。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore mutex = <span class=\"hljs-number\">1</span>;\nsemaphore odd = <span class=\"hljs-number\">0</span>;\nsemaphore even = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-built_in\">P1</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-type\">int</span> num = <span class=\"hljs-built_in\">produce</span>();\n        <span class=\"hljs-keyword\">if</span>(num%<span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>)&#123;\n            <span class=\"hljs-built_in\">P</span>(mutex);\n            <span class=\"hljs-built_in\">put</span>();\n            <span class=\"hljs-built_in\">V</span>(mutex);\n            <span class=\"hljs-built_in\">V</span>(even);\n        &#125;<span class=\"hljs-keyword\">else</span>&#123;\n            <span class=\"hljs-built_in\">P</span>(mutex);\n            <span class=\"hljs-built_in\">put</span>();\n            <span class=\"hljs-built_in\">V</span>(mutex);\n            <span class=\"hljs-built_in\">V</span>(odd);\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">P2</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(odd);\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        <span class=\"hljs-built_in\">getodd</span>();\n        <span class=\"hljs-built_in\">V</span>(mutex);\n        <span class=\"hljs-built_in\">countodd</span>()\n    &#125;\n&#125;\n\n<span class=\"hljs-built_in\">P2</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(even);\n        <span class=\"hljs-built_in\">P</span>(mutex);\n        <span class=\"hljs-built_in\">geteven</span>();\n        <span class=\"hljs-built_in\">V</span>(mutex);\n        <span class=\"hljs-built_in\">counteven</span>()\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"2011-统考真题\"><a class=\"markdownIt-Anchor\" href=\"#2011-统考真题\"></a> 2011 统考真题</h2>\n<p>【2011统考真题】某银行提供1个服务窗口和10个供顾客等待的座位。顾客到达银行时若有空座位，则到取号机上领取一个号，等待叫号。取号机每次仅允许一位顾客使用。当营业员空闲时，通过叫号选取一位顾客，并为其服务。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore count = <span class=\"hljs-number\">10</span>;\nsemaphore mutex = <span class=\"hljs-number\">1</span>;\nsemaphore server = <span class=\"hljs-number\">1</span>;\nsemaphore full = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-built_in\">customer</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(count);\n        <span class=\"hljs-built_in\">P</span>(mutex);\n    \t从取号机取号;\n    \t<span class=\"hljs-built_in\">V</span>(mutex);\n    \t<span class=\"hljs-built_in\">V</span>(full);\n    \t等待叫号;\n    \t<span class=\"hljs-built_in\">P</span>(server);\n    \t获取服务;\n    &#125;\n\n    \n&#125;\n<span class=\"hljs-built_in\">clerk</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(full);\n        叫号;\n        <span class=\"hljs-built_in\">V</span>(server);\n        服务;\n        <span class=\"hljs-built_in\">V</span>(count);\n    &#125;    \n&#125;\n\n</code></pre>\n<h2 id=\"809-24年-真题\"><a class=\"markdownIt-Anchor\" href=\"#809-24年-真题\"></a> 809-24年 真题</h2>\n<p>崂山有一景点称作上清宫，游客在上清宫游玩后可以在宫门口免费搭乘轿车游览其他景区，游览后再返回宫门口。已知风景区游览轿车总量有M量，游客总数为N，约定:</p>\n<ol>\n<li>每辆轿车限乘一位游客;</li>\n<li>如果有空闲的轿车，应当允许想游览的游客乘坐;</li>\n<li>无空闲轿车时,游客只能排队等待;</li>\n<li>若没有想游览的游客，空闲的轿车也要等待。</li>\n</ol>\n<p>试利用P、V操作实现在上清宫门口乘车点:N个游客进程和M辆轿车进程的同步操作过程。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore mutex = <span class=\"hljs-number\">1</span>;\nsemaphore car = <span class=\"hljs-number\">0</span>; \t\t<span class=\"hljs-comment\">// 空闲车辆数量</span>\nsemaphore customer = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// 等待乘车的游客数量</span>\n\n<span class=\"hljs-comment\">//M个车辆进程</span>\n<span class=\"hljs-built_in\">car</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        等待游客;\n        <span class=\"hljs-built_in\">P</span>(customer);\t<span class=\"hljs-comment\">// 等待有游客请求乘车</span>\n        <span class=\"hljs-built_in\">P</span>(mutex);\t\t<span class=\"hljs-comment\">// 进入临界区</span>\n        <span class=\"hljs-built_in\">V</span>(car);\t\t\t<span class=\"hljs-comment\">// 提供一辆空闲轿车</span>\n        <span class=\"hljs-built_in\">V</span>(mutex);\t\t<span class=\"hljs-comment\">// 离开临界区</span>\n        接待游览;\n        释放游客;\n\n    &#125;\n&#125;\n\n<span class=\"hljs-comment\">//N个游客进程</span>\n<span class=\"hljs-built_in\">customer</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        等待车辆;\n        <span class=\"hljs-built_in\">P</span>(car);\t\t\t<span class=\"hljs-comment\">// 等待空闲轿车</span>\n       \t<span class=\"hljs-built_in\">P</span>(mutex);\t\t<span class=\"hljs-comment\">// 进入临界区</span>\n        <span class=\"hljs-built_in\">V</span>(customer)\t\t<span class=\"hljs-comment\">// 通知有游客请求乘车</span>\n        <span class=\"hljs-built_in\">V</span>(mutex);\t\t<span class=\"hljs-comment\">// 离开临界区</span>\n        上车游览;\n        离开;\n    &#125;\n&#125;\n\n</code></pre>\n<h2 id=\"典例-和尚打水\"><a class=\"markdownIt-Anchor\" href=\"#典例-和尚打水\"></a> 典例 和尚打水</h2>\n<p>某寺庙有小和尚、老和尚若干，有一水缸，由小和尚提水入缸供老和尚饮用。水缸可容10桶水，水取自同一井中。水井径窄，每次只能容一个桶取水。水桶总数为3个。每次入缸取水仅为1桶水，且不可同时进行，试给出有关从缸取水、入水的算法描述。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore total_empty = <span class=\"hljs-number\">10</span>;\nsemaphore total_full = <span class=\"hljs-number\">0</span>;\nsemaphore mutex_jing = <span class=\"hljs-number\">1</span>;\nsemaphore mutex_gang = <span class=\"hljs-number\">1</span>;\ndemaphore bucket = <span class=\"hljs-number\">3</span>;\n<span class=\"hljs-built_in\">Old</span> ()&#123;\n    <span class=\"hljs-built_in\">P</span>(total_full);\n    <span class=\"hljs-built_in\">P</span>(bucket);\n    <span class=\"hljs-built_in\">P</span>(mutex_gang);\n    从缸里取水;\n    <span class=\"hljs-built_in\">V</span>(total_empty);\n    <span class=\"hljs-built_in\">V</span>(mutex_gang);\n\t喝水;\n    <span class=\"hljs-built_in\">V</span>(bucket);\n&#125;\n\n<span class=\"hljs-built_in\">Young</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(total_empty);\n    <span class=\"hljs-built_in\">P</span>(bucket)\n    <span class=\"hljs-built_in\">P</span>(mutex_jing);\n    从水井取水;\n    <span class=\"hljs-built_in\">V</span>(mutex_jing);\n    <span class=\"hljs-built_in\">P</span>(mutex_gang);\n\t倒进缸里;\n    <span class=\"hljs-built_in\">V</span>(total_full);\n    <span class=\"hljs-built_in\">V</span>(mutex_gang);\n    <span class=\"hljs-built_in\">V</span>(bucket);\n    \n&#125;\n</code></pre>\n<h2 id=\"典例-公交车售票\"><a class=\"markdownIt-Anchor\" href=\"#典例-公交车售票\"></a> 典例 公交车售票</h2>\n<p>设公共汽车上，司机和售票员的活动分别是：</p>\n<ol>\n<li>司机的活动：启动车辆；正常行车；到站停车；</li>\n<li>售票员的活动：关车门；售票；开车门；</li>\n</ol>\n<p>请用记录型信号量机制实现上述问题的同步。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore door_mutex = <span class=\"hljs-number\">1</span>;\nsemaphore start_mutex = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-built_in\">driver</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(start_mutex);\n        启动车辆;\n        正常行车;\n        到站停车;\n        <span class=\"hljs-built_in\">V</span>(door_mutex);\n    &#125;\n&#125;\n<span class=\"hljs-built_in\">busman</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(door_mutex);\n        开车门;\n        售票;\n        关车门;\n        <span class=\"hljs-built_in\">V</span>(start_mutex);\n    &#125;\n&#125;\n\n</code></pre>\n<h2 id=\"典例-独木桥问题\"><a class=\"markdownIt-Anchor\" href=\"#典例-独木桥问题\"></a> 典例 独木桥问题</h2>\n<p>请用信号量解决以下的“过独木桥”问题：同一方向的行人可连续过桥，当某一方向有人过桥时，另一方向的行人必须等待；当某一方向无人过桥时，另一方向的行人可以过桥。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore isOK = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-type\">int</span> toACount = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-type\">int</span> toBCount = <span class=\"hljs-number\">0</span>;\nsemaphore toACount_mutex = <span class=\"hljs-number\">1</span>;\nsemaphore toBCount_mutex = <span class=\"hljs-number\">1</span>;\n\n\n<span class=\"hljs-built_in\">toA</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(toACount_mutex);\n    <span class=\"hljs-keyword\">if</span>(toACount == <span class=\"hljs-number\">0</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(isOK);\n    &#125;\n    toACount++;\n    <span class=\"hljs-built_in\">V</span>(toACount_mutex);\n    上桥走向A;\n    <span class=\"hljs-built_in\">P</span>(toACount_mutex);\n    toACount--;\n    <span class=\"hljs-keyword\">if</span>(toACount == <span class=\"hljs-number\">0</span>)&#123;\n        <span class=\"hljs-built_in\">V</span>(isOK);\n    &#125;\n    <span class=\"hljs-built_in\">V</span>(toACount_mutex);\n&#125;\n\n<span class=\"hljs-built_in\">toB</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(toBCount_mutex);\n    <span class=\"hljs-keyword\">if</span>(toBCount == <span class=\"hljs-number\">0</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(isOK);\n    &#125;\n    toBCount++;\n\t<span class=\"hljs-built_in\">V</span>(toBCount_mutex);\n    上桥走向B;\n    <span class=\"hljs-built_in\">P</span>(toBCount_mutex);\n    toBCount--;\n    <span class=\"hljs-keyword\">if</span>(toBCount == <span class=\"hljs-number\">0</span>)&#123;\n        <span class=\"hljs-built_in\">V</span>(isOK);\n    &#125;\n\t<span class=\"hljs-built_in\">V</span>(toBCount_mutex);\n&#125;\n\n</code></pre>\n<h2 id=\"典例-阅览室问题\"><a class=\"markdownIt-Anchor\" href=\"#典例-阅览室问题\"></a> 典例 阅览室问题</h2>\n<p>有一阅览室，共有100个座位。为了很好利用它，读者进入时必须先在登记表上进行登记。该表表目设有座位号和读者姓名；离开时再将其登记项摈除。试问：</p>\n<ol>\n<li>为描述读者的动作，应设哪几个进程？它们之间的关系是什么？</li>\n<li>试用P、V操作描述进程之间的同步或算法。</li>\n</ol>\n<p>答：要设读者进入进程和离开进程，总计两个进程。他们是互斥关系。</p>\n<pre class=\"highlight\"><code class=\"cpp\">semaphore seats = <span class=\"hljs-number\">100</span>;\nsemaphore readers = <span class=\"hljs-number\">0</span>;\nsemaphore table_mutex = <span class=\"hljs-number\">1</span>;\n\n<span class=\"hljs-built_in\">getIn</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(seats);\n        <span class=\"hljs-built_in\">P</span>(table_mutex);\n        登记;\n        <span class=\"hljs-built_in\">V</span>(table_mutex);\n        <span class=\"hljs-built_in\">V</span>(readers);\n    &#125;\n&#125;\n<span class=\"hljs-built_in\">getOut</span>()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-built_in\">P</span>(readers);\n        <span class=\"hljs-built_in\">P</span>(table_mutex);\n        移除登记;\n        <span class=\"hljs-built_in\">V</span>(table_mutex);\n        <span class=\"hljs-built_in\">V</span>(seats);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"典例-考试问题\"><a class=\"markdownIt-Anchor\" href=\"#典例-考试问题\"></a> 典例 考试问题</h2>\n<p>《操作系统》课程的期末考试即将举行，假设把学生和监考老师都看作进程，学生有N人，教师1人。考场门口每次只能进出一个人，进考场的原则是先来先进。当N个学生都进入了考场后，教师才能发卷子。学生交卷后即可离开考场，而教师要等收上来全部卷子并封装卷子后才能离开考场。</p>\n<p>(1)问共需设置几个进程?</p>\n<p>(2)请用P、V操作解决上述问题中的同步和互斥关系。</p>\n<p>答：共设置N+1个进程，一个教师进程，N个学生进程</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-type\">int</span> studentCount = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-type\">int</span> onPageCount = <span class=\"hljs-number\">0</span>;\nsemaphore door_mutex = <span class=\"hljs-number\">1</span>;\nsemaphore startTest = <span class=\"hljs-number\">0</span>;\nsemaphore endTest = <span class=\"hljs-number\">0</span>;\nsemaphore readyToTest = <span class=\"hljs-number\">0</span>;\nsemaphore onPageCount_mutex = <span class=\"hljs-number\">1</span>;\nsemaphore allStudentsOK = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-built_in\">teacher</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(door_mutex);\n    进门;\n    <span class=\"hljs-built_in\">V</span>(door_mutex);\n    <span class=\"hljs-built_in\">P</span>(readyToTest);\n    发卷子;\n    <span class=\"hljs-built_in\">V</span>(startTest);\n    监考;\n    <span class=\"hljs-built_in\">P</span>(allStudentsOK);\n    整理试卷;\n    <span class=\"hljs-built_in\">P</span>(door_mutex);\n    出门;\n    <span class=\"hljs-built_in\">V</span>(door_mutex);\n&#125;\n\n<span class=\"hljs-built_in\">students</span>()&#123;\n    <span class=\"hljs-built_in\">P</span>(door_mutex);\n    进门;\n    studentCount++;\n    <span class=\"hljs-keyword\">if</span>(studentCont == N)&#123;\n        <span class=\"hljs-built_in\">V</span>(readyToTest);\n    &#125;\n    <span class=\"hljs-built_in\">V</span>(door_mutex);\n    <span class=\"hljs-built_in\">P</span>(startTest);\n    开始答题;\n    <span class=\"hljs-built_in\">P</span>(onPageCount_mutex);\n    交卷;\n    onPageCount++;\n    <span class=\"hljs-keyword\">if</span>(onPageCount == N)&#123;\n        <span class=\"hljs-built_in\">V</span>(allStudentsOK);\n    &#125;\n    <span class=\"hljs-built_in\">V</span>(onPageCount_mutex);\n    <span class=\"hljs-built_in\">P</span>(door_mutex);\n    出门;\n    studentCount--;\n    <span class=\"hljs-built_in\">V</span>(door_mutex);\n&#125;\n</code></pre>\n<div class=\"links\"><div class=\"item\" title=\"hunter_wyh\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1bnRlcl93eWgvYXJ0aWNsZS9kZXRhaWxzLzQ5NzY0MTc1\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1bnRlcl93eWgvYXJ0aWNsZS9kZXRhaWxzLzQ5NzY0MTc1\">hunter_wyh CSDN 博客</span>\n          <p class=\"desc\">部分题目出自此博客</p>\n          </div></div></div>",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/DSLearnNote/codeTM/",
            "url": "https://735690757.github.io/DSLearnNote/codeTM/",
            "title": "数据结构代码题速记",
            "date_published": "2024-09-10T03:00:00.000Z",
            "content_html": "<h1 id=\"线性表方向\"><a class=\"markdownIt-Anchor\" href=\"#线性表方向\"></a> 线性表方向</h1>\n<h2 id=\"链表的合并\"><a class=\"markdownIt-Anchor\" href=\"#链表的合并\"></a> 链表的合并</h2>\n<p>:::primary no-icon<br />\n设计实现将两个带有头节点的有序链表合并为一个新的有序链表。<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">marge</span><span class=\"hljs-params\">(LNode *A,LNode *B,LNode *C)</span></span>&#123;\n    LNode p = A-&gt;next;\n    LNode q = B-&gt;next;\n    LNode r;\n    r-&gt;next = null;\n    C = A;\n    r=c;\n    <span class=\"hljs-keyword\">while</span>(p != null||q != null)&#123;\n        <span class=\"hljs-keyword\">if</span>(p-&gt;data &lt;= q-&gt;data)&#123;\n            r-&gt;next = p;\n            p = p-&gt;next;\n            r = r-&gt;next;\n        &#125; <span class=\"hljs-keyword\">else</span>&#123;\n            r-&gt;next = q;\n            q = q-&gt;next;\n            r = r-&gt;next;\n        &#125;\n    &#125;\n    <span class=\"hljs-keyword\">if</span>(p) r = p;\n    <span class=\"hljs-keyword\">if</span>(q) r = q;\n&#125;\n</code></pre>\n<h2 id=\"链表的逆置\"><a class=\"markdownIt-Anchor\" href=\"#链表的逆置\"></a> 链表的逆置</h2>\n<p>:::primary no-icon<br />\n设计实现将无头节点链表进行逆置<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">invert</span><span class=\"hljs-params\">(LinkList &amp;L)</span></span>&#123;\n    p=L;\n    q=p-&gt;next;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        r=q-&gt;next;\n        q-&gt;next=p;\n        p=q;\n        q=r;\n    &#125;\n    L-&gt;next=null;\n    L=p;\n&#125;\n</code></pre>\n<h2 id=\"顺序表的逆置\"><a class=\"markdownIt-Anchor\" href=\"#顺序表的逆置\"></a> 顺序表的逆置</h2>\n<p>:::primary no-icon<br />\n设计一个算法，将顺序表L所有的元素逆置，要求算法效率尽可能地高。<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">reverse</span><span class=\"hljs-params\">(Sqlist &amp;L)</span></span>&#123;\n    ElemType temp;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;L.length/<span class=\"hljs-number\">2</span>; i++)&#123;\n        temp = L[i];\n        L.data[i]=L.data[L.length-i<span class=\"hljs-number\">-1</span>];\n        L.data[L.length-i<span class=\"hljs-number\">-1</span>] = temp;\n    &#125;\n&#125;\n</code></pre>\n<p>:::info<br />\n一种”就地“思想<br />\n:::</p>\n<h2 id=\"统计单链表hl中的值等于x的个数\"><a class=\"markdownIt-Anchor\" href=\"#统计单链表hl中的值等于x的个数\"></a> 统计单链表HL中的值等于x的个数</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">countX</span><span class=\"hljs-params\">(LNode *HL, ElemType x)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> countNum = <span class=\"hljs-number\">0</span>;\n    LNode p = HL-&gt;next;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        <span class=\"hljs-keyword\">if</span>(p-&gt;data == x)&#123;\n            countNum++;\n        &#125;\n        p = p-&gt;next;\n    &#125;\n    <span class=\"hljs-keyword\">return</span> countNum;\n    \n&#125;\n</code></pre>\n<h2 id=\"hl是单链表的头指针删除头节点\"><a class=\"markdownIt-Anchor\" href=\"#hl是单链表的头指针删除头节点\"></a> HL是单链表的头指针，删除头节点</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\">ElemType <span class=\"hljs-title\">DeleFront</span><span class=\"hljs-params\">(LNode *&amp;HL)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(HL == null) <span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">1</span>);\n    LNode *p = HL;\n    ElemType con = p-&gt;data;\n    p-&gt;next =  p-&gt;netx-&gt;next;\n    <span class=\"hljs-keyword\">return</span> com;\n&#125;\n</code></pre>\n<h2 id=\"判断单链表是否中心对称\"><a class=\"markdownIt-Anchor\" href=\"#判断单链表是否中心对称\"></a> 判断单链表是否中心对称</h2>\n<p>:::primary no-icon</p>\n<ol>\n<li>链表计数</li>\n<li>动态开辟数组（逻辑栈）</li>\n<li>奇数个要跳过最中心的那个元素</li>\n<li>链表向后，栈向下依次检查</li>\n<li>结束前记得free栈</li>\n</ol>\n<p>:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">isDC</span><span class=\"hljs-params\">(LinkList *L)</span> </span>&#123;\n    <span class=\"hljs-keyword\">if</span> (L == <span class=\"hljs-literal\">NULL</span> || L-&gt;next == <span class=\"hljs-literal\">NULL</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n\n    <span class=\"hljs-comment\">// 计算链表长度</span>\n    <span class=\"hljs-type\">int</span> count = <span class=\"hljs-number\">0</span>;\n    LinkList *p = L;\n    <span class=\"hljs-keyword\">while</span> (p) &#123;\n        count++;\n        p = p-&gt;next;\n    &#125;\n\n    <span class=\"hljs-comment\">// 动态分配栈空间</span>\n    <span class=\"hljs-type\">int</span> *stack = (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">malloc</span>((count / <span class=\"hljs-number\">2</span>) * <span class=\"hljs-built_in\">sizeof</span>(<span class=\"hljs-type\">int</span>));\n    <span class=\"hljs-keyword\">if</span> (stack == <span class=\"hljs-literal\">NULL</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n\n    p = L;\n    <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">-1</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; count / <span class=\"hljs-number\">2</span>; i++) &#123;\n        stack[++top] = p-&gt;data;\n        p = p-&gt;next;\n    &#125;\n\n    <span class=\"hljs-comment\">// 如果链表长度为奇数，跳过中间的节点</span>\n    <span class=\"hljs-keyword\">if</span> (count % <span class=\"hljs-number\">2</span> != <span class=\"hljs-number\">0</span>) p = p-&gt;next;\n\n    <span class=\"hljs-comment\">// 开始比较</span>\n    <span class=\"hljs-keyword\">while</span> (p) &#123;\n        <span class=\"hljs-keyword\">if</span> (p-&gt;data != stack[top--]) &#123;\n            <span class=\"hljs-built_in\">free</span>(stack);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n        &#125;\n        p = p-&gt;next;\n    &#125;\n\n    <span class=\"hljs-built_in\">free</span>(stack);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n&#125;\n\n</code></pre>\n<h2 id=\"判断单链表是否递增\"><a class=\"markdownIt-Anchor\" href=\"#判断单链表是否递增\"></a> 判断单链表是否递增</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">isIncrease</span><span class=\"hljs-params\">(LinkList *l)</span></span>&#123;\n    LinkList *p = l;\n    <span class=\"hljs-type\">int</span> nowData = p-&gt;data;\n    p = p-&gt;next;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        <span class=\"hljs-keyword\">if</span>(p-&gt;data&gt;nowData)&#123;\n            nowData = p-&gt;data;\n            p = p-&gt;next;\n        &#125;<span class=\"hljs-keyword\">else</span>&#123;\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n        &#125;\n    &#125;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n&#125;\n</code></pre>\n<h2 id=\"链表a链表b求a与b的交集生成链表c\"><a class=\"markdownIt-Anchor\" href=\"#链表a链表b求a与b的交集生成链表c\"></a> 链表A，链表B，求A与B的交集生成链表C</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">isExistence</span><span class=\"hljs-params\">(LinkList *L,Elemtype goData)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(L==null) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    LinkList *p = L;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        <span class=\"hljs-keyword\">if</span>(p-&gt;data == goData) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n        p=p-&gt;next;\n    &#125;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n&#125;\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">intersectionAB</span><span class=\"hljs-params\">(LinkList *A,LinkList *B,LinkList *&amp;C)</span></span>&#123;\n    LinkList *a=A;\n    LinkList *b=B;\n    LinkList *c=C;\n    LinkList go;\n    LinkList *goP=go;\n\n    \n    <span class=\"hljs-keyword\">while</span>(a)&#123;\n        <span class=\"hljs-keyword\">while</span>(b)&#123;\n            <span class=\"hljs-keyword\">if</span>(a-&gt;data==b-&gt;data&amp;&amp;<span class=\"hljs-built_in\">isExistence</span>(goP))&#123;\n                c = (LinkList*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n                go = (LinkList*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n                c-&gt;data = b-&gt;data;\n                c = c-&gt;next;\n                goP = goP-&gt;next;\n            &#125;\n            b = b-&gt;next;\n        &#125;\n        a = a-&gt;next;\n        b = B;\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"链式有序归并\"><a class=\"markdownIt-Anchor\" href=\"#链式有序归并\"></a> 链式有序归并</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">mergelkList</span><span class=\"hljs-params\">(LinkList *a,LinkList *b,LinkList &amp;*c)</span></span>&#123;\n    LinkList *p = a;\n    LinkList *q = b;\n    LinkList *temp = (Linklist*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n    Linklist *r = temp;\n    <span class=\"hljs-keyword\">while</span>(p != <span class=\"hljs-literal\">NULL</span> &amp;&amp; q != <span class=\"hljs-literal\">NULL</span>)&#123;\n        <span class=\"hljs-keyword\">if</span>(p-&gt;data &lt; q-&gt;data)&#123;\n            r-&gt;next = (Linklist*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n            r-&gt;next-&gt;data = p-&gt;data;\n            r = r-&gt;next;\n            p = p-&gt;next;\n        &#125;<span class=\"hljs-keyword\">else</span>&#123;\n            r-&gt;next = (Linklist*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n            r-&gt;next-&gt;data = q-&gt;data;\n            r = r-&gt;next;\n            q = q-&gt;next;\n        &#125;\n    &#125;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        r-&gt;next = (Linklist*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n        r-&gt;next-&gt;data = p-&gt;data;\n        r = r-&gt;next;\n        p = p-&gt;next;\n    &#125;\n    <span class=\"hljs-keyword\">while</span>(q)&#123;\n         r-&gt;next = (Linklist*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(LinkList));\n         r-&gt;next-&gt;data = q-&gt;data;\n         r = r-&gt;next;\n         q = q-&gt;next;\n    &#125;\n    r-&gt;next = <span class=\"hljs-literal\">NULL</span>;\n    c = temp-&gt;next;\n&#125;\n</code></pre>\n<h1 id=\"串方向\"><a class=\"markdownIt-Anchor\" href=\"#串方向\"></a> 串方向</h1>\n<h2 id=\"在顺序存储结构上实现求子串\"><a class=\"markdownIt-Anchor\" href=\"#在顺序存储结构上实现求子串\"></a> 在顺序存储结构上实现求子串</h2>\n<pre class=\"highlight\"><code class=\"cpp\">\n</code></pre>\n<h1 id=\"堆方向\"><a class=\"markdownIt-Anchor\" href=\"#堆方向\"></a> 堆方向</h1>\n<h2 id=\"已知堆新加入一个底部元素重新调整成堆\"><a class=\"markdownIt-Anchor\" href=\"#已知堆新加入一个底部元素重新调整成堆\"></a> 已知堆，新加入一个底部元素重新调整成堆</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">adjustheap</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> r[],<span class=\"hljs-type\">int</span> n)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> j = n;\n    <span class=\"hljs-type\">int</span> i = j/<span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-type\">int</span> temp = r[j<span class=\"hljs-number\">-1</span>];\n    <span class=\"hljs-keyword\">while</span>(i&gt;=<span class=\"hljs-number\">1</span>)&#123;\n        <span class=\"hljs-keyword\">if</span>(temp&gt;=r[i<span class=\"hljs-number\">-1</span>])&#123;\n            <span class=\"hljs-keyword\">break</span>;\n        &#125;<span class=\"hljs-keyword\">else</span>&#123;\n            r[j<span class=\"hljs-number\">-1</span>] = r[i<span class=\"hljs-number\">-1</span>];\n            j = i;\n            i = i/<span class=\"hljs-number\">2</span>;\n        &#125;\n    &#125;\n    r[j<span class=\"hljs-number\">-1</span>] = temp;\n&#125;\n</code></pre>\n<h2 id=\"设计单链表中值相同的多余节点\"><a class=\"markdownIt-Anchor\" href=\"#设计单链表中值相同的多余节点\"></a> 设计单链表中值相同的多余节点</h2>\n<p>:::primary no-icon<br />\n这段代码可能存在内存泄漏的风险，应对考试应该还是没问题的<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">deleteCon</span><span class=\"hljs-params\">(LinkList *&amp;L)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!L) <span class=\"hljs-keyword\">return</span>;\n    LinkList *p = L;\n    LinkList *q;\n    LinkList *r;\n    <span class=\"hljs-type\">int</span> num = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        num++;\n        p = p-&gt;next;\n    &#125;\n    p = L;\n    <span class=\"hljs-type\">int</span>* nodeHave = <span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(<span class=\"hljs-type\">int</span>)*num);\n    <span class=\"hljs-type\">int</span> now=<span class=\"hljs-number\">1</span>;\n    nodeHave[<span class=\"hljs-number\">0</span>]=p-&gt;data;\n    q=p;\n    p=p-&gt;next;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        <span class=\"hljs-type\">bool</span> found = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;now;i++)&#123;\n            <span class=\"hljs-keyword\">if</span>(nodeHave[i] == p-&gt;data) &#123;\n                q-&gt;next=q-&gt;next-&gt;next;\n                q=q-&gt;next;\n                p=p-&gt;next;\n                r=p;\n                <span class=\"hljs-built_in\">free</span>(r);\n                found = <span class=\"hljs-literal\">true</span>;\n            &#125;\n        &#125;\n        <span class=\"hljs-keyword\">if</span>(!found)&#123;\n            nodeHave[now++]=p-&gt;data;\n        \tp=p-&gt;next;\n        \tq=q-&gt;next;\n        &#125; \n    &#125; \n&#125;\n</code></pre>\n<h1 id=\"树方向\"><a class=\"markdownIt-Anchor\" href=\"#树方向\"></a> 树方向</h1>\n<h2 id=\"二叉树求树高\"><a class=\"markdownIt-Anchor\" href=\"#二叉树求树高\"></a> 二叉树求树高</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">getDeep</span><span class=\"hljs-params\">(BTree b)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> HL,HR;\n    HL = HR = <span class=\"hljs-number\">0</span>;\n    HL = <span class=\"hljs-built_in\">getDeep</span>(b-&gt;Lchild);\n    HR = <span class=\"hljs-built_in\">getDeep</span>(b-&gt;Rchild);\n    <span class=\"hljs-keyword\">return</span> HL &gt; HR ? (HL+<span class=\"hljs-number\">1</span>) : (HR+<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-comment\">// 此处return就是谁大就返回谁加一</span>\n&#125;\n\n</code></pre>\n<h2 id=\"左孩子友兄弟表示法求原树高\"><a class=\"markdownIt-Anchor\" href=\"#左孩子友兄弟表示法求原树高\"></a> 左孩子友兄弟表示法，求原树高</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">hight</span><span class=\"hljs-params\">(BTree b)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> HL,HR;\n    HL = HR = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span>(b == <span class=\"hljs-literal\">NULL</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    HL = <span class=\"hljs-built_in\">high</span>(b-&gt;Lchild);\n    HR = <span class=\"hljs-built_in\">high</span>(b-&gt;Rchild);\n    <span class=\"hljs-keyword\">if</span>(HL+<span class=\"hljs-number\">1</span> &gt; HR)&#123;\n        <span class=\"hljs-keyword\">return</span> HL + <span class=\"hljs-number\">1</span>;\n    &#125; <span class=\"hljs-keyword\">else</span>&#123;\n        <span class=\"hljs-keyword\">return</span> HR;\n    &#125;\n    \n&#125;\n</code></pre>\n<h2 id=\"二叉树求树宽\"><a class=\"markdownIt-Anchor\" href=\"#二叉树求树宽\"></a> 二叉树求树宽</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-type\">int</span> count[<span class=\"hljs-number\">100</span>];\n<span class=\"hljs-type\">int</span> max = <span class=\"hljs-number\">-1</span>;\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">width</span><span class=\"hljs-params\">(BTree t,<span class=\"hljs-type\">int</span> k)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(t = <span class=\"hljs-literal\">NULL</span>) <span class=\"hljs-keyword\">return</span>;\n    count[k] ++;\n    <span class=\"hljs-keyword\">if</span>(max &lt; count[k]) max = count[k];\n    <span class=\"hljs-built_in\">width</span>(t-&gt;lchild, k+<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-built_in\">width</span>(t-&gt;rchild, k+<span class=\"hljs-number\">1</span>);\n&#125;\n\n</code></pre>\n<h2 id=\"链式存储结构建立二叉树\"><a class=\"markdownIt-Anchor\" href=\"#链式存储结构建立二叉树\"></a> 链式存储结构建立二叉树</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-type\">char</span> datatype;\n<span class=\"hljs-keyword\">typedef</span> <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">node</span>&#123;\n    datatype data;\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">node</span> *lchild,*rchild;\n&#125;<span class=\"hljs-function\">btree\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title\">createBtree</span><span class=\"hljs-params\">(btree *&amp;bt)</span></span>&#123;\n    datatype zData;\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%c&quot;</span>,&amp;zData);\n    <span class=\"hljs-keyword\">if</span>(zData == <span class=\"hljs-string\">&#x27;#&#x27;</span>) &#123;\n        bt=null;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n    bt = (btree*)<span class=\"hljs-built_in\">malloc</span>(<span class=\"hljs-built_in\">sizeof</span>(btree))\n    bt-&gt;data=zData;\n    <span class=\"hljs-built_in\">createBtree</span>(bt-&gt;lchild);\n    <span class=\"hljs-built_in\">createBtree</span>(bt-&gt;rchild);\n&#125;\n</code></pre>\n<h2 id=\"判断二叉树是否为排序二叉树二叉搜索树\"><a class=\"markdownIt-Anchor\" href=\"#判断二叉树是否为排序二叉树二叉搜索树\"></a> 判断二叉树是否为排序二叉树/二叉搜索树</h2>\n<p>:::primary no-icon<br />\n判断一棵二叉树是否为排序二叉树，可以通过中序遍历来实现。在BST中，中序遍历的结果应该是一个严格递增的序列。如果遍历过程中发现任何一个节点的值不大于前一个节点的值，则该树不是BST。<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-type\">int</span> minnum = INT_MIN;\n<span class=\"hljs-type\">int</span> isFirstNode = <span class=\"hljs-number\">1</span>;      <span class=\"hljs-comment\">// 标记是否是第一个节点(最左侧的节点)</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">isBST</span><span class=\"hljs-params\">(BTree *bt)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(bt==null)&#123;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<span class=\"hljs-comment\">//空树是BST</span>\n    &#125;\n    <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">isBST</span>(bt-&gt;lchild))&#123;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    &#125;\n    <span class=\"hljs-keyword\">if</span>(!isFirstNode &amp;&amp; bt-&gt;data&lt;minnum)&#123;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    &#125;\n    isFirstNode =<span class=\"hljs-number\">0</span>;\n    minnum = bt-&gt;data;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">isBST</span>(bt-&gt;rchild);\n    \n&#125;\n</code></pre>\n<h2 id=\"求节点在二叉排序树关键字是x的层数\"><a class=\"markdownIt-Anchor\" href=\"#求节点在二叉排序树关键字是x的层数\"></a> 求节点在二叉排序树，关键字是x的层数</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-type\">int</span> layer = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-type\">void</span> `<span class=\"hljs-built_in\">findXCountLayer</span>(BTree *b,<span class=\"hljs-type\">int</span> x)&#123;\n    <span class=\"hljs-keyword\">if</span>(b!=<span class=\"hljs-literal\">NULL</span>)&#123;\n        layer++;\n        <span class=\"hljs-keyword\">if</span>(b-&gt;data == x)&#123;\n            <span class=\"hljs-keyword\">return</span>;\n        &#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(x &gt; b-&gt;data)&#123;\n            <span class=\"hljs-built_in\">findXCountLayer</span>(b-&gt;rchild,x);\n        &#125;<span class=\"hljs-keyword\">else</span>&#123;\n            <span class=\"hljs-built_in\">findXCountLayer</span>(b-&gt;lchild,x)\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"统计二叉树节点个数\"><a class=\"markdownIt-Anchor\" href=\"#统计二叉树节点个数\"></a> 统计二叉树节点个数</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">countNode</span><span class=\"hljs-params\">(BTree *b)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(b == <span class=\"hljs-literal\">NULL</span>)&#123;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    &#125;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">countNode</span>(b-&gt;lchild) + <span class=\"hljs-built_in\">countNode</span>(b-&gt;rchild) + <span class=\"hljs-number\">1</span>;\n&#125;\n</code></pre>\n<h2 id=\"计算二叉树中所有节点之和\"><a class=\"markdownIt-Anchor\" href=\"#计算二叉树中所有节点之和\"></a> 计算二叉树中所有节点之和</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-type\">int</span> sum = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">bTreeSum</span><span class=\"hljs-params\">(BTree *b)</span></span>&#123;\n    <span class=\"hljs-built_in\">bTreeSum</span>(b-&gt;lchild);\n    sum += b-&gt;data;\n    <span class=\"hljs-built_in\">bTreeSum</span>(b-&gt;rchild);\n&#125;\n</code></pre>\n<h1 id=\"排序方向\"><a class=\"markdownIt-Anchor\" href=\"#排序方向\"></a> 排序方向</h1>\n<h2 id=\"快速排序\"><a class=\"markdownIt-Anchor\" href=\"#快速排序\"></a> 快速排序</h2>\n<h3 id=\"快速排序分区函数\"><a class=\"markdownIt-Anchor\" href=\"#快速排序分区函数\"></a> 快速排序分区函数</h3>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">Partition</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[],<span class=\"hljs-type\">int</span> low,<span class=\"hljs-type\">int</span> high)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> flag = a[low];\n    <span class=\"hljs-keyword\">while</span>(low &lt; high)&#123;\n        <span class=\"hljs-keyword\">while</span>(low &lt; high &amp;&amp; flag &lt;= a[high]) --high;\n        a[low] = a[high];\n        <span class=\"hljs-keyword\">while</span>(low &lt; high &amp;&amp; flag &gt; a[low]) ++low;\n        a[high] = a[low];\n    &#125;\n    a[low] = flag;\n    <span class=\"hljs-keyword\">return</span> low;\n&#125;\n</code></pre>\n<h3 id=\"快速排序递归函数\"><a class=\"markdownIt-Anchor\" href=\"#快速排序递归函数\"></a> 快速排序递归函数</h3>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">QuickSort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[],<span class=\"hljs-type\">int</span> low,<span class=\"hljs-type\">int</span> high)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(low &lt; high)&#123;\n        <span class=\"hljs-type\">int</span> pivo = <span class=\"hljs-built_in\">Partition</span>(a,low,high);\n        <span class=\"hljs-built_in\">QuickSort</span>(a,low,pivo<span class=\"hljs-number\">-1</span>);\n        <span class=\"hljs-built_in\">QuickSort</span>(apivo+<span class=\"hljs-number\">1</span>,high);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"链式结构的简单选择排序\"><a class=\"markdownIt-Anchor\" href=\"#链式结构的简单选择排序\"></a> 链式结构的简单选择排序</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">easySelectSort</span><span class=\"hljs-params\">(LinkList *l)</span></span>&#123;\n    <span class=\"hljs-keyword\">if</span>(l == <span class=\"hljs-literal\">NULL</span>) <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-type\">int</span> min = MAX_INT;\n    <span class=\"hljs-type\">int</span> temp;\n    LinkList *p = l;\n    LinkList *r = p;\n    <span class=\"hljs-keyword\">while</span>(p)&#123;\n        min = p-&gt;data;\n        LinkList *q = p;\n        <span class=\"hljs-keyword\">while</span>(q)&#123;\n            <span class=\"hljs-keyword\">if</span>(q-&gt;data &lt; min)&#123;\n                r=q;\n                min = r-&gt;data;\n            &#125;\n            q = q-&gt;next;\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (r != p) &#123;\n        \ttemp = r-&gt;data;\n        \tr-&gt;data = p-&gt;data;\n        \tp-&gt;data = temp;\n        &#125;\n        p = p-&gt;next;\n    &#125;\n&#125;\n</code></pre>\n<h1 id=\"综合代码题目\"><a class=\"markdownIt-Anchor\" href=\"#综合代码题目\"></a> 综合代码题目</h1>\n<h2 id=\"快速排序分区函数-顺序表移动\"><a class=\"markdownIt-Anchor\" href=\"#快速排序分区函数-顺序表移动\"></a> 快速排序分区函数 + 顺序表移动</h2>\n<p>:::primary no-icon<br />\n设计一个算法，调整数组a[]中的元素并返回分界值，使所有小于x的元素都出现在其左边（a[1…i]），所有大于x的元素都出现在其右边（a[i+1…n]）。<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">div</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[],intx)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> rear = a.length;\n    a[rear] = x;\n    <span class=\"hljs-type\">int</span> start = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span>(start &lt; rear)&#123;\n        <span class=\"hljs-keyword\">while</span>(start&lt;rear &amp;&amp; x&gt;=a[start]) rear--;\n        a[rear] = a[start];\n        <span class=\"hljs-keyword\">while</span>(start&lt;rear &amp;&amp; x&lt;a[rear]) start++;\n        a[strat] = a[rear];\n    &#125;\n    <span class=\"hljs-type\">int</span> i = start;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j=i; j&gt;<span class=\"hljs-number\">0</span>; j--)&#123;\n        a[i]=a[i<span class=\"hljs-number\">-1</span>];\n    &#125;\n    <span class=\"hljs-keyword\">return</span> i;\n&#125;\n</code></pre>\n<p>:::danger<br />\n实际上，上述代码有一些不严谨的部分，比如，可能造成数组越界。<br />\n但仍然可以帮助我们拿下绝大部分的分数。<br />\n:::</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">div</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[],<span class=\"hljs-type\">int</span> h,<span class=\"hljs-type\">int</span> x)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> i,j,t;\n    i = <span class=\"hljs-number\">1</span>;\n    j = h;\n    <span class=\"hljs-keyword\">while</span>(i&lt;j)&#123;\n        <span class=\"hljs-comment\">// 找到第一个小于等于x的元素</span>\n        <span class=\"hljs-keyword\">while</span>(i&lt;j &amp;&amp; a[j]&gt;=x) j--;\n        <span class=\"hljs-comment\">// 找到第一个大于x的元素</span>\n        <span class=\"hljs-keyword\">while</span>(i&lt;j &amp;&amp; a[i]&lt;=x) i++;\n        <span class=\"hljs-keyword\">if</span>(i&lt;j)&#123;\n            <span class=\"hljs-comment\">// 交换元素</span>\n            t = a[i];\n            a[i] = a[j];\n            a[j] = t;\n        &#125;\n    &#125;\n    <span class=\"hljs-comment\">// 这里可能会出现i跨越j的情况，这里做下判断</span>\n    <span class=\"hljs-comment\">// 如果i位置的数仍然比x要小，那么就可以返回i</span>\n    <span class=\"hljs-comment\">// 反之就是i跨越了j，而且最多只会跨越一步，返回i-1</span>\n    <span class=\"hljs-keyword\">if</span>(a[i]&lt;x) <span class=\"hljs-keyword\">return</span> i;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> i<span class=\"hljs-number\">-1</span>;\n&#125;\n</code></pre>\n<p>:::success<br />\n上述代码体现就是一种类似“就地算法”的思想，无需借助辅助空间。<br />\n找到第一个大于x与小于x的数，直接原地交换位置，然后继续寻找。<br />\n:::</p>\n<h2 id=\"将奇数转移到偶数之前\"><a class=\"markdownIt-Anchor\" href=\"#将奇数转移到偶数之前\"></a> 将奇数转移到偶数之前</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">quickPass</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> r[],<span class=\"hljs-type\">int</span> s,<span class=\"hljs-type\">int</span> t)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> i = s;\n    <span class=\"hljs-type\">int</span> j = t;\n    <span class=\"hljs-type\">int</span> x = r[s];\n    <span class=\"hljs-keyword\">while</span>(i &lt; j)&#123;\n        <span class=\"hljs-keyword\">while</span>(i &lt; j &amp;&amp; r[j]%<span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">1</span>)&#123;\n            j--;\n        &#125;\n        <span class=\"hljs-keyword\">if</span>(i &lt; j)&#123;\n            r[i] = r[j];\n            i++;\n        &#125;\n        <span class=\"hljs-keyword\">while</span>(i &lt; j &amp;&amp; r[i]%<span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>)&#123;\n            i++;\n        &#125;\n        <span class=\"hljs-keyword\">if</span>(i &lt; j)&#123;\n            r[j] = r[i];\n            j++;\n        &#125;\n    &#125;\n    r[i] = x;\n&#125;\n</code></pre>\n<h2 id=\"s是栈q是队列将队列中的元素逆置\"><a class=\"markdownIt-Anchor\" href=\"#s是栈q是队列将队列中的元素逆置\"></a> S是栈，Q是队列，将队列中的元素逆置</h2>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Inverser</span><span class=\"hljs-params\">(Stack &amp;S,Queue &amp;Q)</span></span>&#123;\n    <span class=\"hljs-type\">int</span> x;\n    <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">QueueEmpty</span>(Q))&#123;\n        x = <span class=\"hljs-built_in\">DeQueue</span>(Q);\n        <span class=\"hljs-built_in\">Push</span>(S,x);\n    &#125;\n    <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">StackEmpty</span>(S))&#123;\n        <span class=\"hljs-built_in\">Pop</span>(S,x);\n        <span class=\"hljs-built_in\">EnQueue</span>(Q,x);\n    &#125;\n&#125;\n</code></pre>\n",
            "tags": [
                "DS",
                "数据结构"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/KnowledgeSummary/",
            "url": "https://735690757.github.io/Operate-system/KnowledgeSummary/",
            "title": "操作系统细碎知识点及公式速记",
            "date_published": "2024-09-09T12:41:00.000Z",
            "content_html": "<h1 id=\"操作系统细碎知识点总结\"><a class=\"markdownIt-Anchor\" href=\"#操作系统细碎知识点总结\"></a> 操作系统细碎知识点总结</h1>\n<ol>\n<li>现代操作系统两个最基本特征：[并发]{.label .primary}  与  [共享]{.label .primary}</li>\n<li>OS主要特征是：[并发]{.label .primary}、[共享]{.label .primary}、[虚拟]{.label .primary} 以及 [异步]{.label .primary}</li>\n<li>操作系统出现的标志：[多道程序设计]{.label .primary} 以及 [分时操作系统]{.label .primary} 的出现</li>\n<li>高级调度：[作业调度]{.label .primary}</li>\n<li>中级调度：[内存调度]{.label .primary}</li>\n<li>低级调度：[进程调度]{.label .primary}</li>\n<li>多级存储分为三部分：[高速缓存]{.label .primary}、[内存/主存]{.label .primary} 以及 [外存]{.label .primary}</li>\n<li>进程的调度时机：[时间片完]{.label .primary}、[正常结束]{.label .primary}、[P操作]{.label .primary}、[IO请求]{.label .primary} 以及 [优先级抢占]{.label .primary}</li>\n<li>文件系统的功能：[按名存取]{.label .primary}、[存储空间管理]{.label .primary}、[文件共享与保护]{.label .primary} 以及 [文件操作]{.label .primary}</li>\n<li>SPOOLING系统的组成：[输入进程]{.label .primary}、[输入缓冲区]{.label .primary}、[输入井]{.label .primary}、[输出进程]{.label .primary}、[输出缓冲区]{.label .primary} 以及 [输出井]{.label .primary}</li>\n<li>进程的结构特征（有争议/不严谨）：[独立性]{.label .primary}、[动态性]{.label .primary}、[异步性]{.label .primary} 以及 [并发性]{.label .primary}</li>\n<li>虚拟存储器的主要特征：[多次性]{.label .primary}、[对换性]{.label .primary} 以及 [虚拟性]{.label .primary}</li>\n<li>所学的进程调度算法中，最中庸、最能让长作业和短作业都满意的调度算法是：[多级反馈队列调度算法]{.label .primary}</li>\n<li>进程是[资源分配]{.label .primary}的基本单位，线程是[调度]{.label .primary}的基本单位</li>\n<li>程序的几种装入方式：[静态装入]{.label .primary}、[可重定位装入]{.label .primary} 以及 [动态运行时装入]{.label .primary}</li>\n<li>程序的几种链接方式：[静态链接]{.label .primary}、[装入时动态链接]{.label .primary} 以及 [运行时动态链接]{.label .primary}</li>\n<li>程序的顺序执行的特征：[顺序性]{.label .primary}、[封闭性]{.label .primary} 以及 [结果可再现性]{.label .primary}</li>\n<li>请求分页式虚拟存储系统必须至少具有三种硬件支持，即[页表机制]{.label .primary}、[缺页中断机构]{.label .primary} 以及 [地址变换机构]{.label .primary}</li>\n<li>程序并发执行的特性有：[间断性]{.label .primary}、[失去封闭性]{.label .primary}、[失去结果可再现性]{.label .primary}</li>\n<li>进程控制块的信息有：[进程标识符]{.label .primary}、[处理机状态]{.label .primary}、[进程控制信息]{.label .primary}、[进程调度信息]{.label .primary}</li>\n<li>扇区是磁盘空间管理的最基本单位，其物理地址是由：[柱面号]{.label .primary}、[扇区号]{.label .primary}、[磁头号]{.label .primary}三部分组成的</li>\n<li>火车站售票系统属于[实时系统]{.label .primary}</li>\n<li>I/O管制程序的主要功能是管理[设备、控制器和通道]{.label .primary}的状态信息</li>\n<li>依据信号量的发展过程，可将信号量分为四种：[and型信号量]{.label .primary}、[信号量集]{.label .primary}、[互斥信号量]{.label .primary} 以及 [整型信号量]{.label .primary}</li>\n<li>进程通信类型有：[共享存储器系统]{.label .primary}、[消息传递系统]{.label .primary}、[管道通信]{.label .primary} 以及 [异步阻塞通信]{.label .primary}</li>\n<li>分段存储管理的优点有：[方便编程]{.label .primary}、[信息共享]{.label .primary}、[动态增长]{.label .primary}、[动态链接]{.label .primary}以及 [信息保护]{.label .primary}</li>\n<li>[成批性]{.label .primary}是批处理操作系统的主要特征，不是分时系统的特性</li>\n<li>推动操作系统发展的主要动力有：[不断提高计算机资源利用率]{.label .primary}、[方便用户]{.label .primary}、[器件的不断更新换代]{.label .primary} 以及 [计算机体系结构的不断发展]{.label .primary}</li>\n<li>同步机制应当遵循的规则有：[空闲让进]{.label .primary}、[让权等待]{.label .primary}、[忙则等待]{.label .primary} 以及 [有限等待]{.label .primary}</li>\n<li>系统中各个进程相互制约的关系称为[同步]{.label .primary}</li>\n<li>对于死锁，一般应考虑死锁的[预防]{.label .primary}、[检测]{.label .primary}、[避免]{.label .primary} 以及 [解除]{.label .primary}</li>\n<li>典型的银行家算法是属于[死锁避免]{.label .primary}，破坏环路等待条件是属于[死锁预防]{.label .primary}，剥夺资源是属于[死锁解除]{.label .primary}</li>\n<li>操作系统向用户提供了两种接口分别是[用户接口]{.label .primary}和[系统接口]{.label .primary}</li>\n<li>设别分别配应保证设备有[高利用率]{.label .primary}和避免[死锁]{.label .primary}</li>\n<li>对于操作系统而言，打开文件广义指令的主要作用是装入[文件目录项]{.label .primary}</li>\n<li>为了实现多道程序设计，计算机在硬件方面必须提供两种支持，他们分别是[中断]{.label .primary}和[通道]{.label .primary}</li>\n<li>多道程序设计给存储管理提出了新课题，应考虑的三个问题是[存储分配]{.label .primary}、[虚存管理]{.label .primary}、[存储保护]{.label .primary}</li>\n<li>操作系统的内核应提供[终端管理]{.label .primary}、[短程管理]{.label .primary}、[原语管理]{.label .primary}三方面的功能</li>\n<li>死锁产生的主要原因为[资源竞争]{.label .primary}和[进程非法推进]{.label .primary}</li>\n<li>设备分配外部设备时。先分配[设备]{.label .primary}，再分配[控制器]{.label .primary}，再分配[通道]{.label .primary}</li>\n<li>可用于文件系统管理空闲磁盘块的数据结构是[位示图]{.label .primary}、[空闲盘块链]{.label .primary}、[文件分配表FAT]{.label .primary}</li>\n<li>[索引文件]{.label .primary}既利于文件的动态增长，也适合随机访问。</li>\n<li>[Peterson算法]{.label .primary}实现互斥访问，[swap指令]{.label .primary}与[TestAndSet指令]{.label .primary}实现忙则等待，[信号量算法]{.label .primary}实现让权等待，[自旋锁]{.label .primary}实现空闲让进</li>\n<li>银行家算法破坏了死锁四个必要条件的[循环等待条件]{.label .primary}</li>\n<li>死锁的四个条件为：[互斥条件]{.label .primary}、[请求与保持条件]{.label .primary}、[不可剥夺条件]{.label .primary} 以及 [循环等待条件]{.label .primary}</li>\n<li></li>\n</ol>\n<h1 id=\"常用公式速记\"><a class=\"markdownIt-Anchor\" href=\"#常用公式速记\"></a> 常用公式速记</h1>\n<h2 id=\"进程调度有关公式\"><a class=\"markdownIt-Anchor\" href=\"#进程调度有关公式\"></a> 进程调度有关公式</h2>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mtext>周转时间</mtext></msub><mo>=</mo><msub><mi>T</mi><mtext>结束时间</mtext></msub><mo>−</mo><msub><mi>T</mi><mtext>提交时间</mtext></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\nT_{\\text{周转时间}}=T_{\\text{结束时间}}-T_{\\text{提交时间}}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">结束时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">提交时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mtext>带权周转时间</mtext></msub><mo>=</mo><mfrac><msub><mi>T</mi><mtext>周转时间</mtext></msub><msub><mi>T</mi><mtext>运行时间</mtext></msub></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\nT_{\\text{带权周转时间}}=\\frac{T_{\\text{周转时间}}}{T_{\\text{运行时间}}}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3339409999999998em;vertical-align:-0.4169704999999999em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9169704999999999em;\"><span style=\"top:-3.0283345em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">带权周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886359999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">运行时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44530499999999995em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4169704999999999em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mtext>平均周转时间</mtext></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>T</mi><mrow><mi>i</mi><mtext>周转时间</mtext></mrow></msub></mrow><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\nT_{\\text{平均周转时间}}=\\frac{\\sum_{i=1}^{n}  {T_{i\\text{周转时间}}}}{n}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.420007em;vertical-align:-0.46000349999999995em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9600035em;\"><span style=\"top:-2.9600034999999996em;\"><span class=\"pstrut\" style=\"height:3.0600069999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">平均周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.060007em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5350070000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mop op-symbol small-op mtight\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32143857142857146em;\"><span></span></span></span></span></span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46000349999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mtext>平均带权周转时间</mtext></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>T</mi><mrow><mi>i</mi><mtext>带权周转时间</mtext></mrow></msub></mrow><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\nT_{\\text{平均带权周转时间}}=\\frac{\\sum_{i=1}^{n}  {T_{i\\text{带权周转时间}}}}{n}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.420007em;vertical-align:-0.46000349999999995em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9600035em;\"><span style=\"top:-2.9600034999999996em;\"><span class=\"pstrut\" style=\"height:3.0600069999999997em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">平均带权周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.060007em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5350070000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mop op-symbol small-op mtight\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32143857142857146em;\"><span></span></span></span></span></span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">带权周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46000349999999995em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>R</mi><mtext>响应比</mtext></msub><mo>=</mo><mfrac><msub><mi>T</mi><mtext>当前周转时间</mtext></msub><msub><mi>T</mi><mtext>运行时间</mtext></msub></mfrac><mo>=</mo><mfrac><msub><mi>T</mi><mtext>当前等待时间</mtext></msub><msub><mi>T</mi><mtext>运行时间</mtext></msub></mfrac><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\nR_{\\text{响应比}}=\\frac{T_{\\text{当前周转时间}}}{T_{\\text{运行时间}}}=\\frac{T_{\\text{当前等待时间}}}{T_{\\text{运行时间}}}+1\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3339409999999998em;vertical-align:-0.4169704999999999em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9169704999999999em;\"><span style=\"top:-3.0283345em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">响应比</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886359999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">运行时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">当前周转时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44530499999999995em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886359999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">运行时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">当前等待时间</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44530499999999995em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4169704999999999em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<h1 id=\"典型例题\"><a class=\"markdownIt-Anchor\" href=\"#典型例题\"></a> 典型例题</h1>\n<h2 id=\"逻辑地址转物理地址\"><a class=\"markdownIt-Anchor\" href=\"#逻辑地址转物理地址\"></a> 逻辑地址转物理地址</h2>\n<p>已知某分页系统，内存容量为64KB，页面大小为1KB，对一个4页大的作业，其0、1、2、3页分别被分配到内存的 2、4、6、7 块中。</p>\n<p>将十进制的逻辑地址 1023变换为物理地址。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>内存容量</mtext><mn>64</mn><mi>K</mi><mi>B</mi><mtext>——</mtext><msup><mn>2</mn><mn>16</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\n内存容量64KB ——2^{16}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">内</span><span class=\"mord cjk_fallback\">存</span><span class=\"mord cjk_fallback\">容</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord\">6</span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">—</span><span class=\"mord\">—</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>页面大小为</mtext><mn>1</mn><mi>K</mi><mi>B</mi><mtext>——</mtext><msup><mn>2</mn><mn>10</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\n页面大小为1KB——2^{10}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">页</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">大</span><span class=\"mord cjk_fallback\">小</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">—</span><span class=\"mord\">—</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>共有</mtext><mfrac><msup><mn>2</mn><mn>16</mn></msup><msup><mn>2</mn><mn>10</mn></msup></mfrac><mo>=</mo><msup><mn>2</mn><mn>6</mn></msup><mtext>页</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\n共有\\frac{2^{16}}{2^{10}} =2^{6}页\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.37792em;vertical-align:-0.43895999999999996em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93896em;\"><span style=\"top:-2.9389600000000002em;\"><span class=\"pstrut\" style=\"height:3.01792em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">共</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01792em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463142857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">页</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43895999999999996em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">页</th>\n<th style=\"text-align:center\">块</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><ins><strong>0</strong></ins></td>\n<td style=\"text-align:center\"><ins><strong>2</strong></ins></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">7</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>102</mn><msub><mn>3</mn><mrow><mo stretchy=\"false\">(</mo><mn>10</mn><mo stretchy=\"false\">)</mo></mrow></msub><mo>=</mo><mn>00111111111</mn><msub><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\n1023_{(10)} =0011 1111 1111_{(2)}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span><br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>转换后</mtext><mn>10111111111</mn><msub><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msub><mo>=</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>07</mn><msub><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>10</mn><mo stretchy=\"false\">)</mo></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin {array}{c}\n转换后 1011 1111 1111_{(2)}=3,071_{(10)}\n\\end {array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">转</span><span class=\"mord cjk_fallback\">换</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">7</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></p>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/DSLearnNote/GeneralizedLists/",
            "url": "https://735690757.github.io/DSLearnNote/GeneralizedLists/",
            "title": "考试中有关广义表的两个常用函数的解",
            "date_published": "2024-09-09T03:00:00.000Z",
            "content_html": "<h1 id=\"认识广义表\"><a class=\"markdownIt-Anchor\" href=\"#认识广义表\"></a> 认识广义表</h1>\n<p>广义表是线性表的推广，与线性表不同的是，线性表中的每一个数据元素都属于同一数据对象。</p>\n<p>广义表可以表示为：</p>\n<ol>\n<li>空表：()</li>\n<li>表头：(表头)</li>\n<li>表头+表尾：(表头,表尾)</li>\n</ol>\n<p><strong>实际上这就是他的基本结构，而对于其中的元素来说，它可以是表，也可以是元素，这就是广义！</strong></p>\n<h1 id=\"取头head\"><a class=\"markdownIt-Anchor\" href=\"#取头head\"></a> 取头Head()</h1>\n<p>Head是取头操作，他拿的是一个<strong>元素</strong>或者一个<strong>表</strong></p>\n<h1 id=\"取尾tail\"><a class=\"markdownIt-Anchor\" href=\"#取尾tail\"></a> 取尾Tail()</h1>\n<p>Tail是取尾操作，他拿到的必是一个<strong>表</strong></p>\n<h1 id=\"巧记\"><a class=\"markdownIt-Anchor\" href=\"#巧记\"></a> 巧记</h1>\n<p>对于蟒蛇（Python）来说，头只有一个，而它的尾巴很长。</p>\n<p>所以，取头<strong>Head</strong>元素比<strong>较单一</strong>，取尾<strong>Tail</strong>往往<strong>比较长</strong>。</p>\n<h1 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\"></a> 练习</h1>\n<p>:::primary</p>\n<p>A=（a，b）</p>\n<p>B=（A，A）</p>\n<p>C=（a，（b，A），B）</p>\n<p>对于操作：Tail（Head（Tail（C）））的结果是什么？</p>\n<p>:::</p>\n<h1 id=\"解答\"><a class=\"markdownIt-Anchor\" href=\"#解答\"></a> 解答</h1>\n<p>Tail（C）尾巴长：（a，<ins>（b，A），B</ins>{.dot .warning} ）</p>\n<p>[Tail（C）=（（b，A），B）]{.label .info}</p>\n<p>Head（Tail（C））头短：（<ins>（b，A）</ins>{.dot .warning}，B）</p>\n<p>[Head（Tail（C））=（b，A）]{.label .info}</p>\n<p>Tail（Head（Tail（C）））尾巴长：（b，<ins>A</ins>{.dot .warning}）</p>\n<p>[Tail（Head（Tail（C）））=（A）]{.label .info}</p>\n<p><strong>尾巴长必是一个表，头短可能是一个表也可能是一个元素</strong></p>\n",
            "tags": [
                "DS",
                "数据结构"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/kcsj/",
            "url": "https://735690757.github.io/Operate-system/kcsj/",
            "title": "操作系统课程设计",
            "date_published": "2024-01-04T07:41:00.000Z",
            "content_html": "<h1 id=\"虚拟存储器管理\"><a class=\"markdownIt-Anchor\" href=\"#虚拟存储器管理\"></a> 虚拟存储器管理</h1>\n<iframe src=\"//player.bilibili.com/player.html?aid=793352357&bvid=BV1KC4y1v7JM&cid=1393861516&p=1\" width=\"788px\" height=\"443px\"  scrolling=\"yes\" border=\"0\" frameborder=\"no\" framespacing=\"10\" allowfullscreen=\"true\"> </iframe>\n<h2 id=\"什么是虚拟存储器\"><a class=\"markdownIt-Anchor\" href=\"#什么是虚拟存储器\"></a> 什么是虚拟存储器？</h2>\n<p>​ 虚拟存储器是一种计算机内存管理技术，它通过将计算机的硬盘空间作为辅助存储器，允许程序使用比物理内存更大的地址空间。虚拟存储器的目标是提供更大的可用内存空间，以便同时运行更多的程序，而不受物理内存的限制。</p>\n<p>​ 虚拟存储的实现是基于局部存储原理的，要理解虚拟存储我们就要去理解局部存储的是实现，即：分页存储、分段存储、段页式存储。</p>\n<p><strong>（这里我们重点掌握具有块表的分页存储）</strong></p>\n<h2 id=\"课程设计核心目的\"><a class=\"markdownIt-Anchor\" href=\"#课程设计核心目的\"></a> 课程设计核心目的？</h2>\n<p><ins>将逻辑地址转为物理地址</ins>{.wavy}</p>\n<h1 id=\"页表\"><a class=\"markdownIt-Anchor\" href=\"#页表\"></a> 页表？</h1>\n<table>\n<thead>\n<tr>\n<th><strong>页号</strong></th>\n<th><strong>块号</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td>4</td>\n</tr>\n<tr>\n<td>3</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n<p>针对这个课程设计，我们简单的理解为应用页表就是通过页号，来去找到块号</p>\n<p><a href=\"https://imgse.com/i/pivXrrt\"><img data-src=\"https://s11.ax1x.com/2024/01/04/pivXrrt.png\" alt=\"地址转换\" style=\"zoom: 67%;\" /></a></p>\n<p>由虚拟地址（逻辑地址）转换为物理地址，这就是页表最核心的作用！</p>\n<h1 id=\"为什么要用虚拟内存\"><a class=\"markdownIt-Anchor\" href=\"#为什么要用虚拟内存\"></a> 为什么要用虚拟内存</h1>\n<p>但是，我们的内存很小，还想运行多个应用程序，这必然无法满足所有的有的应用程序一次性全部加载到内存之中。根据局部性理论基础，我们又引申出页面的对换算法（页面置换算法）。</p>\n<p>本次课程设计采用的是 Clock 算法</p>\n<p>将页表扩充，引入访问位、修改位、有效位（本次仅用于算法实现，它其实用其他</p>\n<p>更有用的功能，在此不做介绍）</p>\n<table>\n<thead>\n<tr>\n<th><strong>修改位</strong></th>\n<th><strong>访问位</strong></th>\n<th><strong>重要排名</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>4</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>3</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>2</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>在置换时，优先考虑不那么重要的（排名越低越不重要），对于不重要的页优先换出</p>\n<h1 id=\"状态转换\"><a class=\"markdownIt-Anchor\" href=\"#状态转换\"></a> 状态转换？</h1>\n<p>这里稍后同步，大家可以先看视频里的有关状态转换的图。</p>\n<h1 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\"></a> 代码实现</h1>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-comment\">/**\n * @Author KarryLiu\n * @Creed may all the beauty be blessed\n * @Date 2023/12/4 上午 10:04\n * @Description TODO 诗岸梦行舟\n * @Version 1.0\n */</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;limits&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;iostream&quot;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;windows.h&quot;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&quot;unistd.h&quot;</span></span>\n\n<span class=\"hljs-comment\">// 颜色枚举，为了好看</span>\n<span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">ConsoleColor</span> &#123;\n    Black = <span class=\"hljs-number\">0</span>,\n    Blue = <span class=\"hljs-number\">1</span>,\n    Green = <span class=\"hljs-number\">2</span>,\n    Cyan = <span class=\"hljs-number\">3</span>,\n    Red = <span class=\"hljs-number\">4</span>,\n    Magenta = <span class=\"hljs-number\">5</span>,\n    Yellow = <span class=\"hljs-number\">6</span>,\n    White = <span class=\"hljs-number\">7</span>,\n    Gray = <span class=\"hljs-number\">8</span>\n&#125;;\n\n<span class=\"hljs-comment\">// 设置文本颜色函数</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">setConsoleColor</span><span class=\"hljs-params\">(ConsoleColor text, ConsoleColor background)</span> </span>&#123;\n    <span class=\"hljs-type\">int</span> color = text + background * <span class=\"hljs-number\">16</span>;\n    <span class=\"hljs-built_in\">SetConsoleTextAttribute</span>(<span class=\"hljs-built_in\">GetStdHandle</span>(STD_OUTPUT_HANDLE), color);\n&#125;\n<span class=\"hljs-comment\">// 块大小</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> blockSize 4</span>\n<span class=\"hljs-comment\">// 页大小</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> pageSize 2</span>\n<span class=\"hljs-comment\">// 快表尺寸</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> fastTableDimensions 4</span>\n<span class=\"hljs-comment\">// 页表尺寸</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> pageTableDimensions 6</span>\n<span class=\"hljs-comment\">// 程序最大逻辑地址</span>\n<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> logicalMaxAddress = <span class=\"hljs-number\">100</span>;\n<span class=\"hljs-comment\">// 逻辑地址数据结构 -&gt; 页</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">logicalAddressDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> pageNumber;\n    <span class=\"hljs-type\">int</span> inPageAddress;\n&#125;;\n<span class=\"hljs-comment\">// 页逻辑地址实现机构</span>\nlogicalAddressDataStruct logicalAddress;\n<span class=\"hljs-comment\">// 模拟外存中单条数据的数据结构</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">externalMemoryDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> externalPageNumber;\n    <span class=\"hljs-type\">int</span> externalBlockNumber;\n    <span class=\"hljs-comment\">// 访问位</span>\n    <span class=\"hljs-type\">bool</span> accessBit;\n    <span class=\"hljs-comment\">// 修改位</span>\n    <span class=\"hljs-type\">bool</span> modifyBit;\n    <span class=\"hljs-comment\">// 有效位</span>\n    <span class=\"hljs-type\">bool</span> validBit;\n&#125;;\n\n<span class=\"hljs-comment\">// 外存所有存储结构,也就是最大逻辑地址100的一半，50页</span>\nexternalMemoryDataStruct externalMemory[logicalMaxAddress / pageSize];\n<span class=\"hljs-comment\">// 模拟内存中单条数据的数据结构(页表)</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">internalStorageDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> internalPageNumber;\n    <span class=\"hljs-type\">int</span> internalBlockNumber;\n    <span class=\"hljs-comment\">// 访问位</span>\n    <span class=\"hljs-type\">bool</span> accessBit;\n    <span class=\"hljs-comment\">// 修改位</span>\n    <span class=\"hljs-type\">bool</span> modifyBit;\n    <span class=\"hljs-comment\">// 有效位</span>\n    <span class=\"hljs-type\">bool</span> validBit;\n&#125;;\n<span class=\"hljs-comment\">// 页表实体</span>\ninternalStorageDataStruct pageTable[pageTableDimensions];\n<span class=\"hljs-comment\">// 快表数据结构</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">fastTableDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> fastTablePageNumber;\n    <span class=\"hljs-type\">int</span> fastTableBlockNumber;\n    <span class=\"hljs-comment\">// 访问位</span>\n    <span class=\"hljs-type\">bool</span> accessBit;\n    <span class=\"hljs-comment\">// 修改位</span>\n    <span class=\"hljs-type\">bool</span> modifyBit;\n    <span class=\"hljs-comment\">// 有效位</span>\n    <span class=\"hljs-type\">bool</span> validBit;\n&#125;;\n<span class=\"hljs-comment\">// 快表实体</span>\nfastTableDataStruct fastTable[fastTableDimensions];\n<span class=\"hljs-comment\">// 快表置换排行榜数据结构</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">rankForFastTableDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> pageNumber;\n    <span class=\"hljs-type\">int</span> fastTableIndex;\n&#125;;\n<span class=\"hljs-comment\">// 页表置换排行榜数据结构</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">rankForPageTableDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> pageNumber;\n    <span class=\"hljs-type\">int</span> pageTableIndex;\n&#125;;\n<span class=\"hljs-comment\">// 物理地址数据结构</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">physicalAddressDataStruct</span> &#123;\n    <span class=\"hljs-type\">int</span> blockNumber;\n    <span class=\"hljs-type\">int</span> internalBlockAddress;\n&#125;;\n<span class=\"hljs-comment\">// 转换后的物理地址实体</span>\nphysicalAddressDataStruct physicalAddress;\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-comment\">/**\n * @Describe 初始化外存数据\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">InitializeExternalData</span><span class=\"hljs-params\">()</span> </span>&#123;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; logicalMaxAddress / pageSize; i++) &#123;\n        <span class=\"hljs-comment\">// 计算页号与块号</span>\n        externalMemory[i].externalPageNumber = i;\n        externalMemory[i].externalBlockNumber = i / blockSize;\n    &#125;\n<span class=\"hljs-comment\">//    for (int i = 0; i &lt; logicalMaxAddress / pageSize; ++i) &#123;</span>\n<span class=\"hljs-comment\">//        cout&lt;&lt;externalMemory[i].externalPageNumber&lt;&lt;&quot;   &quot;&lt;&lt;externalMemory[i].externalBlockNumber&lt;&lt;endl;</span>\n<span class=\"hljs-comment\">//    &#125;</span>\n&#125;\n\n<span class=\"hljs-comment\">/**\n * @Describe 从外存中寻找所缺失的页\n * @return externalMemoryDataStruct 返回找到的外存数据页\n */</span>\n<span class=\"hljs-function\">externalMemoryDataStruct <span class=\"hljs-title\">LookMissingPageFromExternalMemory</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> logicalAddressPageNumber)</span> </span>&#123;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; logicalMaxAddress / pageSize; i++) &#123;\n        <span class=\"hljs-comment\">// 计算页号与块号</span>\n        <span class=\"hljs-keyword\">if</span> (externalMemory[i].externalPageNumber == logicalAddressPageNumber) &#123;\n            <span class=\"hljs-keyword\">return</span> externalMemory[i];\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">PageTableVisualization</span><span class=\"hljs-params\">()</span> </span>&#123;\n    <span class=\"hljs-built_in\">setConsoleColor</span>(Magenta, Black);\n\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;-------------------页表（内存）-------------------+&quot;</span> &lt;&lt; endl;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;页号：&quot;</span> &lt;&lt; pageTable[i].internalPageNumber &lt;&lt; <span class=\"hljs-string\">&quot;  块号：&quot;</span> &lt;&lt; pageTable[i].internalBlockNumber &lt;&lt; <span class=\"hljs-string\">&quot;  访问位：&quot;</span>\n             &lt;&lt; pageTable[i].accessBit &lt;&lt; <span class=\"hljs-string\">&quot;  修改位：&quot;</span> &lt;&lt; pageTable[i].modifyBit &lt;&lt; <span class=\"hljs-string\">&quot;  有效位：&quot;</span> &lt;&lt; pageTable[i].validBit\n             &lt;&lt; endl;\n    &#125;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;--------------------------------------------------+&quot;</span> &lt;&lt; endl;\n\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">FastTableVisualization</span><span class=\"hljs-params\">()</span> </span>&#123;\n    <span class=\"hljs-built_in\">setConsoleColor</span>(Cyan, Black);\n<span class=\"hljs-comment\">//    sleep(1);</span>\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;----------------------快表-----------------------+&quot;</span> &lt;&lt; endl;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;页号：&quot;</span> &lt;&lt; fastTable[i].fastTablePageNumber &lt;&lt; <span class=\"hljs-string\">&quot;  块号：&quot;</span> &lt;&lt; fastTable[i].fastTableBlockNumber\n             &lt;&lt; <span class=\"hljs-string\">&quot;  访问位：&quot;</span> &lt;&lt; fastTable[i].accessBit &lt;&lt; <span class=\"hljs-string\">&quot;  修改位：&quot;</span> &lt;&lt; fastTable[i].modifyBit &lt;&lt; <span class=\"hljs-string\">&quot;  有效位：&quot;</span>\n             &lt;&lt; fastTable[i].validBit &lt;&lt; endl;\n    &#125;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;-------------------------------------------------+&quot;</span> &lt;&lt; endl;\n&#125;\n\n<span class=\"hljs-comment\">/**\n * @Describe 初始化页表\n */</span>\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">InitializePageTable</span><span class=\"hljs-params\">()</span> </span>&#123;\n&#125;\n\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;\n    <span class=\"hljs-built_in\">setConsoleColor</span>(Cyan, Black);\n    cout&lt;&lt;<span class=\"hljs-string\">&quot;诗岸梦行舟&quot;</span>&lt;&lt;endl;\n    cout&lt;&lt;<span class=\"hljs-string\">&quot;操作系统课程设计：虚拟存储器管理&quot;</span>&lt;&lt;endl;\n    <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">2</span>);\n    <span class=\"hljs-comment\">// 系统请求的逻辑地址</span>\n    <span class=\"hljs-type\">int</span> requestLogicalAddressByOS = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-comment\">// 初始化外存数据结构</span>\n    <span class=\"hljs-built_in\">InitializeExternalData</span>();\n    <span class=\"hljs-comment\">// 快表发现位，真就是发现了，假就是没发现</span>\n    <span class=\"hljs-type\">bool</span> fastTableFind = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-comment\">// 在快表的哪一位发现的？</span>\n    <span class=\"hljs-type\">int</span> fastTableFindPoint;\n    <span class=\"hljs-comment\">// 页表发现位，真就是发现了，假就是没发现</span>\n    <span class=\"hljs-type\">bool</span> pageTableFind = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-comment\">// 在页表的哪一位发现的？</span>\n    <span class=\"hljs-type\">int</span> pageTableFindPoint;\n    <span class=\"hljs-comment\">// 当前内存容量（页表剩余容量）</span>\n    <span class=\"hljs-type\">int</span> remainingCapacityOfPageTable = <span class=\"hljs-number\">6</span>;\n    <span class=\"hljs-comment\">// 当前快表容量（快表剩余容量）</span>\n    <span class=\"hljs-type\">int</span> remainingCapacityOfFastTable = <span class=\"hljs-number\">4</span>;\n\n\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) &#123;\n        <span class=\"hljs-comment\">// 初始化物理地址数据暂存</span>\n        physicalAddress.blockNumber = <span class=\"hljs-number\">-1</span>;\n        physicalAddress.internalBlockAddress = <span class=\"hljs-number\">-1</span>;\n\n        <span class=\"hljs-built_in\">setConsoleColor</span>(Blue, Black);\n<span class=\"hljs-comment\">//        sleep(2);</span>\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;系统基本信息：&quot;</span> &lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; +------------------------+&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot;----------------------+&quot;</span>&lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; |  块大小：&quot;</span> &lt;&lt; blockSize &lt;&lt; <span class=\"hljs-string\">&quot;             |&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot;       xx大学       |&quot;</span>&lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; |  页大小：&quot;</span> &lt;&lt; pageSize &lt;&lt; <span class=\"hljs-string\">&quot;             |&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot;     专业     |&quot;</span>&lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; |  最大逻辑地址：&quot;</span> &lt;&lt; logicalMaxAddress &lt;&lt; <span class=\"hljs-string\">&quot;     |&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot;     OS  课程设计     |&quot;</span>&lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; |  快表尺寸：&quot;</span> &lt;&lt; fastTableDimensions &lt;&lt; <span class=\"hljs-string\">&quot;           |&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot;   诗岸梦行舟  |&quot;</span>&lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; |  页表尺寸：&quot;</span> &lt;&lt; pageTableDimensions &lt;&lt; <span class=\"hljs-string\">&quot;           |&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot; 虚 拟 存 储 器 管 理 |&quot;</span>&lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot; +------------------------+&quot;</span> &lt;&lt;<span class=\"hljs-string\">&quot;----------------------+&quot;</span>&lt;&lt; endl;\n        <span class=\"hljs-built_in\">FastTableVisualization</span>();\n        <span class=\"hljs-built_in\">PageTableVisualization</span>();\n        <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;请输入应用程序请求的逻辑地址：&quot;</span> &lt;&lt; endl;\n        cin &gt;&gt; requestLogicalAddressByOS;\n        <span class=\"hljs-comment\">// 结束程序</span>\n        <span class=\"hljs-keyword\">if</span> (requestLogicalAddressByOS &lt; <span class=\"hljs-number\">0</span>) &#123; <span class=\"hljs-keyword\">break</span>; &#125;\n        <span class=\"hljs-comment\">// 逻辑地址越界</span>\n        <span class=\"hljs-keyword\">if</span> (requestLogicalAddressByOS &gt; logicalMaxAddress) &#123;\n            <span class=\"hljs-built_in\">setConsoleColor</span>(Red, Black);\n\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;您请求的地址超出最大逻辑地址！产生越界中断！&quot;</span> &lt;&lt; endl;\n            <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n            <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">2</span>);\n            <span class=\"hljs-keyword\">continue</span>;\n        &#125;\n        <span class=\"hljs-built_in\">setConsoleColor</span>(Cyan, Black);\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;您请求的十进制地址：&quot;</span> &lt;&lt; requestLogicalAddressByOS &lt;&lt; endl;\n        <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n\n        <span class=\"hljs-comment\">/**\n         * 计算逻辑地址数据\n         * P = [ A / L ]\n         * d = A % L\n         */</span>\n        logicalAddress.pageNumber = requestLogicalAddressByOS / pageSize;\n        logicalAddress.inPageAddress = requestLogicalAddressByOS % pageSize;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;计算后形成逻辑地址：&quot;</span> &lt;&lt; endl;\n        <span class=\"hljs-built_in\">setConsoleColor</span>(Magenta, Black);\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;+---页号---+---页内地址----+&quot;</span> &lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;|    &quot;</span> &lt;&lt; logicalAddress.pageNumber &lt;&lt; <span class=\"hljs-string\">&quot;    |       &quot;</span> &lt;&lt; logicalAddress.inPageAddress &lt;&lt; <span class=\"hljs-string\">&quot;       |&quot;</span>\n             &lt;&lt; endl;\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;+----------+---------------+&quot;</span> &lt;&lt; endl;\n<span class=\"hljs-comment\">//        cout&lt;&lt;&quot;按回车继续执行...&quot;;</span>\n<span class=\"hljs-comment\">//        cin.get();cin.get();</span>\n\n        <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n        <span class=\"hljs-comment\">// CPU检索块表</span>\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统检索快表...&quot;</span> &lt;&lt; endl;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n            <span class=\"hljs-keyword\">if</span> (fastTable[i].fastTablePageNumber == logicalAddress.pageNumber &amp;&amp; fastTable[i].validBit) &#123;\n                <span class=\"hljs-comment\">// 在快表中发现了与之对应的页号的数据页</span>\n                <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统在快表中发现了相应的数据页!&quot;</span> &lt;&lt; endl;\n                fastTableFindPoint = i;\n                <span class=\"hljs-comment\">// 将发现检查位置真</span>\n                fastTableFind = <span class=\"hljs-literal\">true</span>;\n                <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                <span class=\"hljs-keyword\">break</span>;\n            &#125;\n        &#125;\n\n        <span class=\"hljs-keyword\">if</span> (!fastTableFind) &#123;\n            <span class=\"hljs-comment\">// 快表中没有，访问页表</span>\n            <span class=\"hljs-built_in\">setConsoleColor</span>(Yellow, Black);\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;快表中没有发现相应的数据页!&quot;</span> &lt;&lt; endl;\n            <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统检索页表...&quot;</span> &lt;&lt; endl;\n            <span class=\"hljs-comment\">// 从内存中（页表）寻找所缺失的页</span>\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n                <span class=\"hljs-keyword\">if</span> (pageTable[i].internalPageNumber == logicalAddress.pageNumber &amp;&amp; pageTable[i].validBit) &#123;\n                    <span class=\"hljs-comment\">// 在内存中（页表）找到了数据页</span>\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统在页表中发现了相应的数据页!&quot;</span> &lt;&lt; endl;\n                    pageTableFind = <span class=\"hljs-literal\">true</span>;\n                    pageTableFindPoint = i;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-keyword\">break</span>;\n                &#125;\n            &#125;\n\n            <span class=\"hljs-keyword\">if</span> (!pageTableFind) &#123;\n                <span class=\"hljs-comment\">// 页表（内存）中没有</span>\n                <span class=\"hljs-built_in\">setConsoleColor</span>(Yellow, Black);\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;页中没有发现相应的数据页!&quot;</span> &lt;&lt; endl;\n                <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统会正在从外存中抽取页...&quot;</span> &lt;&lt; endl;\n                <span class=\"hljs-comment\">// 从外存中抽取页</span>\n                externalMemoryDataStruct externalMemoryFindPage = <span class=\"hljs-built_in\">LookMissingPageFromExternalMemory</span>(\n                        logicalAddress.pageNumber);\n                <span class=\"hljs-comment\">/*cout&lt;&lt;externalMemoryFindPage.externalPageNumber&lt;&lt;&quot;  &quot;&lt;&lt;externalMemoryFindPage.externalBlockNumber;*/</span>\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;成功抽取到了，现在正在检查内存是否已满...&quot;</span> &lt;&lt; endl;\n                <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">1</span>);\n\n                <span class=\"hljs-keyword\">if</span> (!(remainingCapacityOfPageTable &gt; <span class=\"hljs-number\">0</span>)) &#123;\n                    <span class=\"hljs-comment\">// 内存（页表）已满</span>\n                    <span class=\"hljs-comment\">// 这里得选择一个最没用的一页对换出去</span>\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Red, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;内存已满，操作系统需要进行页面置换，正在选择一个最没用的一页进行换出...&quot;</span> &lt;&lt; endl;;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-comment\">// 开始选择一个最没用的一页</span>\n                    <span class=\"hljs-comment\">// 页表置换排行榜</span>\n                    rankForPageTableDataStruct rankForPageTable[pageTableDimensions];\n                    <span class=\"hljs-comment\">// 初始化排行榜</span>\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n                        rankForPageTable[i].pageNumber - <span class=\"hljs-number\">1</span>;\n                        rankForPageTable[i].pageTableIndex = <span class=\"hljs-number\">-1</span>;\n                    &#125;\n                    <span class=\"hljs-comment\">// 模拟态桶排序</span>\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n                        <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit\n                            &amp;&amp; !pageTable[i].accessBit\n                            &amp;&amp; !pageTable[i].modifyBit) &#123;\n                            rankForPageTable[<span class=\"hljs-number\">0</span>].pageTableIndex = i;\n                            rankForPageTable[<span class=\"hljs-number\">0</span>].pageNumber = pageTable[i].internalPageNumber;\n                        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit\n                                   &amp;&amp; pageTable[i].accessBit\n                                   &amp;&amp; !pageTable[i].modifyBit) &#123;\n                            rankForPageTable[<span class=\"hljs-number\">1</span>].pageTableIndex = i;\n                            rankForPageTable[<span class=\"hljs-number\">1</span>].pageNumber = pageTable[i].internalPageNumber;\n                        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit\n                                   &amp;&amp; !pageTable[i].accessBit\n                                   &amp;&amp; pageTable[i].modifyBit) &#123;\n                            rankForPageTable[<span class=\"hljs-number\">2</span>].pageTableIndex = i;\n                            rankForPageTable[<span class=\"hljs-number\">2</span>].pageNumber = pageTable[i].internalPageNumber;\n                        &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                            rankForPageTable[<span class=\"hljs-number\">3</span>].pageTableIndex = i;\n                            rankForPageTable[<span class=\"hljs-number\">3</span>].pageNumber = pageTable[i].internalPageNumber;\n                        &#125;\n                    &#125;\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n                        <span class=\"hljs-keyword\">if</span> (rankForPageTable[i].pageNumber != <span class=\"hljs-number\">-1</span>) &#123;\n                            <span class=\"hljs-comment\">// 找到一个没用的页</span>\n                            <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                            cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统页表表选择了一个页号为&quot;</span>\n                                 &lt;&lt; pageTable[rankForPageTable[i].pageTableIndex].internalPageNumber\n                                 &lt;&lt; <span class=\"hljs-string\">&quot;的页进行换出...&quot;</span>\n                                 &lt;&lt; endl;;\n                            <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                            <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">1</span>);\n                            <span class=\"hljs-comment\">// 把页表中对应的页号置为无效</span>\n                            pageTable[rankForPageTable[i].pageTableIndex].validBit = <span class=\"hljs-literal\">false</span>;\n                            <span class=\"hljs-comment\">// 页表页面置换</span>\n                            pageTable[rankForPageTable[i].pageTableIndex].internalPageNumber = externalMemoryFindPage.externalPageNumber;\n                            pageTable[rankForPageTable[i].pageTableIndex].internalBlockNumber = externalMemoryFindPage.externalBlockNumber;\n                            pageTable[rankForPageTable[i].pageTableIndex].accessBit = <span class=\"hljs-literal\">false</span>;\n                            pageTable[rankForPageTable[i].pageTableIndex].modifyBit = <span class=\"hljs-literal\">false</span>;\n                            pageTable[rankForPageTable[i].pageTableIndex].validBit = <span class=\"hljs-literal\">true</span>;\n\n                            <span class=\"hljs-keyword\">break</span>;\n                        &#125;\n                    &#125;\n\n\n                &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                    <span class=\"hljs-comment\">// 内存（页表）仍有空间</span>\n                    <span class=\"hljs-comment\">// 有空间就可以塞进去</span>\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Blue, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;内存还有空间，操作系统正在读取缺页并回写内存中...&quot;</span> &lt;&lt; endl;;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n                        <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit == <span class=\"hljs-literal\">false</span>) &#123;\n                            pageTable[i].validBit = <span class=\"hljs-literal\">true</span>;\n                            pageTable[i].internalPageNumber = externalMemoryFindPage.externalPageNumber;\n                            pageTable[i].internalBlockNumber = externalMemoryFindPage.externalBlockNumber;\n                            <span class=\"hljs-keyword\">break</span>;\n                        &#125;\n                    &#125;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;页表回写成功！&quot;</span> &lt;&lt; endl;;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-comment\">// 塞完就减减</span>\n                    remainingCapacityOfPageTable--;\n                &#125;\n                <span class=\"hljs-keyword\">if</span> (!(remainingCapacityOfFastTable &gt; <span class=\"hljs-number\">0</span>)) &#123;\n                    <span class=\"hljs-comment\">//快表没有空间了</span>\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Red, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;快表已满，操作系统需要进行页面置换，正在选择一个最没用的一页进行换出...&quot;</span> &lt;&lt; endl;;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-comment\">// 选择一个最没用的一页进行换出！！！！！！！！！！</span>\n                    <span class=\"hljs-type\">bool</span> fastTableFindCheckIsTrue = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-type\">int</span> fastTableFindCheckIndex;\n                    <span class=\"hljs-comment\">// 快表置换排行榜</span>\n                    rankForFastTableDataStruct rankForFastTable[fastTableDimensions];\n                    <span class=\"hljs-comment\">// 初始化排行榜</span>\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                        rankForFastTable[i].pageNumber = <span class=\"hljs-number\">-1</span>;\n                        rankForFastTable[i].fastTableIndex = <span class=\"hljs-number\">-1</span>;\n                    &#125;\n                    <span class=\"hljs-comment\">// 模拟态桶排序</span>\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                        <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                            &amp;&amp; !fastTable[i].accessBit\n                            &amp;&amp; !fastTable[i].modifyBit) &#123;\n                            rankForFastTable[<span class=\"hljs-number\">0</span>].fastTableIndex = i;\n                            rankForFastTable[<span class=\"hljs-number\">0</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                                   &amp;&amp; fastTable[i].accessBit\n                                   &amp;&amp; !fastTable[i].modifyBit) &#123;\n                            rankForFastTable[<span class=\"hljs-number\">1</span>].fastTableIndex = i;\n                            rankForFastTable[<span class=\"hljs-number\">1</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                                   &amp;&amp; !fastTable[i].accessBit\n                                   &amp;&amp; fastTable[i].modifyBit) &#123;\n                            rankForFastTable[<span class=\"hljs-number\">2</span>].fastTableIndex = i;\n                            rankForFastTable[<span class=\"hljs-number\">2</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                        &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                            rankForFastTable[<span class=\"hljs-number\">3</span>].fastTableIndex = i;\n                            rankForFastTable[<span class=\"hljs-number\">3</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                        &#125;\n                    &#125;\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                        <span class=\"hljs-keyword\">if</span> (rankForFastTable[i].pageNumber != <span class=\"hljs-number\">-1</span>) &#123;\n                            <span class=\"hljs-comment\">// 找到一个没用的页</span>\n                            <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                            cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统在快表选择了一个页号为&quot;</span>\n                                 &lt;&lt; fastTable[rankForFastTable[i].fastTableIndex].fastTablePageNumber\n                                 &lt;&lt; <span class=\"hljs-string\">&quot;的页进行换出...&quot;</span>\n                                 &lt;&lt; endl;\n                            <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                            <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">1</span>);\n                            <span class=\"hljs-comment\">// 把快表中对应的页号置为无效</span>\n                            fastTable[rankForFastTable[i].fastTableIndex].validBit = <span class=\"hljs-literal\">false</span>;\n                            <span class=\"hljs-comment\">// 快表页面置换</span>\n                            fastTable[rankForFastTable[i].fastTableIndex].fastTablePageNumber = externalMemoryFindPage.externalPageNumber;\n                            fastTable[rankForFastTable[i].fastTableIndex].fastTableBlockNumber = externalMemoryFindPage.externalBlockNumber;\n                            fastTable[rankForFastTable[i].fastTableIndex].accessBit = <span class=\"hljs-literal\">false</span>;\n                            fastTable[rankForFastTable[i].fastTableIndex].modifyBit = <span class=\"hljs-literal\">false</span>;\n                            fastTable[rankForFastTable[i].fastTableIndex].validBit = <span class=\"hljs-literal\">true</span>;\n\n                            <span class=\"hljs-comment\">// 把页表中对应的页号置为无效？</span>\n                            fastTableFindCheckIsTrue = <span class=\"hljs-literal\">true</span>;\n                            <span class=\"hljs-keyword\">break</span>;\n                        &#125;\n\n                    &#125;\n                    <span class=\"hljs-keyword\">if</span> (fastTableFindCheckIsTrue) &#123;\n\n                    &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                        <span class=\"hljs-built_in\">setConsoleColor</span>(Red, Black);\n                        cout &lt;&lt; <span class=\"hljs-string\">&quot;一般不存在这种情况，以防万一留着DeBug用&quot;</span> &lt;&lt; endl;\n                        <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    &#125;\n\n                &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                    <span class=\"hljs-comment\">// 快表仍然有空间</span>\n                    <span class=\"hljs-comment\">// 有空间就塞</span>\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Blue, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;快表还有空间，操作系统正在读取缺页并回写内存中...&quot;</span> &lt;&lt; endl;;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                        <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit == <span class=\"hljs-literal\">false</span>) &#123;\n                            fastTable[i].validBit = <span class=\"hljs-literal\">true</span>;\n                            fastTable[i].fastTablePageNumber = externalMemoryFindPage.externalPageNumber;\n                            fastTable[i].fastTableBlockNumber = externalMemoryFindPage.externalBlockNumber;\n                            <span class=\"hljs-keyword\">break</span>;\n                        &#125;\n                    &#125;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                    cout &lt;&lt; <span class=\"hljs-string\">&quot;快表回写成功！&quot;</span> &lt;&lt; endl;;\n                    <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                    <span class=\"hljs-comment\">//塞完就减减</span>\n                    remainingCapacityOfFastTable--;\n                &#125;\n                <span class=\"hljs-comment\">//!!!!!!!!!!!!!!</span>\n\n                physicalAddress.blockNumber = externalMemoryFindPage.externalBlockNumber;\n                physicalAddress.internalBlockAddress = logicalAddress.inPageAddress;\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;计算后得到物理地址：&quot;</span> &lt;&lt; endl;\n                <span class=\"hljs-built_in\">setConsoleColor</span>(Magenta, Black);\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;+---块号---+---块内地址----+&quot;</span> &lt;&lt; endl;\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;|    &quot;</span> &lt;&lt; physicalAddress.blockNumber &lt;&lt; <span class=\"hljs-string\">&quot;    |       &quot;</span> &lt;&lt; physicalAddress.internalBlockAddress\n                     &lt;&lt; <span class=\"hljs-string\">&quot;       |&quot;</span>\n                     &lt;&lt; endl;\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;+----------+---------------+&quot;</span> &lt;&lt; endl;\n                <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">2</span>);\n\n            &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                <span class=\"hljs-comment\">// 页表中有</span>\n                <span class=\"hljs-comment\">// 页表中的话，修改页表后还需要进行快表置换</span>\n                <span class=\"hljs-comment\">/**\n                 * 如果页表里面有，那就更改他的访问位和修改位，\n                 * 为了编写简单，在这里我做出一个规定：\n                 * 当应用程序第一次访问时将访问位置真，\n                 * 当应用程序第二次访问时将修改为置真。\n                 * 这么做也是相对合理的，原因如下：\n                 * 访问位与修改位联合置换逻辑（修改，访问）即对换优先级：\n                 * * * 1.（0，0）\n                 * * * 2.（0，1）\n                 * * * 3.（1，0）\n                 * * * 4.（1，1）\n                 * 排名越高，置换优先级越高，\n                 * 相对来讲，访问位与修改位置真后，访问位优先级高于修改位\n                 * 其实我懒了 但我不说（qwq）\n                 */</span>\n                <span class=\"hljs-comment\">// 快表置换，基于页表</span>\n                <span class=\"hljs-comment\">// 快表置换排行榜</span>\n                rankForFastTableDataStruct rankForFastTable[fastTableDimensions];\n                <span class=\"hljs-comment\">// 初始化排行榜</span>\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                    rankForFastTable[i].pageNumber = <span class=\"hljs-number\">-1</span>;\n                    rankForFastTable[i].fastTableIndex = <span class=\"hljs-number\">-1</span>;\n                &#125;\n                <span class=\"hljs-comment\">// 模拟态桶排序</span>\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                    <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                        &amp;&amp; !fastTable[i].accessBit\n                        &amp;&amp; !fastTable[i].modifyBit) &#123;\n                        rankForFastTable[<span class=\"hljs-number\">0</span>].fastTableIndex = i;\n                        rankForFastTable[<span class=\"hljs-number\">0</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                               &amp;&amp; fastTable[i].accessBit\n                               &amp;&amp; !fastTable[i].modifyBit) &#123;\n                        rankForFastTable[<span class=\"hljs-number\">1</span>].fastTableIndex = i;\n                        rankForFastTable[<span class=\"hljs-number\">1</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                               &amp;&amp; !fastTable[i].accessBit\n                               &amp;&amp; fastTable[i].modifyBit) &#123;\n                        rankForFastTable[<span class=\"hljs-number\">2</span>].fastTableIndex = i;\n                        rankForFastTable[<span class=\"hljs-number\">2</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                    &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                        rankForFastTable[<span class=\"hljs-number\">3</span>].fastTableIndex = i;\n                        rankForFastTable[<span class=\"hljs-number\">3</span>].pageNumber = fastTable[i].fastTablePageNumber;\n                    &#125;\n                &#125;\n\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                    <span class=\"hljs-keyword\">if</span> (rankForFastTable[i].pageNumber != <span class=\"hljs-number\">-1</span>) &#123;\n                        <span class=\"hljs-comment\">// 找到一个没用的页</span>\n                        <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n                        cout &lt;&lt; <span class=\"hljs-string\">&quot;操作系统在快表选择了一个页号为&quot;</span>\n                             &lt;&lt; fastTable[rankForFastTable[i].fastTableIndex].fastTablePageNumber\n                             &lt;&lt; <span class=\"hljs-string\">&quot;的页进行换出...&quot;</span>\n                             &lt;&lt; endl;;\n                        <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n                        <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">1</span>);\n                        <span class=\"hljs-comment\">// 把快表中对应的页号置为无效</span>\n                        fastTable[rankForFastTable[i].fastTableIndex].validBit = <span class=\"hljs-literal\">false</span>;\n                        <span class=\"hljs-comment\">// 快表页面置换</span>\n                        fastTable[rankForFastTable[i].fastTableIndex].fastTablePageNumber = pageTable[pageTableFindPoint].internalPageNumber;\n                        fastTable[rankForFastTable[i].fastTableIndex].fastTableBlockNumber = pageTable[pageTableFindPoint].internalBlockNumber;\n                        fastTable[rankForFastTable[i].fastTableIndex].accessBit = <span class=\"hljs-literal\">false</span>;\n                        fastTable[rankForFastTable[i].fastTableIndex].modifyBit = <span class=\"hljs-literal\">false</span>;\n                        fastTable[rankForFastTable[i].fastTableIndex].validBit = <span class=\"hljs-literal\">true</span>;\n                        <span class=\"hljs-comment\">// 物理地址存储</span>\n                        physicalAddress.blockNumber = pageTable[pageTableFindPoint].internalBlockNumber;\n                        physicalAddress.internalBlockAddress = logicalAddress.inPageAddress;\n                        <span class=\"hljs-keyword\">break</span>;\n                    &#125;\n\n                &#125;\n\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;计算后得到物理地址：&quot;</span> &lt;&lt; endl;\n                <span class=\"hljs-built_in\">setConsoleColor</span>(Magenta, Black);\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;+---块号---+---块内地址----+&quot;</span> &lt;&lt; endl;\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;|    &quot;</span> &lt;&lt; physicalAddress.blockNumber &lt;&lt; <span class=\"hljs-string\">&quot;    |       &quot;</span> &lt;&lt; physicalAddress.internalBlockAddress\n                     &lt;&lt; <span class=\"hljs-string\">&quot;       |&quot;</span>\n                     &lt;&lt; endl;\n                cout &lt;&lt; <span class=\"hljs-string\">&quot;+----------+---------------+&quot;</span> &lt;&lt; endl;\n\n\n                <span class=\"hljs-comment\">// 修改页表</span>\n                <span class=\"hljs-keyword\">if</span> (pageTable[pageTableFindPoint].validBit\n                    &amp;&amp; !pageTable[pageTableFindPoint].accessBit\n                    &amp;&amp; !pageTable[pageTableFindPoint].modifyBit) &#123;\n                    pageTable[pageTableFindPoint].accessBit = <span class=\"hljs-literal\">true</span>;\n                &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pageTable[pageTableFindPoint].validBit\n                           &amp;&amp; pageTable[pageTableFindPoint].accessBit\n                           &amp;&amp; !pageTable[pageTableFindPoint].modifyBit) &#123;\n                    pageTable[pageTableFindPoint].accessBit = <span class=\"hljs-literal\">false</span>;\n                    pageTable[pageTableFindPoint].modifyBit = <span class=\"hljs-literal\">true</span>;\n                &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pageTable[pageTableFindPoint].validBit\n                           &amp;&amp; !pageTable[pageTableFindPoint].accessBit\n                           &amp;&amp; pageTable[pageTableFindPoint].modifyBit) &#123;\n                    pageTable[pageTableFindPoint].accessBit = <span class=\"hljs-literal\">true</span>;\n                    pageTable[pageTableFindPoint].modifyBit = <span class=\"hljs-literal\">true</span>;\n                &#125;\n                <span class=\"hljs-comment\">// 同步快表</span>\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; fastTableDimensions; i++) &#123;\n                    <span class=\"hljs-keyword\">if</span> (fastTable[i].fastTablePageNumber == pageTable[pageTableFindPoint].internalPageNumber) &#123;\n                        <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                            &amp;&amp; !fastTable[i].accessBit\n                            &amp;&amp; !fastTable[i].modifyBit) &#123;\n                            fastTable[i].accessBit = <span class=\"hljs-literal\">true</span>;\n                        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                                   &amp;&amp; fastTable[i].accessBit\n                                   &amp;&amp; !fastTable[i].modifyBit) &#123;\n                            fastTable[i].accessBit = <span class=\"hljs-literal\">false</span>;\n                            fastTable[i].modifyBit = <span class=\"hljs-literal\">true</span>;\n                        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[i].validBit\n                                   &amp;&amp; !fastTable[i].accessBit\n                                   &amp;&amp; fastTable[i].modifyBit) &#123;\n                            fastTable[i].accessBit = <span class=\"hljs-literal\">true</span>;\n                            fastTable[i].modifyBit = <span class=\"hljs-literal\">true</span>;\n                        &#125;\n                        <span class=\"hljs-keyword\">break</span>;\n                    &#125;\n                &#125;\n\n            &#125;\n        &#125; <span class=\"hljs-keyword\">else</span> &#123;\n            <span class=\"hljs-comment\">// 快表中有</span>\n            <span class=\"hljs-comment\">// 修改快表</span>\n            fastTable[fastTableFindPoint];\n            <span class=\"hljs-keyword\">if</span> (fastTable[fastTableFindPoint].validBit\n                &amp;&amp; !fastTable[fastTableFindPoint].accessBit\n                &amp;&amp; !fastTable[fastTableFindPoint].modifyBit) &#123;\n                fastTable[fastTableFindPoint].accessBit = <span class=\"hljs-literal\">true</span>;\n            &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[fastTableFindPoint].validBit\n                       &amp;&amp; fastTable[fastTableFindPoint].accessBit\n                       &amp;&amp; !fastTable[fastTableFindPoint].modifyBit) &#123;\n                fastTable[fastTableFindPoint].accessBit = <span class=\"hljs-literal\">false</span>;\n                fastTable[fastTableFindPoint].modifyBit = <span class=\"hljs-literal\">true</span>;\n            &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (fastTable[fastTableFindPoint].validBit\n                       &amp;&amp; !fastTable[fastTableFindPoint].accessBit\n                       &amp;&amp; fastTable[fastTableFindPoint].modifyBit) &#123;\n                fastTable[fastTableFindPoint].accessBit = <span class=\"hljs-literal\">true</span>;\n                fastTable[fastTableFindPoint].modifyBit = <span class=\"hljs-literal\">true</span>;\n            &#125;\n            <span class=\"hljs-comment\">// 同步页表</span>\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; pageTableDimensions; i++) &#123;\n                <span class=\"hljs-keyword\">if</span> (pageTable[i].internalPageNumber == fastTable[fastTableFindPoint].fastTablePageNumber) &#123;\n                    <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit\n                        &amp;&amp; !pageTable[i].accessBit\n                        &amp;&amp; !pageTable[i].modifyBit) &#123;\n                        pageTable[i].accessBit = <span class=\"hljs-literal\">true</span>;\n                    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit\n                               &amp;&amp; pageTable[i].accessBit\n                               &amp;&amp; !pageTable[i].modifyBit) &#123;\n                        pageTable[i].accessBit = <span class=\"hljs-literal\">false</span>;\n                        pageTable[i].modifyBit = <span class=\"hljs-literal\">true</span>;\n                    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pageTable[i].validBit\n                               &amp;&amp; !pageTable[i].accessBit\n                               &amp;&amp; pageTable[i].modifyBit) &#123;\n                        pageTable[i].accessBit = <span class=\"hljs-literal\">true</span>;\n                        pageTable[i].modifyBit = <span class=\"hljs-literal\">true</span>;\n                    &#125;\n                    <span class=\"hljs-keyword\">break</span>;\n\n                &#125;\n            &#125;\n\n            <span class=\"hljs-comment\">// 直接从快表中提取</span>\n            physicalAddress.blockNumber = fastTable[fastTableFindPoint].fastTableBlockNumber;\n            physicalAddress.internalBlockAddress = logicalAddress.inPageAddress;\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;计算后得到物理地址：&quot;</span> &lt;&lt; endl;\n            <span class=\"hljs-built_in\">setConsoleColor</span>(Magenta, Black);\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;+---块号---+---块内地址----+&quot;</span> &lt;&lt; endl;\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;|    &quot;</span> &lt;&lt; physicalAddress.blockNumber &lt;&lt; <span class=\"hljs-string\">&quot;    |       &quot;</span> &lt;&lt; physicalAddress.internalBlockAddress\n                 &lt;&lt; <span class=\"hljs-string\">&quot;       |&quot;</span>\n                 &lt;&lt; endl;\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;+----------+---------------+&quot;</span> &lt;&lt; endl;\n            <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">2</span>);\n        &#125;\n        <span class=\"hljs-comment\">// 恢复初始状态</span>\n        fastTableFind = <span class=\"hljs-literal\">false</span>;\n        pageTableFind = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-built_in\">setConsoleColor</span>(Green, Black);\n        <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">1</span>);\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;---------------地址变换结束---------------&quot;</span>;\n        <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">1</span>);\n        cout &lt;&lt; endl;\n        <span class=\"hljs-built_in\">setConsoleColor</span>(White, Black);\n    &#125;\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;下次再见！&quot;</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/MongoDB/MongoDB03/",
            "url": "https://735690757.github.io/MongoDB/MongoDB03/",
            "title": "MongoDB初步使用",
            "date_published": "2023-09-13T04:20:00.000Z",
            "content_html": "<h1 id=\"mongodb约束命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb约束命令\"></a> MongoDB约束命令</h1>\n<h2 id=\"输出行数限制\"><a class=\"markdownIt-Anchor\" href=\"#输出行数限制\"></a> 输出行数限制</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t4.aggregate(&#123;<span class=\"hljs-variable\">$limit</span>:4&#125;)\n</code></pre>\n<h2 id=\"xx升序降序\"><a class=\"markdownIt-Anchor\" href=\"#xx升序降序\"></a> xx升序/降序</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t4.aggregate([&#123;<span class=\"hljs-variable\">$sort</span>:&#123;price:-1&#125;&#125;])\n</code></pre>\n<p>1：升序</p>\n<p>2：降序</p>\n<h2 id=\"mapreduce\"><a class=\"markdownIt-Anchor\" href=\"#mapreduce\"></a> MapReduce</h2>\n<p>MapReduce是一种用于分布式计算的编程模型和处理大规模数据集的方法。</p>\n<p>MapReduce模型的基本思想是将大规模数据集分成小块，然后并行处理这些小块数据以生成中间结果。</p>\n<ol>\n<li><strong>Map阶段（映射阶段）</strong>：在这个阶段，原始数据被映射成键-值对的形式。每个映射操作都是独立的，可以在不同的计算节点上并行执行。Map操作通常用于筛选、过滤、排序和转换数据。</li>\n<li><strong>Reduce阶段（归约阶段）</strong>：在Map阶段之后，所有的中间结果按键分组，并将每个组的数据传递给Reduce函数进行聚合和处理。Reduce操作通常用于对数据进行汇总、计数、计算统计信息等操作。</li>\n</ol>\n<pre class=\"highlight\"><code class=\"bash\">//MapReduce\n//map映射\nvar map = <span class=\"hljs-function\"><span class=\"hljs-title\">function</span></span>()&#123;\n    emit(this.type,this.name);\n&#125;\n//reduce减少并以“，”分割\nvar reduce = <span class=\"hljs-keyword\">function</span>(key,values)&#123;\n    <span class=\"hljs-built_in\">return</span> values.join(<span class=\"hljs-string\">&#x27;,&#x27;</span>);\n&#125;\n//选项设置输出\nvar opt=&#123;out:<span class=\"hljs-string\">&quot;name_list&quot;</span>&#125;\ndb.t4.mapReduce(map,reduce,opt)\n</code></pre>\n<blockquote>\n<p>[<br />\n{<br />\n“_id”: “电子设备”,<br />\n“value”: “logi”<br />\n},<br />\n{<br />\n“_id”: “服装”,<br />\n“value”: “安踏,lining”<br />\n},<br />\n{<br />\n“_id”: “电子通信”,<br />\n“value”: “oppo,vivo,huawei,iphone8”<br />\n},<br />\n{<br />\n“_id”: “饮品”,<br />\n“value”: “康师傅”<br />\n}<br />\n]</p>\n</blockquote>\n",
            "tags": [
                "MongoDB",
                "MongoDB"
            ]
        },
        {
            "id": "https://735690757.github.io/MongoDB/MongoDB02/",
            "url": "https://735690757.github.io/MongoDB/MongoDB02/",
            "title": "MongoDB初步使用",
            "date_published": "2023-09-06T04:20:00.000Z",
            "content_html": "<h1 id=\"mongodb命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb命令\"></a> MongoDB命令</h1>\n<h2 id=\"创建用户可读可写\"><a class=\"markdownIt-Anchor\" href=\"#创建用户可读可写\"></a> 创建用户（可读可写）</h2>\n<h3 id=\"创建\"><a class=\"markdownIt-Anchor\" href=\"#创建\"></a> 创建</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.createUser(&#123;user:<span class=\"hljs-string\">&quot;lkr40&quot;</span>,<span class=\"hljs-built_in\">pwd</span>:<span class=\"hljs-string\">&quot;123456&quot;</span>,roles:[<span class=\"hljs-string\">&quot;readWrite&quot;</span>]&#125;)\n</code></pre>\n<h3 id=\"检验\"><a class=\"markdownIt-Anchor\" href=\"#检验\"></a> 检验</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.auth(<span class=\"hljs-string\">&quot;lkr40&quot;</span>,<span class=\"hljs-string\">&quot;123456&quot;</span>)\n</code></pre>\n<blockquote>\n<p>db.createUser({user:“lkr40”,pwd:“123456”,roles:[“readWrite”]})<br />\nSuccessfully added user: { “user” : “lkr40”, “roles” : [ “readWrite” ] }<br />\ndb.auth(“lkr40”,“123456”)<br />\n1</p>\n</blockquote>\n<h3 id=\"登录\"><a class=\"markdownIt-Anchor\" href=\"#登录\"></a> 登录</h3>\n<pre class=\"highlight\"><code class=\"bash\">mongo 127.0.0.1:27017/mymongo -u lkr40 -p 123456\n</code></pre>\n<h2 id=\"建立使用数据库\"><a class=\"markdownIt-Anchor\" href=\"#建立使用数据库\"></a> 建立/使用数据库</h2>\n<pre class=\"highlight\"><code class=\"bash\">use mymongo\n</code></pre>\n<blockquote>\n<p>use mymongo<br />\nswitched to db mymongo</p>\n</blockquote>\n<h2 id=\"查询当前数据库\"><a class=\"markdownIt-Anchor\" href=\"#查询当前数据库\"></a> 查询当前数据库</h2>\n<pre class=\"highlight\"><code class=\"bash\">db\n</code></pre>\n<blockquote>\n<p>db<br />\nmymongo</p>\n</blockquote>\n<h2 id=\"删除数据库\"><a class=\"markdownIt-Anchor\" href=\"#删除数据库\"></a> 删除数据库</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.dropDatabase()\n</code></pre>\n<h2 id=\"查询时间\"><a class=\"markdownIt-Anchor\" href=\"#查询时间\"></a> 查询时间</h2>\n<pre class=\"highlight\"><code class=\"bash\">Date()\n</code></pre>\n<blockquote>\n<p>Date()<br />\nWed Sep 06 2023 10:21:36 GMT+0800</p>\n</blockquote>\n<h2 id=\"创建集合\"><a class=\"markdownIt-Anchor\" href=\"#创建集合\"></a> 创建集合</h2>\n<p><strong>集合中可以包含子集合</strong></p>\n<h3 id=\"显式创建t\"><a class=\"markdownIt-Anchor\" href=\"#显式创建t\"></a> 显式创建（t）</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.createCollection(<span class=\"hljs-string\">&quot;t&quot;</span>)\n</code></pre>\n<blockquote>\n<p>db.createCollection(“t”)<br />\n{ “ok” : 1 }</p>\n</blockquote>\n<h3 id=\"隐式创建t1\"><a class=\"markdownIt-Anchor\" href=\"#隐式创建t1\"></a> 隐式创建（t1）</h3>\n<pre class=\"highlight\"><code class=\"\">db.t1.insert(&#123;&quot;age&quot;:18&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.insert({“age”:18})<br />\nWriteResult({ “nInserted” : 1 })<br />\nshow collections<br />\nt<br />\nt1</p>\n</blockquote>\n<h2 id=\"展示集合\"><a class=\"markdownIt-Anchor\" href=\"#展示集合\"></a> 展示集合</h2>\n<pre class=\"highlight\"><code class=\"bash\">show collections\n</code></pre>\n<blockquote>\n<p>show collections<br />\nt</p>\n<p>t1</p>\n</blockquote>\n<h2 id=\"删除集合\"><a class=\"markdownIt-Anchor\" href=\"#删除集合\"></a> 删除集合</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t.drop()\n</code></pre>\n<blockquote>\n<p>db.t.drop()<br />\ntrue</p>\n</blockquote>\n<h2 id=\"查询文档\"><a class=\"markdownIt-Anchor\" href=\"#查询文档\"></a> 查询文档</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.find()\n</code></pre>\n<blockquote>\n<p>db.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }</p>\n</blockquote>\n<h3 id=\"条件查询\"><a class=\"markdownIt-Anchor\" href=\"#条件查询\"></a> 条件查询</h3>\n<h4 id=\"等于\"><a class=\"markdownIt-Anchor\" href=\"#等于\"></a> 等于</h4>\n<pre class=\"highlight\"><code class=\"\">db.t.find(&#123;&quot;x&quot;:1&#125;)\n</code></pre>\n<blockquote>\n<p>db.t.find({“x”:1})<br />\n{ “_id” : ObjectId(“64f7f05bff2142d2a2445361”), “x” : 1 }</p>\n</blockquote>\n<h4 id=\"小于\"><a class=\"markdownIt-Anchor\" href=\"#小于\"></a> 小于</h4>\n<pre class=\"highlight\"><code class=\"bash\">db.t.find(&#123;<span class=\"hljs-string\">&quot;x&quot;</span>:&#123;<span class=\"hljs-variable\">$lte</span> : 5&#125;&#125;)\n</code></pre>\n<h4 id=\"大于\"><a class=\"markdownIt-Anchor\" href=\"#大于\"></a> 大于</h4>\n<pre class=\"highlight\"><code class=\"bash\">db.t.find(&#123;<span class=\"hljs-string\">&quot;x&quot;</span>:&#123;<span class=\"hljs-variable\">$lte</span> : 5&#125;&#125;)\n</code></pre>\n<h4 id=\"在之中包含\"><a class=\"markdownIt-Anchor\" href=\"#在之中包含\"></a> 在之中（包含）</h4>\n<pre class=\"highlight\"><code class=\"bash\">db.t.find(&#123;<span class=\"hljs-string\">&quot;x&quot;</span>:&#123;<span class=\"hljs-variable\">$in</span> : [1,3,5]&#125;&#125;)\n</code></pre>\n<h4 id=\"不在其中不包含\"><a class=\"markdownIt-Anchor\" href=\"#不在其中不包含\"></a> 不在其中（不包含）</h4>\n<pre class=\"highlight\"><code class=\"bash\">db.t.find(&#123;<span class=\"hljs-string\">&quot;x&quot;</span>:&#123;<span class=\"hljs-variable\">$nin</span> : [1,3,5]&#125;&#125;)\n</code></pre>\n<h2 id=\"插入文档\"><a class=\"markdownIt-Anchor\" href=\"#插入文档\"></a> 插入文档</h2>\n<h3 id=\"单一插入\"><a class=\"markdownIt-Anchor\" href=\"#单一插入\"></a> 单一插入</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.insert(&#123;<span class=\"hljs-string\">&quot;_id&quot;</span>:<span class=\"hljs-string\">&quot;1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:23&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.insert({“_id”:“1”,“age”:23})<br />\nWriteResult({ “nInserted” : 1 })<br />\ndb.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br />\n{ “_id” : “1”, “age” : 23 }</p>\n</blockquote>\n<h3 id=\"批量插入单语句\"><a class=\"markdownIt-Anchor\" href=\"#批量插入单语句\"></a> 批量插入（单语句）</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.insertMany([&#123;<span class=\"hljs-string\">&quot;_id&quot;</span>:2,<span class=\"hljs-string\">&quot;age&quot;</span>:65&#125;,&#123;<span class=\"hljs-string\">&quot;_id&quot;</span>:3,<span class=\"hljs-string\">&quot;age&quot;</span>:45&#125;])\n</code></pre>\n<blockquote>\n<p>db.t1.insertMany([{“_id”:2,“age”:65},{“_id”:3,“age”:45}])<br />\n{ “acknowledged” : true, “insertedIds” : [ 2, 3 ] }<br />\ndb.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br />\n{ “_id” : “1”, “age” : 33 }<br />\n{ “_id” : 2, “age” : 65 }<br />\n{ “_id” : 3, “age” : 45 }</p>\n</blockquote>\n<h3 id=\"循环插入for\"><a class=\"markdownIt-Anchor\" href=\"#循环插入for\"></a> 循环插入（for）</h3>\n<pre class=\"highlight\"><code class=\"bash\"><span class=\"hljs-keyword\">for</span>(i=1;i&lt;9;i++) db.t.insert(&#123;<span class=\"hljs-string\">&quot;x&quot;</span>:i&#125;)\n</code></pre>\n<blockquote>\n<p>for(i=1;i&lt;9;i++) db.t.insert({“x”:i})<br />\nWriteResult({ “nInserted” : 1 })<br />\ndb.t.find()<br />\n{ “_id” : ObjectId(“64f7f05bff2142d2a2445361”), “x” : 1 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445362”), “x” : 2 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445363”), “x” : 3 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445364”), “x” : 4 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445365”), “x” : 5 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445366”), “x” : 6 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445367”), “x” : 7 }<br />\n{ “_id” : ObjectId(“64f7f05cff2142d2a2445368”), “x” : 8 }</p>\n</blockquote>\n<h3 id=\"同id插入异常\"><a class=\"markdownIt-Anchor\" href=\"#同id插入异常\"></a> 同id插入异常</h3>\n<blockquote>\n<p>db.t1.insert({“_id”:“1”,“age”:23})<br />\nWriteResult({<br />\n“nInserted” : 0,<br />\n“writeError” : {<br />\n“code” : 11000,<br />\n“errmsg” : “E11000 duplicate key error collection: mymongo.t1 index: <em>id</em> dup key: { _id: &quot;1&quot; }”<br />\n}<br />\n})</p>\n</blockquote>\n<h2 id=\"修改输入全部属性替换\"><a class=\"markdownIt-Anchor\" href=\"#修改输入全部属性替换\"></a> 修改（输入全部属性/替换）</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.save(&#123;<span class=\"hljs-string\">&quot;_id&quot;</span>:<span class=\"hljs-string\">&quot;1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.save({“_id”:“1”,“age”:33})<br />\nWriteResult({ “nMatched” : 1, “nUpserted” : 0, “nModified” : 1 })<br />\ndb.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br />\n{ “_id” : “1”, “age” : 33 }</p>\n</blockquote>\n<h2 id=\"更新\"><a class=\"markdownIt-Anchor\" href=\"#更新\"></a> 更新</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.update(&#123;<span class=\"hljs-string\">&quot;age&quot;</span>:65&#125;,&#123;<span class=\"hljs-variable\">$set</span>:&#123;<span class=\"hljs-string\">&quot;age&quot;</span>:100&#125;&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.update({“age”:65},{$set:{“age”:100}})<br />\nWriteResult({ “nMatched” : 1, “nUpserted” : 0, “nModified” : 1 })<br />\ndb.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br />\n{ “_id” : “1”, “age” : 33 }<br />\n{ “_id” : 2, “age” : 100 }<br />\n{ “_id” : 3, “age” : 45 }</p>\n</blockquote>\n<h2 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\"></a> 删除</h2>\n<h3 id=\"批量删除\"><a class=\"markdownIt-Anchor\" href=\"#批量删除\"></a> 批量删除</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.remove(&#123;<span class=\"hljs-string\">&quot;age&quot;</span>:33&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.remove({“age”:33})<br />\nWriteResult({ “nRemoved” : 1 })<br />\ndb.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br />\n{ “_id” : 2, “age” : 100 }<br />\n{ “_id” : 3, “age” : 45 }</p>\n</blockquote>\n<h3 id=\"单一删除\"><a class=\"markdownIt-Anchor\" href=\"#单一删除\"></a> 单一删除</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.t1.remove(&#123;<span class=\"hljs-string\">&quot;age&quot;</span>:45&#125;,&#123;justOne:1&#125;)\n</code></pre>\n<blockquote>\n<p>db.t1.remove({“age”:45},{justOne:1})<br />\nWriteResult({ “nRemoved” : 1 })<br />\ndb.t1.find()<br />\n{ “_id” : ObjectId(“64f7ec7bff2142d2a2445360”), “age” : 18 }<br />\n{ “_id” : 2, “age” : 100 }<br />\n{ “_id” : 4, “age” : 65 }<br />\n{ “_id” : 5, “age” : 45 }</p>\n</blockquote>\n<h2 id=\"capped限制\"><a class=\"markdownIt-Anchor\" href=\"#capped限制\"></a> Capped限制</h2>\n<h3 id=\"创建限制\"><a class=\"markdownIt-Anchor\" href=\"#创建限制\"></a> 创建限制</h3>\n<pre class=\"highlight\"><code class=\"bash\">db.createCollection(<span class=\"hljs-string\">&quot;t2&quot;</span>,&#123;capped:<span class=\"hljs-literal\">true</span>,size:3,max:8&#125;)\n</code></pre>\n<pre class=\"highlight\"><code class=\"bash\">db.t2.isCapped()\n</code></pre>\n<h3 id=\"检验-2\"><a class=\"markdownIt-Anchor\" href=\"#检验-2\"></a> 检验</h3>\n<pre class=\"highlight\"><code class=\"bash\"><span class=\"hljs-keyword\">for</span>(i=1;i&lt;9;i++) db.t2.insert(&#123;<span class=\"hljs-string\">&quot;x&quot;</span>:i&#125;)\n</code></pre>\n<blockquote>\n<p>db.t2.find();<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536a”), “x” : 2 }<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536b”), “x” : 3 }<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536c”), “x” : 4 }<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536d”), “x” : 5 }<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536e”), “x” : 6 }<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a244536f”), “x” : 7 }<br />\n{ “_id” : ObjectId(“64f7f23fff2142d2a2445370”), “x” : 8 }</p>\n</blockquote>\n<h3 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\"></a> 结论</h3>\n<p><strong>前面的数据被顶掉了</strong></p>\n<h2 id=\"pretty美化输出\"><a class=\"markdownIt-Anchor\" href=\"#pretty美化输出\"></a> pretty美化输出</h2>\n<pre class=\"highlight\"><code class=\"bash\">db.t3.insert(&#123;<span class=\"hljs-string\">&quot;_id&quot;</span>:1,<span class=\"hljs-string\">&quot;phone&quot;</span>:&#123;<span class=\"hljs-string\">&quot;hemophone&quot;</span>:<span class=\"hljs-string\">&quot;8617118&quot;</span>,<span class=\"hljs-string\">&quot;mobilephone&quot;</span>:<span class=\"hljs-string\">&quot;18643079329&quot;</span>&#125;&#125;)\n</code></pre>\n<blockquote>\n<p>db.t3.find().pretty();<br />\n{<br />\n“_id” : 1,<br />\n“phone” : {<br />\n“hemophone” : “8617118”,<br />\n“mobilephone” : “18643079329”<br />\n}<br />\n}</p>\n</blockquote>\n<h2 id=\"管道机制\"><a class=\"markdownIt-Anchor\" href=\"#管道机制\"></a> 管道机制</h2>\n<p>{“_id”:1,“name”:“iphone8”,“price”:3000,“type”:“电子通信”}</p>\n",
            "tags": [
                "MongoDB",
                "MongoDB"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/03OS/",
            "url": "https://735690757.github.io/Operate-system/03OS/",
            "title": "进程同步问题",
            "date_published": "2023-09-04T07:50:00.000Z",
            "content_html": "<h1 id=\"生产者-消费者问题\"><a class=\"markdownIt-Anchor\" href=\"#生产者-消费者问题\"></a> 生产者-消费者问题</h1>\n<p>在进程同步中第一个问题就是生产者-消费者问题，首先我们利用记录型信号来分析这个问题。</p>\n<p>好好好，我们直接伪代码解析！</p>\n<p><strong>解释在行代码的上方</strong></p>\n<pre class=\"highlight\"><code class=\"c\"><span class=\"hljs-comment\">//in代表下一个要写入的位置，out代表要读取的位置</span>\n<span class=\"hljs-type\">int</span> in = <span class=\"hljs-number\">0</span>,out = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-comment\">//用于存储生产者生产的容器，可以理解为缓冲区</span>\nitem buffer[n];\n<span class=\"hljs-comment\">//前两行不是重点，下面才是核心！！</span>\n<span class=\"hljs-comment\">//mutex用于互斥访问共享资源，初值必须为1（可以理解为锁）</span>\n<span class=\"hljs-comment\">//empty代表中转的容量，初值为最大承载容量，题里会给（可以是各种容器）</span>\n<span class=\"hljs-comment\">//full是生产出的一种逻辑/实体的物质</span>\n<span class=\"hljs-comment\">//总之不管是什么他是生产者生产出来的，一开始还没生产，full初值为0</span>\nsemaphore mutex = <span class=\"hljs-number\">1</span>,empty = n,full = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-comment\">//生产者逻辑</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">producer</span><span class=\"hljs-params\">()</span>&#123;\n    <span class=\"hljs-comment\">//do-while死循环，不断生产，配合消费者模拟程序并发</span>\n    <span class=\"hljs-keyword\">do</span>&#123;\n        <span class=\"hljs-comment\">//生产一个产品</span>\n        produce an item nextp;\n        ...\n        <span class=\"hljs-comment\">//wait什么什么就是什么什么“--”，比如这里wait(empty)就是empty--</span>\n        <span class=\"hljs-comment\">//相当于空位置减一，申请一个缓冲区</span>\n        wait(empty);\n        <span class=\"hljs-comment\">//相当于加锁，申请缓冲区的使用权</span>\n        wait(mutex);\n        <span class=\"hljs-comment\">//将产品放入缓冲区之中</span>\n        buffer[in] = nextp;\n        <span class=\"hljs-comment\">//下一个缓冲区的地址</span>\n        in = (in + <span class=\"hljs-number\">1</span>) % n;\n        <span class=\"hljs-comment\">//signal什么什么就是什么什么“++”，比如这里signal(mutex)就是empty++</span>\n        <span class=\"hljs-comment\">//解锁，相当于释放权限</span>\n        signal(mutex);\n        <span class=\"hljs-comment\">//生产的东西数量加1，也就是释放缓冲区</span>\n        signal(full);\n    &#125;<span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>);\n&#125;\n<span class=\"hljs-comment\">//消费者逻辑</span>\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">consumer</span><span class=\"hljs-params\">()</span>&#123;\n    <span class=\"hljs-comment\">//do-while死循环，不断生消费，配合生产者模拟程序并发</span>\n    <span class=\"hljs-keyword\">do</span>&#123;\n        <span class=\"hljs-comment\">//消费者要消费一个物质，将生产者的生产的full--</span>\n        wait(full);\n        <span class=\"hljs-comment\">//加锁，mutex--</span>\n        wait(mutex);\n        <span class=\"hljs-comment\">//其实这里不用太深究，这里就是消费者从缓冲区拿走了一个生产者的生产的物质</span>\n        <span class=\"hljs-comment\">//从缓冲区中取出产品</span>\n        nextc = buffer[out];\n        <span class=\"hljs-comment\">//导向下一个缓冲区的地址</span>\n        out = (out + <span class=\"hljs-number\">1</span>) % n;\n        <span class=\"hljs-comment\">//解锁，mutex++</span>\n        signal(mutex);\n        <span class=\"hljs-comment\">//消费者已经取走了，空位置empty++</span>\n        signal(empty);\n        <span class=\"hljs-comment\">//消费者消费物质</span>\n        consume the item nextc;\n        ...\n    &#125;<span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>)\n&#125;\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>&#123;\n    cobegin\n    <span class=\"hljs-title function_\">producer</span><span class=\"hljs-params\">()</span>;consumer()\n    coend\n&#125;\n</code></pre>\n<p>简单的写法：</p>\n<pre class=\"highlight\"><code class=\"py\">Producer():\n  Repeat\n    生产一个商品\n    wait(empty);\n    wait(mutex);\n    将商品送至缓冲区;\n    signal(mutex);\n    signal(full);\n  Until false\n\nComsumer():\n  Repeat\n    wait(full);\n    wait(mutex);\n    从缓冲区取走一个物品\n    singal(mutex);\n    signal(empty);\n  Until false\n\nProgram main()\n  empty,full,mutex;\n    begin\n      empty = n;\n      full = <span class=\"hljs-number\">0</span>;\n      mutex = <span class=\"hljs-number\">1</span>;\n      cobegin\n        producer();consumer();\n      coend\n    end\n</code></pre>\n<h2 id=\"练习一下\"><a class=\"markdownIt-Anchor\" href=\"#练习一下\"></a> 练习一下！</h2>\n<p>桌上有个能盛得下五个水果的空子。爸爸不停地向盘中放苹果或橘子，儿子不停地从盘中取出桔子享用，女儿不停地从盘中取出苹果享用。规定三人不能同时从盘子中取放水果。使用信号量实现爸爸、儿子和女儿这三个循环进程之间的同步。</p>\n<pre class=\"highlight\"><code class=\"c\">empty = <span class=\"hljs-number\">5</span>,orange = <span class=\"hljs-number\">0</span>,apple = <span class=\"hljs-number\">0</span>,mutex = <span class=\"hljs-number\">1</span>;\nDad()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        wait(empty);\n        wait(mutex);\n        将水果放入盘中;\n        signal(mutex);\n        <span class=\"hljs-keyword\">if</span>(放了橘子) signal(orange);\n        <span class=\"hljs-keyword\">else</span> signal(apple);\n    &#125;\n&#125;\n\nSon()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        wait(orange);\n        wait(mutex);\n        拿走一个桔子;\n        signal(mutex);\n        signal(empty);\n        吃桔子;\n    &#125;\n&#125;\n\nDaughter()&#123;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-number\">1</span>)&#123;\n        wait(apple);\n        wait(mutex);\n        拿一个苹果;\n        signal(mutex);\n        signal(empty);\n        吃苹果;\n    &#125;\n&#125;\n</code></pre>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/Linux/Linux01/",
            "url": "https://735690757.github.io/Linux/Linux01/",
            "title": "初见Linux",
            "date_published": "2023-09-01T04:12:00.000Z",
            "content_html": "<h1 id=\"初见linux\"><a class=\"markdownIt-Anchor\" href=\"#初见linux\"></a> 初见Linux</h1>\n<p>首先安装什么的就不讲了，这里先讲一下基础命令</p>\n<h1 id=\"简单命令\"><a class=\"markdownIt-Anchor\" href=\"#简单命令\"></a> 简单命令</h1>\n<h2 id=\"who命令\"><a class=\"markdownIt-Anchor\" href=\"#who命令\"></a> who命令</h2>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost ~]$ <span class=\"hljs-built_in\">who</span> am i\n</code></pre>\n<blockquote>\n<p>[karry@localhost ~]$ who am i<br />\nkarry    pts/0        2023-09-01 10:26 (laptop-karry1107)</p>\n</blockquote>\n<h2 id=\"echo命令\"><a class=\"markdownIt-Anchor\" href=\"#echo命令\"></a> echo命令</h2>\n<p>这个命令是将内容输出到屏幕上</p>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost ~]$ <span class=\"hljs-built_in\">echo</span> Hello Karry.Liu\n</code></pre>\n<blockquote>\n<p>[karry@localhost ~]$ echo Hello Karry.Liu<br />\nHello Karry.Liu</p>\n</blockquote>\n<h2 id=\"date命令\"><a class=\"markdownIt-Anchor\" href=\"#date命令\"></a> date命令</h2>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost ~]$ <span class=\"hljs-built_in\">date</span>\n</code></pre>\n<blockquote>\n<p>[karry@localhost ~]$ date<br />\n2023年 09月 01日 星期五 10:32:23 PDT</p>\n</blockquote>\n<h2 id=\"cal命令\"><a class=\"markdownIt-Anchor\" href=\"#cal命令\"></a> cal命令</h2>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost ~]$ cal 9 2023\n</code></pre>\n<blockquote>\n<p>[karry@localhost ~]$ cal 9 2023<br />\n九月 2023<br />\n日 一 二 三 四 五 六<br />\n1  2<br />\n3  4  5  6  7  8  9<br />\n10 11 12 13 14 15 16<br />\n17 18 19 20 21 22 23<br />\n24 25 26 27 28 29 30</p>\n</blockquote>\n<h1 id=\"基础命令\"><a class=\"markdownIt-Anchor\" href=\"#基础命令\"></a> 基础命令</h1>\n<h2 id=\"基础文件操作命令\"><a class=\"markdownIt-Anchor\" href=\"#基础文件操作命令\"></a> 基础文件操作命令</h2>\n<h3 id=\"展示文件夹中的内容\"><a class=\"markdownIt-Anchor\" href=\"#展示文件夹中的内容\"></a> 展示文件夹中的内容</h3>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost ~]$ <span class=\"hljs-built_in\">ls</span>\n</code></pre>\n<blockquote>\n<p>[karry@localhost ~]$ ls<br />\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</p>\n</blockquote>\n<h3 id=\"进入退出文件夹\"><a class=\"markdownIt-Anchor\" href=\"#进入退出文件夹\"></a> 进入/退出文件夹</h3>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost ~]$ <span class=\"hljs-built_in\">cd</span> Desktop\n</code></pre>\n<blockquote>\n<p>[karry@localhost ~]$ cd Desktop</p>\n<p>[karry@localhost Desktop]$</p>\n</blockquote>\n<h3 id=\"创建文件夹\"><a class=\"markdownIt-Anchor\" href=\"#创建文件夹\"></a> 创建文件夹</h3>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost Desktop]$ <span class=\"hljs-built_in\">mkdir</span> LinuxHello\n</code></pre>\n<blockquote>\n<p>[karry@localhost Desktop]$ ls<br />\nfirefox.desktop  myFile  test</p>\n<p>[karry@localhost Desktop]$ mkdir LinuxHello<br />\n[karry@localhost Desktop]$ ls<br />\nfirefox.desktop  LiunxHello  myFile  test</p>\n</blockquote>\n<h3 id=\"创建一个文件\"><a class=\"markdownIt-Anchor\" href=\"#创建一个文件\"></a> 创建一个文件</h3>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost LinuxHello]$ <span class=\"hljs-built_in\">touch</span> fistText.txt\n</code></pre>\n<blockquote>\n<p>[karry@localhost Desktop]$ ls<br />\nfirefox.desktop  LinuxHello  myFile  test<br />\n[karry@localhost Desktop]$ cd LinuxHello<br />\n[karry@localhost LinuxHello]$ touch fistText.txt<br />\n[karry@localhost LinuxHello]$ ls<br />\nfistText.txt</p>\n</blockquote>\n<h3 id=\"编辑文件\"><a class=\"markdownIt-Anchor\" href=\"#编辑文件\"></a> 编辑文件</h3>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost LinuxHello]$ <span class=\"hljs-built_in\">touch</span> fistText.txt\n</code></pre>\n<blockquote>\n<p>~<br />\n~<br />\n~<br />\n“fistText.txt” 0L, 0C</p>\n</blockquote>\n<p>按   [i]{.kbd}        进入插入模式</p>\n<blockquote>\n<p>~<br />\n~<br />\n~<br />\n– 插入 –</p>\n</blockquote>\n<p>现在可以编辑文件了！</p>\n<blockquote>\n<p>hi hi，这是我第一次学习Linux！！！<br />\n我的名字是诗岸梦行舟<br />\n或者是Karry.Liu<br />\n让我们共同努力吧！！<br />\n~<br />\n~                                                                                                                                                                                                                                                                                                                                                                       – 插入 –</p>\n</blockquote>\n<p>按   [Esc]{.kbd}        退出插入模式</p>\n<p>按   [:]{.kbd}+  [w]{.kbd}       保存刚才所编辑的文件</p>\n<blockquote>\n<p>hi hi，这是我第一次学习Linux！！！<br />\n我的名字是诗岸梦行舟<br />\n或者是Karry.Liu<br />\n让我们共同努力吧！！<br />\n~<br />\n“fistText.txt” 4L, 128C 已写入</p>\n</blockquote>\n<p>最后按 [:]{.kbd}+ [q]{.kbd}   退出vi编辑器</p>\n<blockquote>\n<p>~<br />\n~<br />\n:q</p>\n</blockquote>\n<h3 id=\"读文件内容\"><a class=\"markdownIt-Anchor\" href=\"#读文件内容\"></a> 读文件内容</h3>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost LinuxHello]$ <span class=\"hljs-built_in\">cat</span> fistText.txt\n</code></pre>\n<blockquote>\n<p>[karry@localhost LinuxHello]$ cat fistText.txt<br />\nhi hi，这是我第一次学习Linux！！！<br />\n我的名字是诗岸梦行舟<br />\n或者是Karry.Liu<br />\n让我们共同努力吧！！<br />\n[karry@localhost LinuxHello]$</p>\n</blockquote>\n<h1 id=\"使用g编译程序\"><a class=\"markdownIt-Anchor\" href=\"#使用g编译程序\"></a> 使用g++编译程序</h1>\n<ol start=\"0\">\n<li>\n<p>如果你还没有安装g++编译器，请先安装</p>\n<pre class=\"highlight\"><code class=\"bash\">sudo yum install gcc-c++ make\n</code></pre>\n<p>安装需要一定时间，请耐心等待！</p>\n</li>\n<li>\n<p>进入指定目录，创建cpp文件。</p>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost C++]$ <span class=\"hljs-built_in\">touch</span> firstApp.cpp\n</code></pre>\n</li>\n<li>\n<p>使用vi指令编辑文件</p>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost C++]$ vi firstApp.cpp\n</code></pre>\n</li>\n<li>\n<p>按 [i]{.kbd} 进入插入模式，编辑程序</p>\n<pre class=\"highlight\"><code class=\"bash\"><span class=\"hljs-comment\">#include&lt;iostream&gt;</span>\nusing namespace std;\nint <span class=\"hljs-function\"><span class=\"hljs-title\">main</span></span>()&#123;\n        int a=1;\n        int b=2;\n        int c=a+b;\n        cout&lt;&lt;<span class=\"hljs-string\">&quot;计算结果为：&quot;</span>&lt;&lt;<span class=\"hljs-string\">a&lt;&lt;&quot;+&quot;&lt;&lt;b&lt;&lt;&quot;=&quot;&lt;&lt;c&lt;&lt;endl;\n        return 0;\n&#125;\n</span></code></pre>\n</li>\n<li>\n<p>按   [Esc]{.kbd}        退出插入模式，按   [:]{.kbd}+  [w]{.kbd}       保存刚才所编辑的文件，最后按 [:]{.kbd}+ [q]{.kbd}   退出vi编辑器</p>\n</li>\n<li>\n<p>执行命令编译程序</p>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost C++]$ g++ -o firstAppCompile firstApp.cpp\n</code></pre>\n</li>\n<li>\n<p>运行输出结果</p>\n<pre class=\"highlight\"><code class=\"bash\">[karry@localhost C++]$ ./firstAppCompile\n</code></pre>\n<blockquote>\n<p>[karry@localhost C++]$ ./firstAppCompile<br />\n计算结果为：1+2=3<br />\n[karry@localhost C++]$</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "Linux",
                "Linux"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/02OS/",
            "url": "https://735690757.github.io/Operate-system/02OS/",
            "title": "进程与线程",
            "date_published": "2023-08-31T11:50:00.000Z",
            "content_html": "<h1 id=\"什么是进程与线程\"><a class=\"markdownIt-Anchor\" href=\"#什么是进程与线程\"></a> 什么是进程与线程</h1>\n<p>进程（Process）和线程（Thread）是操作系统中的两个重要概念，用于管理和执行程序的执行单元。它们在多任务处理和并发执行中起着关键作用。</p>\n<h2 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\"></a> 进程</h2>\n<p>进程是计算机系统中运行的程序的实例。每个进程都有<mark>自己的内存空间、代码和数据，以及与其他进程隔离的资源</mark>。进程可以看作是一个独立的执行环境，可以执行自己的任务。每个进程都有一个唯一的进程标识符（PID），用于区分和管理不同的进程。</p>\n<p><mark>一个进程可以包含多个线程，这些线程共享同一个进程的资源</mark>，如内存空间、文件句柄等。不同进程之间的通信相对复杂，通常需要使用进程间通信（IPC）机制，如管道、消息队列、共享内存等。</p>\n<h2 id=\"线程\"><a class=\"markdownIt-Anchor\" href=\"#线程\"></a> 线程</h2>\n<p>线程是进程内的执行单元，一个进程可以包含多个线程。<mark>线程共享同一个进程的代码和数据，但每个线程拥有自己的栈空间和程序计数器</mark>。因为线程共享相同的内存空间，它们之间的通信和数据共享更加方便，但也需要适当的同步控制来避免竞态条件和数据不一致问题。</p>\n<p>多线程的使用可以实现并发执行，提高程序的响应速度和资源利用率。常见的线程使用场景包括图形界面应用程序中的响应性、多媒体处理、网络服务器等。</p>\n<h1 id=\"程序并发执行的特征\"><a class=\"markdownIt-Anchor\" href=\"#程序并发执行的特征\"></a> 程序并发执行的特征</h1>\n<ol>\n<li><strong>间断性</strong>：并发程序之间相互制约</li>\n<li><strong>失去封闭性</strong>：多个程序共享全机资源，执行状态收外界因素影响</li>\n<li><strong>不可在现性</strong>：程序经过多次执行后，虽然其执行时的环境和初始条件都相同，但得到的结果却各不相同</li>\n</ol>\n<h1 id=\"进程的特性\"><a class=\"markdownIt-Anchor\" href=\"#进程的特性\"></a> 进程的特性</h1>\n<ol>\n<li><strong>动态性</strong>（最基本的特征）</li>\n<li><strong>并发性</strong></li>\n<li><strong>独立性</strong></li>\n<li><strong>异步性</strong>：不可预知的速度</li>\n</ol>\n<h1 id=\"进程控制\"><a class=\"markdownIt-Anchor\" href=\"#进程控制\"></a> 进程控制</h1>\n<p>一般包括以下几个方面：</p>\n<ol>\n<li>进程创建</li>\n<li>进程终止</li>\n<li>进程阻塞与唤醒</li>\n<li>进程挂起与激活</li>\n</ol>\n<h1 id=\"进程创建\"><a class=\"markdownIt-Anchor\" href=\"#进程创建\"></a> 进程创建</h1>\n<p>[UNIX 下的进程创建——fork()]{.label .success}</p>\n<h2 id=\"消息机制\"><a class=\"markdownIt-Anchor\" href=\"#消息机制\"></a> 消息机制</h2>\n<p>直接通信方式一一消息缓冲队列</p>\n<p>这是指发送进程利用 OS 所提供的发送命令，直接把消息发送给目标进程。此时，要求发送进程和接收进程都以显式方式提供对方的标识符。通常，系统提供下述两条通信命令(原语):</p>\n<p><mark><strong>Send(Receiver, message): 发送一个消息给 Receiver</strong></mark></p>\n<p><mark><strong>Receive(Sender,message): 接收 Sender 发来的消息</strong></mark></p>\n<p>例如，原语 Send(P，m)表示将消息 m,发送给接收进程 P;而原语 Receive(P，m)则表示接收由 P 发来的消息 m。</p>\n<h1 id=\"进程通信\"><a class=\"markdownIt-Anchor\" href=\"#进程通信\"></a> 进程通信</h1>\n<p>进程通信实例------管道通信方式 Pipe<br />\n:::default<br />\nwrite(fd[1],buf,size); 将 buf 中长为 size 字符的消息送入 fd[1]口<br />\n:::</p>\n<p>:::default<br />\nread(fd[0], buf’,size); 从 fd[O]口读出 size 个字符置于 buf 中<br />\n:::</p>\n<h1 id=\"进程与线程的比较\"><a class=\"markdownIt-Anchor\" href=\"#进程与线程的比较\"></a> 进程与线程的比较</h1>\n<h2 id=\"关于调度的基本单位\"><a class=\"markdownIt-Anchor\" href=\"#关于调度的基本单位\"></a> 关于调度的基本单位</h2>\n<p>在传统 OS 中，拥有资源、独立调度和分配的基本单位都是进程。</p>\n<p>在引入线程的 OS 中，线程作为调度和分派的基本单位，进程作为拥有资源的基本单位。</p>\n<p>在同一进程中，线程的切换不会引起进程切换，在由一个进程中的线程切换到另一个进程中的线程时，将会引起进程切换。</p>\n<h2 id=\"并发性\"><a class=\"markdownIt-Anchor\" href=\"#并发性\"></a> 并发性</h2>\n<p>在引入线程的操作系统中，不仅进程之间可以并发执行，而且在一个进程中的多个线程之间，也可并发执行</p>\n<h2 id=\"拥有资源\"><a class=\"markdownIt-Anchor\" href=\"#拥有资源\"></a> 拥有资源</h2>\n<p>进程是系统中拥有资源的一个基本单位，它可以拥有资源</p>\n<p>线程本身不拥有系统资源，仅有一点保证独立运行的资源</p>\n<p>允许多个线程共享其隶属进程所拥有的资源</p>\n<h2 id=\"独立性\"><a class=\"markdownIt-Anchor\" href=\"#独立性\"></a> 独立性</h2>\n<p>同一进程中的不同线程之间的独立性要比不同进程之间的独立性低得多</p>\n<h2 id=\"开销\"><a class=\"markdownIt-Anchor\" href=\"#开销\"></a> 开销</h2>\n<p>在创建或撤消进程时，OS 所付出的开销将显著大于创建或撤消线程时的开销</p>\n<p>线程切换的代价远低于进程切换的代价。</p>\n<p>同一进程中的多个线程之间的同步和通信也比进程的简单</p>\n<h2 id=\"支持多处理机系统\"><a class=\"markdownIt-Anchor\" href=\"#支持多处理机系统\"></a> 支持多处理机系统</h2>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        },
        {
            "id": "https://735690757.github.io/MongoDB/MongoDB01/",
            "url": "https://735690757.github.io/MongoDB/MongoDB01/",
            "title": "MongoDB的安装与初步使用（Windows平台）",
            "date_published": "2023-08-30T04:20:00.000Z",
            "content_html": "<h1 id=\"初见-mongodb\"><a class=\"markdownIt-Anchor\" href=\"#初见-mongodb\"></a> 初见 MongoDB</h1>\n<h2 id=\"什么是-mongodb\"><a class=\"markdownIt-Anchor\" href=\"#什么是-mongodb\"></a> 什么是 MongoDB？</h2>\n<p>MongoDB 是一个开源的、面向文档的 NoSQL 数据库管理系统。它与传统的关系型数据库（如 MySQL、PostgreSQL）不同，因为它不使用表格来存储数据，而是使用一种称为&quot;文档&quot;的数据结构来组织和存储数据。每个文档是一个包含键值对的数据结构，类似于 JSON 格式，这使得 MongoDB 非常适合存储具有不同结构的数据。</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/30/iqxm3ufLjZ6XOSt.webp\" alt=\"MongoDB.png\" /></p>\n<h1 id=\"mongodb-的安装与服务启动\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-的安装与服务启动\"></a> MongoDB 的安装与服务启动</h1>\n<h2 id=\"下载-mongodb-安装包\"><a class=\"markdownIt-Anchor\" href=\"#下载-mongodb-安装包\"></a> 下载 MongoDB 安装包</h2>\n<p>访问==<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20vZG93bmxvYWQtY2VudGVyI2NvbW11bml0eT09\">https://www.mongodb.com/download-center#community==</span><br />\n或者点击下方连接</p>\n<div class=\"links\"><div class=\"item\" title=\"MongoDB\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20vZG93bmxvYWQtY2VudGVyI2NvbW11bml0eQ==\" data-background-image=\"https://webimages.mongodb.com/_com_assets/cms/kuyjf3vea2hg34taa-horizontal_default_slate_blue.svg?auto=format%252Ccompress\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20vZG93bmxvYWQtY2VudGVyI2NvbW11bml0eQ==\">MogoDB</span>\n          <p class=\"desc\">官方下载地址</p>\n          </div></div></div>\n<p>下载载最新版本的 MongoDB 数据库。</p>\n<h2 id=\"mongodb-安装\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-安装\"></a> MongoDB 安装</h2>\n<ol>\n<li>双击刚刚下载的安装文件(mongodb-XXXX-XXXX-signed.msi)启动安装程序。</li>\n<li>单击【Next】按钮，进入“End-User License Agreement”界面</li>\n<li>勾选“I accept the terms in the License Agreement”选项，单击【Next】按钮进入“Choose Setup Type”界面，该界面中可选择安装类型</li>\n</ol>\n<p>[Complete。此类型将安装所有程序功能，需占用较多的磁盘空间，建议大多数用户使用。]{.label .primary}<br />\n[Custom。此类型允许用户自行选择要安装的程序功能及安装位置，建议高级用户使用。]{.label .primary}</p>\n<ol start=\"4\">\n<li>MongoDB Compass 是 MongoDB 数据库的 GUI 管理系统，默认会选择安装，但是安装速度非常慢。</li>\n</ol>\n<p>值得一提的是，MongoDB 默认会将创建的数据库文件存储在 db 目录下，但是这个目录不会被主动创建，用户需要在 MongoDB 安装完成后手动创建 db 目录。在“C:\\Program Files\\MongoDB\\Server\\4.0\\data\\”目录下创建一个文件夹 db</p>\n<h1 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\"></a> 配置</h1>\n<p>同样的我们也可以将 bin 目录配置到环境变量的 Path 中</p>\n<h1 id=\"启动-mongodb-服务启动与停止\"><a class=\"markdownIt-Anchor\" href=\"#启动-mongodb-服务启动与停止\"></a> 启动 MongoDB 服务（启动与停止）</h1>\n<p>进入如图所示的目录输入<ins>net start MongoDB</ins>启动服务，相应的输入<ins>net stop MongoDB</ins>则为停止服务</p>\n<p><img data-src=\"https://s2.loli.net/2023/08/30/wWe7dPghAMOn31t.png\" alt=\"startStop.png\" /></p>\n<h1 id=\"mongodb-基本命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-基本命令\"></a> MongoDB 基本命令</h1>\n<p>在 cmd 中输入 Mongo 进入 Mongo 的交互界面</p>\n<p>创建数据库:</p>\n<pre class=\"highlight\"><code class=\"mongodb\">use mydb\n</code></pre>\n<p>展示数据库:</p>\n<pre class=\"highlight\"><code class=\"mongodb\">show dbs\n</code></pre>\n<p>删除数据库:</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.dropDatabase()\n</code></pre>\n<p>创建集合：</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.createCollection(&quot;myCollection&quot;)\n</code></pre>\n<p>插入数据：</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.myCollection.insert(&#123;&quot;_id&quot;:1,&quot;name&quot;:&quot;诗岸梦行舟&quot;&#125;)\n</code></pre>\n<p>删除：</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.myCollection.remove(&#123;&quot;_id&quot;:1&#125;)\n</code></pre>\n<p>更新：</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.myCollection.update(&#123;&quot;_id&quot;:1&#125;,&#123;$set&#123;&quot;name&quot;:&quot;Karry.Liu&quot;&#125;&#125;)\n</code></pre>\n<p>查询所有：</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.myCollection.find()\n</code></pre>\n<p>指定查询：</p>\n<pre class=\"highlight\"><code class=\"mongodb\">db.myCollection.find(&#123;&quot;_id&quot;:1&#125;)\n</code></pre>\n",
            "tags": [
                "MongoDB",
                "MongoDB"
            ]
        },
        {
            "id": "https://735690757.github.io/Operate-system/01OS/",
            "url": "https://735690757.github.io/Operate-system/01OS/",
            "title": "操作系统知识点阶段总结",
            "date_published": "2023-08-28T23:50:00.000Z",
            "content_html": "<h1 id=\"引论\"><a class=\"markdownIt-Anchor\" href=\"#引论\"></a> 引论</h1>\n<h2 id=\"操作系统是什么\"><a class=\"markdownIt-Anchor\" href=\"#操作系统是什么\"></a> <strong>操作系统是什么？</strong></h2>\n<p>操作系统是计算机系统中的核心软件之一，它是位于硬件和应用程序之间的一层软件，负责管理和控制计算机的硬件资源，并为应用程序提供一个运行环境。操作系统充当计算机系统的管理者，协调各种硬件和软件资源的分配和调度，以使计算机能够高效、可靠地运行。</p>\n<h2 id=\"为什么要操作系统\"><a class=\"markdownIt-Anchor\" href=\"#为什么要操作系统\"></a> <strong>为什么要操作系统？</strong></h2>\n<p>操作系统的存在是为了解决计算机资源管理和用户程序执行的复杂性。它提供了一种抽象层，使应用程序开发人员不必直接与底层硬件进行交互，从而简化了应用程序的开发和维护。此外，操作系统还负责处理多任务管理、内存管理、文件系统管理、用户接口等，为用户和应用程序提供了一个友好且高效的计算环境。</p>\n<h2 id=\"操作系统的特征是什么\"><a class=\"markdownIt-Anchor\" href=\"#操作系统的特征是什么\"></a> <strong>操作系统的特征是什么？</strong></h2>\n<p>操作系统具有以下几个主要特征：</p>\n<ol>\n<li>\n<p><strong>并发（Concurrency）：</strong> 能够同时处理多个任务或程序，使多个程序可以在同一台计算机上交替执行。</p>\n<p><mark>（并发：同一时间段 并行：同一时刻）</mark></p>\n</li>\n<li>\n<p><strong>共享（Sharing）：</strong> 多个用户和应用程序可以同时访问计算机的资源，如内存、处理器、文件等。</p>\n<p>[操作系统的最基本特征：并发与共享]{.label .info}</p>\n</li>\n<li>\n<p><strong>虚拟（Virtualization）：</strong> 操作系统可以为每个应用程序提供一种虚拟的环境，使其感觉自己独占了计算机资源。</p>\n</li>\n<li>\n<p><strong>异步（asynchronous）：</strong> 异步特性指的是操作系统允许某些任务在进行的过程中，不必等待前一个任务的完成，而可以继续执行其他任务。<mark>（存在不确定性）</mark></p>\n<p>[✔️操作系统的基本特征：并发、共享、虚拟、异步]{.label .success}</p>\n</li>\n<li>\n<p><strong>抽象（Abstraction）：</strong> 操作系统通过抽象化硬件和软件资源，为应用程序提供一个更简单、一致的编程接口。</p>\n</li>\n<li>\n<p><strong>持久性（Persistence）：</strong> 数据和程序可以被存储在持久性存储设备中，并在计算机关闭后保留下来。</p>\n</li>\n<li>\n<p><strong>处理器管理（Processor Management）：</strong> 分配和管理处理器的时间片，以便多个任务可以轮流执行。</p>\n</li>\n<li>\n<p><strong>内存管理（Memory Management）：</strong> 管理计算机的内存资源，包括分配、释放、虚拟内存等。</p>\n</li>\n<li>\n<p><strong>文件系统管理（File System Management）：</strong> 管理文件的存储、组织、检索和保护。</p>\n</li>\n<li>\n<p><strong>设备管理（Device Management）：</strong> 管理输入输出设备，使应用程序能够与设备进行交互。</p>\n</li>\n</ol>\n<h2 id=\"实时操作系统和分时操作系统\"><a class=\"markdownIt-Anchor\" href=\"#实时操作系统和分时操作系统\"></a> 实时操作系统和分时操作系统？</h2>\n<p>实时操作系统（Real-time Operating System，RTOS）和分时操作系统（Time-sharing Operating System）是两种不同类型的操作系统，用于满足不同应用场景下的需求。</p>\n<h3 id=\"实时操作系统rtos\"><a class=\"markdownIt-Anchor\" href=\"#实时操作系统rtos\"></a> <strong>实时操作系统（RTOS）：</strong></h3>\n<p>实时操作系统是专门设计用于处理实时任务的操作系统。实时任务是具有严格时间要求的任务，可以分为硬实时和软实时任务。硬实时任务要求任务必须在严格的时间限制内完成，否则会导致系统错误。软实时任务也有时间要求，但对于这类任务，如果错过了截止日期，系统不会崩溃，但会影响任务的结果的实用性。</p>\n<p>RTOS 致力于确保任务能够按照特定的时间要求得到执行。它通常采用优先级调度策略，确保高优先级的实时任务能够在预定的时间内得到执行。</p>\n<h3 id=\"分时操作系统time-sharing-operating-system\"><a class=\"markdownIt-Anchor\" href=\"#分时操作系统time-sharing-operating-system\"></a> <strong>分时操作系统（Time-sharing Operating System）：</strong></h3>\n<p>分时操作系统旨在支持多用户的共享计算机系统。它允许多个用户通过终端或其他用户界面同时访问系统，每个用户似乎都在独占地使用计算机资源。分时操作系统通过分配时间片（时间片轮转）来在多个任务之间切换，每个任务在时间片结束前都能得到一段时间的执行。</p>\n<p>分时操作系统的目标是实现多任务的并发执行，使用户能够在几乎同时使用计算机资源，这样可以提高资源利用率和用户体验。</p>\n<p>[分时操作系统特征：多路性、独立性、及时性、交互性。详细解释：P10]{.label .info}</p>\n<h2 id=\"单道批处理系统和多道批处理系统\"><a class=\"markdownIt-Anchor\" href=\"#单道批处理系统和多道批处理系统\"></a> 单道批处理系统和多道批处理系统？</h2>\n<p>单道批处理系统（Single Batch Processing System）和多道批处理系统（Multi-Batch Processing System）是两种不同的操作系统工作方式，用于管理和执行计算机中的多个任务。</p>\n<h3 id=\"单道批处理系统\"><a class=\"markdownIt-Anchor\" href=\"#单道批处理系统\"></a> <strong>单道批处理系统：</strong></h3>\n<p>单道批处理系统是早期计算机操作系统的一种。在这种系统中，计算机只能处理一道程序，也就是一个任务，每次只有一个任务在运行。当一个任务执行完成后，才能加载并执行下一个任务。这种系统对于用户和程序员来说，操作不够灵活，因为他们必须等待当前任务执行完成才能继续工作。</p>\n<p>[💔单道批处理系统的缺点：系统中的的资源得不到充分利用！]{.label .danger}</p>\n<p>[✍️注意注意！！！单道批处理系统无并发，不能称之为 OS！！！]{.label .warning}</p>\n<h3 id=\"多道批处理系统\"><a class=\"markdownIt-Anchor\" href=\"#多道批处理系统\"></a> <strong>多道批处理系统：</strong></h3>\n<p>多道批处理系统是在单道批处理系统的基础上发展而来的。这种系统允许计算机在内存中同时加载和管理多个任务，而不需要等待前一个任务的完成。多道批处理系统将内存分割成多个区域，每个区域可以加载一个任务的代码和数据。操作系统会在任务之间进行切换，以实现多个任务的并发执行。这种方式提高了计算机的资源利用率和效率。</p>\n<h2 id=\"os-的类型\"><a class=\"markdownIt-Anchor\" href=\"#os-的类型\"></a> OS 的类型？</h2>\n<ol>\n<li><strong>多道批处理系统（Multi-programming Batch System）：</strong> 多道批处理系统是一种操作系统，允许多个任务（作业）在内存中同时存在，但每个任务的执行是按照一定的调度策略轮流进行的。它旨在提高计算机的资源利用率，通过在任务之间切换以避免 CPU 空闲。每个任务通常独立运行，不需要用户干预。这种系统适用于大量任务需要批量处理，例如批量数据处理任务。</li>\n<li><strong>分时系统（Time-sharing System）：</strong> 分时系统允许多个用户通过终端或用户界面同时访问计算机，每个用户似乎都在独占地使用计算机资源。系统通过快速的任务切换（时间片轮转）实现用户之间的并发执行，每个用户能够迅速交互并使用计算机。分时系统适用于多用户、交互式的环境，如图形用户界面和终端。</li>\n<li><strong>实时系统（Real-time System）：</strong> 实时系统是专门设计用于处理实时任务的操作系统。实时任务具有严格的时间要求，可以分为硬实时和软实时。硬实时任务要求任务必须在严格的时间限制内完成，否则会导致系统错误。软实时任务也有时间要求，但错过截止日期不会导致系统错误。实时系统旨在确保任务能够按照特定的时间要求得到执行，适用于需要在严格时间约束下运行的应用，如飞行控制系统和医疗设备。</li>\n</ol>\n<h2 id=\"操作系统能干什么\"><a class=\"markdownIt-Anchor\" href=\"#操作系统能干什么\"></a> <strong>操作系统能干什么？</strong></h2>\n<p>操作系统的主要任务包括：</p>\n<ul>\n<li>管理计算机的硬件资源，如处理器、内存、硬盘、网络接口等。</li>\n<li>提供多任务管理，使多个应用程序可以同时运行。</li>\n<li>提供虚拟化，将物理资源抽象为多个虚拟资源，提供更好的资源利用率。</li>\n<li>管理文件系统，让用户能够创建、存储、组织和检索文件。</li>\n<li>处理输入输出，使用户和应用程序能够与外部设备进行交互。</li>\n<li>提供用户界面，让用户能够与计算机进行交互，如命令行界面或图形用户界面。</li>\n</ul>\n<h2 id=\"操作系统有哪些\"><a class=\"markdownIt-Anchor\" href=\"#操作系统有哪些\"></a> <strong>操作系统有哪些？</strong></h2>\n<p>常见的操作系统包括：</p>\n<ul>\n<li>Windows：微软开发的操作系统系列，如 Windows 10、Windows 11 等。</li>\n<li>macOS：苹果公司开发的操作系统，用于 Mac 电脑。</li>\n<li>Linux：一种开源的 Unix-like 操作系统，有许多不同的发行版，如 Ubuntu、Fedora、Debian 等。</li>\n<li>Unix：一种经典的多用户多任务操作系统，影响了许多其他操作系统的设计。</li>\n<li>Android：基于 Linux 内核的移动设备操作系统，由谷歌开发。</li>\n<li>iOS：苹果公司用于 iPhone 和 iPad 等移动设备的操作系统。</li>\n<li>OpenHarmony：分布式操作系统，由华为公司开发。</li>\n</ul>\n<h2 id=\"操作系统的新发展\"><a class=\"markdownIt-Anchor\" href=\"#操作系统的新发展\"></a> <strong>操作系统的新发展？</strong></h2>\n<p>操作系统领域一直在不断发展演进。一些新的趋势和发展包括：</p>\n<ul>\n<li><strong>云操作系统：</strong> 针对云计算环境的操作系统，如 Google 的 Chrome OS 和微软的 Azure Sphere。</li>\n<li><strong>嵌入式操作系统：</strong> 用于嵌入式系统，如物联网设备和嵌入式控制器的操作系统，如 FreeRTOS 和 Zephyr。</li>\n<li><strong>容器化和微服务：</strong> 使用容器技术（如 Docker）和微服务架构的操作系统，以支持更高效的应用程序部署和管理。</li>\n<li><strong>实时操作系统（RTOS）：</strong> 针对实时应用程序的操作系统，要求任务能够在严格的时间限制内得到执行。</li>\n<li><strong>量子操作系统：</strong> 随着量子计算的发展，涉及管理量子资源和运行量子算法的操作系统正在探索中。</li>\n</ul>\n<p>这些都只是操作系统领域的一部分发展趋势，操作系统将继续适应新的硬件和应用场景，以满足不断变化的需求。</p>\n<h2 id=\"简单总结\"><a class=\"markdownIt-Anchor\" href=\"#简单总结\"></a> 简单总结！</h2>\n<p>操作系统的定义可归纳为：操作系统是控制和管理计算机系统内各种硬件和软件资源、合理组织计算机工作流程的系统软件 (或程序集合)，是用户与计算机之间的接口。</p>\n<p>操作系统是什么？<mark>是核心系统软件</mark><br />\n操作系统管什么？<mark>控制和管理系统内各资源</mark><br />\n操作系统有何用？<mark>扩充硬件功能，方便用户使用</mark></p>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\"></a> 练习</h2>\n<ol>\n<li>\n<p>一个作业第一次执行时用了 5 分钟，而第二次执行时用了 6 分钟，这说明了操作系统的 []{.gap} 特点。 {.quiz}</p>\n<ul>\n<li>并发</li>\n<li>共享</li>\n<li>虚拟</li>\n<li>异步 {.correct}<br />\n{.options}</li>\n</ul>\n<p>+++primary 解释</p>\n<ul>\n<li>\n<p>异步存在时间不确定性</p>\n<p>+++</p>\n</li>\n</ul>\n</li>\n<li>\n<p>操作系统的最基本的两个特征是资源共享和 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>多道程序设计</li>\n<li>程序的并发执行 {.correct}</li>\n<li>中断</li>\n<li>程序顺序执行<br />\n{.options}</li>\n</ul>\n</li>\n<li>\n<p>单道批处理系统的主要缺点是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>CPU 利用率不高 {.correct}</li>\n<li>失去了交互性</li>\n<li>不具备并行性</li>\n<li>以上都不是<br />\n{.options}</li>\n</ul>\n</li>\n</ol>\n<p>+++primary 解释</p>\n<ul>\n<li>\n<p>实际上 ABC 都是他的缺点，但是 <mark>CPU/资源利用率不高</mark>是他的主要缺点</p>\n<p>+++</p>\n</li>\n</ul>\n<ol start=\"4\">\n<li>\n<p>采用多道程序设计的系统中，系统中的程序道数越多，系统的效率越高。 {.quiz .false}</p>\n</li>\n<li>\n<p>通常将 CPU 模式分为内核态(核心态)和用户态，这样做的目的是为了提高运行速度。 {.quiz .false}</p>\n</li>\n<li>\n<p>操作系统内核能使用特权指令。 {.quiz .true}</p>\n</li>\n</ol>\n<p>+++info 解析</p>\n<ol start=\"4\">\n<li>程序道数多多会导致每个程序分得的内存不够，很多程序所需的数据和代码要临时从磁盘调入内存系统会频繁的进行 I/O，使得系统效率下降！</li>\n<li>是为了提高安全性==（双重工作模式 P20）==</li>\n<li>确实对</li>\n</ol>\n<p>+++</p>\n<h1 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\"></a> 进程</h1>\n<h2 id=\"进程的几个基本状态\"><a class=\"markdownIt-Anchor\" href=\"#进程的几个基本状态\"></a> 进程的几个基本状态</h2>\n<ol>\n<li><strong>就绪状态（Ready）：</strong> 进程已获得除处理器外的所需资源,等待分配处理器资源；只要分配了处理器进程就可执行.就绪进程可以按多个优先级来划分队列.例如,当一个进程由于时间片用完而进入就绪状态时,排入低优先级队列；当进程由 I/O 操作完成而进入就绪状态时,排入高优先级队列.</li>\n<li><strong>运行状态(Running)：</strong> 进程占用处理器资源；处于此状态的进程的数目小于等于处理器的数目.在没有其他进程可以执行时(如所有进程都在阻塞状态),通常会自动执行系统的空闲进程.</li>\n<li><strong>阻塞状态(Blocked)：</strong> 由于进程等待某种条件（如 I/O 操作或进程同步）,在条件满足之前无法继续执行.该事件发生前即使把处理机分配给该进程,也无法运行.</li>\n</ol>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/X8stjGRqdnJPr26.jpg\" alt=\"osStateTransition.jpg\" /></p>\n<h2 id=\"名词解释\"><a class=\"markdownIt-Anchor\" href=\"#名词解释\"></a> 名词解释</h2>\n<p><strong>挂起：</strong> 从内存挂至外存</p>\n<p><strong>时间片：</strong> 程序执行的一段时间</p>\n<p><strong>阻塞：</strong> 发生 I/O 或者其他事件进入阻塞状态</p>\n<h2 id=\"扩展状态考研\"><a class=\"markdownIt-Anchor\" href=\"#扩展状态考研\"></a> 扩展状态（考研）</h2>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/RDfm3M4nLPioruT.jpg\" alt=\"osStateTransitionExtend.jpg\" /></p>\n<h2 id=\"练习-2\"><a class=\"markdownIt-Anchor\" href=\"#练习-2\"></a> 练习</h2>\n<ol>\n<li>\n<p>当 []{.gap} 时，进程从执行状态转变为就绪状态。 {.quiz}</p>\n<ul>\n<li>进程被调度程序选中</li>\n<li>时间片到 {.correct}</li>\n<li>等待某一事件</li>\n<li>等待的事件发生<br />\n{.options}</li>\n</ul>\n</li>\n<li>\n<p>在进程状态转换时，下列 []{.gap} 转换是不可能发生的。 {.quiz}</p>\n<ul>\n<li>就绪态 一&gt; 运行态</li>\n<li>运行态 一&gt; 就绪态</li>\n<li>运行态 一&gt; 阻塞态</li>\n<li>阻塞态 一&gt; 运行态 {.correct}<br />\n{.options}</li>\n</ul>\n</li>\n<li>\n<p>进程和程序的本质区别是 []{.gap} {.quiz}</p>\n<ul>\n<li>前者是动态的，后者是静态的 {.correct}</li>\n<li>前者存储在内存，后者存储在外存</li>\n<li>前者在一个文件中，后者在多个文件中</li>\n<li>前者分时使用 CPU，后者独占 CPU<br />\n{.options}</li>\n</ul>\n</li>\n<li>\n<p>程序运行时独占系统资源，只有程序本身能改变系统资源状态，这是指 []{.gap} {.quiz}</p>\n<ul>\n<li>程序顺序执行的再现性</li>\n<li>并发程序失去再现性</li>\n<li>并发程序失夫封闭性</li>\n<li>程序顺序执行时的封闭性 {.correct}<br />\n{.options}</li>\n</ul>\n</li>\n<li>\n<p>不同的进程必然对应不同的程序。 {.quiz .false}</p>\n</li>\n<li>\n<p>进程状态的转换是由操作系统完成的，对用户是透明的。 {.quiz .true}</p>\n</li>\n</ol>\n<h2 id=\"进程控制块process-control-blockpcb\"><a class=\"markdownIt-Anchor\" href=\"#进程控制块process-control-blockpcb\"></a> 进程控制块（Process Control Block，PCB）</h2>\n<p>每个正在运行或等待运行的进程都有一个对应的 PCB，它包含了进程的各种属性、状态以及与其相关的控制信息。PCB 是操作系统内部用于实现进程管理的重要数据结构之一。</p>\n<ol>\n<li>进程状态（Process State）：表示进程的当前状态，如运行、就绪、阻塞等。操作系统根据进程状态来进行调度和管理。</li>\n<li>程序计数器（Program Counter）：指向进程当前执行的指令的地址，用于恢复进程的执行状态。</li>\n<li>寄存器（Registers）：保存进程的寄存器值，包括通用寄存器、程序状态寄存器等。</li>\n<li>进程优先级（Process Priority）：用于调度器决定哪个进程将获得 CPU 执行时间。</li>\n<li>进程标识符（Process ID）：唯一标识一个进程的数字或字符串。</li>\n<li>进程所拥有的资源信息：如打开的文件列表、分配的内存空间等。</li>\n<li>进程的父子关系：记录进程之间的层次结构，用于实现进程间的通信和协作。</li>\n<li>进程的各种统计信息：如运行时间、等待时间等，用于性能分析和调优。</li>\n</ol>\n<p>PCB 的存在使得操作系统可以高效地进行进程的切换、调度、挂起、恢复等操作。当操作系统需要切换到另一个进程时，它可以保存当前进程的状态信息到其对应的 PCB，然后加载新进程的状态信息，从而实现进程切换。这种切换是操作系统多任务处理的基础，使得多个进程可以在单个 CPU 上共享时间，并且实现了对系统资源的合理分配和利用。</p>\n<h2 id=\"pcb-组织方式\"><a class=\"markdownIt-Anchor\" href=\"#pcb-组织方式\"></a> PCB 组织方式</h2>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/An6JckEslPQOC49.jpg\" alt=\"PCB1.jpg\" /></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/pO4wvVrkN1DdMo8.jpg\" alt=\"PCB2.jpg\" /></p>\n<p><img data-src=\"https://s2.loli.net/2023/08/29/cr1Bm69ez7uKgUZ.jpg\" alt=\"POB3.jpg\" /></p>\n<h2 id=\"练习-3\"><a class=\"markdownIt-Anchor\" href=\"#练习-3\"></a> 练习</h2>\n<ol>\n<li>\n<p>在 PCB 中可以直接或间接找到有关该进程的所有信息。 {.quiz .true}</p>\n</li>\n<li>\n<p>进程由 PCB 和其执行的程序、数据所组成 {.quiz .true}</p>\n</li>\n</ol>\n",
            "tags": [
                "操作系统",
                "OS"
            ]
        }
    ]
}